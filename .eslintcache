[{"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx":"1","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts":"2","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx":"3","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx":"4","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/top.tsx":"5","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/EventCard.tsx":"6","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/all.tsx":"7","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/search.tsx":"8","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/menu.tsx":"9","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/guid.tsx":"10","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/bottomNavi.tsx":"11","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/plan.tsx":"12","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/event.tsx":"13","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/eventlist.tsx":"14","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/layout/layout.tsx":"15","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/editing.tsx":"16","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/mde.tsx":"17","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/dm.tsx":"18","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/config.tsx":"19","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/detail.tsx":"20","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/keyWord.tsx":"21","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/util/util.ts":"22","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/index.ts":"23","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/reducers.ts":"24","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/reducers.ts":"25","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/types.ts":"26","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/types.ts":"27","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/api.ts":"28","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/actions.ts":"29","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/api/index.ts":"30","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/actions.ts":"31","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/progress.tsx":"32","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/message.tsx":"33","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/reducers.ts":"34","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/types.ts":"35","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/api.ts":"36","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/actions.ts":"37","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/privateRoute.tsx":"38","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/pa_management.tsx":"39","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/compe_management.tsx":"40"},{"size":993,"mtime":1618313547000,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1610330413000,"results":"43","hashOfConfig":"42"},{"size":4753,"mtime":1618498637000,"results":"44","hashOfConfig":"42"},{"size":3219,"mtime":1616347668000,"results":"45","hashOfConfig":"42"},{"size":2776,"mtime":1616072982000,"results":"46","hashOfConfig":"42"},{"size":2727,"mtime":1616150364000,"results":"47","hashOfConfig":"42"},{"size":5145,"mtime":1617455203000,"results":"48","hashOfConfig":"42"},{"size":7618,"mtime":1617455765000,"results":"49","hashOfConfig":"42"},{"size":3134,"mtime":1617021787000,"results":"50","hashOfConfig":"42"},{"size":783,"mtime":1612973672000,"results":"51","hashOfConfig":"42"},{"size":2334,"mtime":1617762799000,"results":"52","hashOfConfig":"42"},{"size":7163,"mtime":1617802560000,"results":"53","hashOfConfig":"42"},{"size":1879,"mtime":1615911906000,"results":"54","hashOfConfig":"42"},{"size":4581,"mtime":1618313920000,"results":"55","hashOfConfig":"42"},{"size":4665,"mtime":1618491331000,"results":"56","hashOfConfig":"42"},{"size":22792,"mtime":1618642283000,"results":"57","hashOfConfig":"42"},{"size":496,"mtime":1616824174000,"results":"58","hashOfConfig":"42"},{"size":769,"mtime":1613133202000,"results":"59","hashOfConfig":"42"},{"size":6791,"mtime":1617754703000,"results":"60","hashOfConfig":"42"},{"size":17136,"mtime":1618128235000,"results":"61","hashOfConfig":"42"},{"size":1160,"mtime":1617452874000,"results":"62","hashOfConfig":"42"},{"size":2867,"mtime":1618747177000,"results":"63","hashOfConfig":"42"},{"size":736,"mtime":1616309619000,"results":"64","hashOfConfig":"42"},{"size":1137,"mtime":1618371534000,"results":"65","hashOfConfig":"42"},{"size":1440,"mtime":1618373326000,"results":"66","hashOfConfig":"42"},{"size":1786,"mtime":1618371475000,"results":"67","hashOfConfig":"42"},{"size":3455,"mtime":1618757682000,"results":"68","hashOfConfig":"42"},{"size":11942,"mtime":1618396902000,"results":"69","hashOfConfig":"42"},{"size":1099,"mtime":1618368461000,"results":"70","hashOfConfig":"42"},{"size":1269,"mtime":1618807958000,"results":"71","hashOfConfig":"42"},{"size":609,"mtime":1616398012000,"results":"72","hashOfConfig":"42"},{"size":384,"mtime":1616935969000,"results":"73","hashOfConfig":"42"},{"size":634,"mtime":1617164753000,"results":"74","hashOfConfig":"42"},{"size":629,"mtime":1617159588000,"results":"75","hashOfConfig":"42"},{"size":564,"mtime":1616297148000,"results":"76","hashOfConfig":"42"},{"size":1394,"mtime":1616496004000,"results":"77","hashOfConfig":"42"},{"size":445,"mtime":1616298010000,"results":"78","hashOfConfig":"42"},{"size":844,"mtime":1617709270000,"results":"79","hashOfConfig":"42"},{"size":7644,"mtime":1618472254000,"results":"80","hashOfConfig":"42"},{"size":19389,"mtime":1618814851000,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1bdkhho",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"84"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"84"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx",[],["186","187"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx",["188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],"import AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Hidden from '@material-ui/core/Hidden'\nimport Drawer from '@material-ui/core/Drawer'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MailIcon from '@material-ui/icons/Mail'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport Badge from '@material-ui/core/Badge'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport {makeStyles,Theme,createStyles,withStyles,WithStyles,StyleRules} from '@material-ui/core/styles'\nimport React from 'react'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {Session} from '../store/session/types'\n\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    display: 'flex'\n  },\n  grow : {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n  appBar: {\n    backgroundColor:theme.palette.common.white,\n    boxShadow: \"0 0 0 0\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    padding:\"10px 0px 10px 20px\"\n  }\n})\n\ntype State = {\n  mobileOpen: boolean\n}\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  session:Session\n  handler:Function\n}\n\n\nclass TopBar extends React.Component<Props,State> {\n  constructor(props:any) {\n    super(props)\n    this.state = {\n      mobileOpen: false\n    }\n  }\n  handleMobileToggle = () => {\n    this.setState(state => ({\n      mobileOpen: !state.mobileOpen\n    }))\n  }\n  handleAvatarClick(){\n    if (window.confirm(\"ログアウトしますか？\")) {\n      this.props.handler() \n    }\n  }\n  render() {\n    const { classes,session } = this.props\n    const { mobileOpen } = this.state\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar} >\n        <Toolbar>\n          <Typography  className={classes.grow} >\n            <img src={`${process.env.PUBLIC_URL}/twi_logo.jpeg`} />\n          </Typography>\n          { !session.login &&\n          <IconButton edge=\"end\" color=\"inherit\" arial-label=\"login\">\n            <ExitToAppIcon/>\n          </IconButton>\n           }\n           { session.login &&\n\n           <IconButton size=\"small\">\n           <Tooltip title=\"ログアウト\" aria-label=\"logout\">\n           <Avatar onClick={()=> this.handleAvatarClick()} alt=\"Travis Howard\" src={process.env.PUBLIC_URL + \"/\" + session.auth.avatar} />\n           </Tooltip>\n           </IconButton>\n           }\n        </Toolbar>\n      </AppBar>\n    </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(TopBar))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/top.tsx",["229","230","231","232","233","234"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {List,ListItem,Grid,Container,Theme} from '@material-ui/core'\nimport EventCard from '../components/EventCard'\nimport {Typography,Divider,Button,Box} from '@material-ui/core'\nimport {createStyles,withStyles,WithStyles} from '@material-ui/styles'\nimport TwitterIcon from '@material-ui/icons/Twitter'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    paddingTop: \"50px\"\n  },\n    button: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.common.white,\n    fontWeight:700\n  },\n  main: {\n    [theme.breakpoints.up(\"sm\")]: {\n      borderRightColor: theme.palette.divider,\n      borderRightWidth: \"1px\",\n      borderRightStyle: \"solid\",\n      paddingRight:theme.spacing(3)\n    },\n  },\n  sug: {\n    '& > *': {\n      margin:theme.spacing(2)\n    },\n    textAlign: \"center\",\n    marginTop: theme.spacing(2)\n  },\n  subtitle: {\n    fontWeight:700,\n    color:\"#2a2b52\",\n    [theme.breakpoints.up(\"sm\")]: {\n      fontSize: \"1.0rem\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"1.7rem\"\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      fontSize: \"1.8rem\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n}) \n\n\nclass Top extends React.Component<Props,State> {\n  constructor(props:any) {\n    super(props)\n  }\n  linkTo() {\n    this.props.history.push(\"/events\")\n  }\n  render() {\n    const {classes} = this.props\n    return (\n      <Container maxWidth={\"md\"}>\n      <div className={classes.toolbar}/>\n        <Grid container alignItems=\"center\" justify=\"center\" className={classes.root}>\n          <Grid sm={12}>\n          <Typography className={classes.subtitle} align=\"center\" > \n            イベント告知・出席管理をより簡単に\n          </Typography>\n          </Grid>\n          <Grid sm={12} style={{marginTop:\"20px\"}}>\n           <Typography  align=\"center\" > \n            ゴルフイベント告知管理サイト\n          </Typography>\n          </Grid>\n                  <div className={classes.sug}>\n          <Button size=\"large\" className={classes.button} variant=\"contained\"  color=\"primary\" startIcon={<TwitterIcon/>}>ログイン</Button>\n          <Button size=\"large\"  variant=\"contained\" onClick={()=>{this.linkTo()}} >続きを見る</Button>\n        </div>\n          <Grid container style={{marginTop:\"20px\"}} spacing={2}>\n            {[1,2,3,4,5,6].map((i) => (\n            <Grid xs={12} sm={4} key={i} item >\n            { /*\n              <EventCard />\n             */}\n            </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Top))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/EventCard.tsx",["235","236","237"],"import React from 'react'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles/'\nimport {Card,CardActionArea,CardMedia,CardHeader,CardContent,Avatar,Typography,Divider} from '@material-ui/core/'\nimport { red } from '@material-ui/core/colors'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {Competition} from '../store/app/types'\nimport {dataFormatwithday,dayEditor} from '../util/util'\n\n\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  data:Competition\n}\n\n\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    borderRadius: \"10px\",\n    //boxShadow: \"0 0 0 0\",\n    [theme.breakpoints.up(\"sm\")]: {\n      maxWidth:\"350px\"\n    }\n  },\n  day: {\n    color:theme.palette.primary.dark,\n    marginBottom:\"10px\"\n  },\n  header: {\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    marginTop:0\n  },\n  contents: {\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white\n  },\n  avatar: {\n    backgroundColor: red[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  }\n})\n\nclass EventCard extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {classes,data} = this.props\n    const undecided:boolean = data.event_day === null ? true:false\n    return (\n      <Card className={classes.root} elevation={0} variant=\"outlined\">\n        <CardActionArea onClick={()=> this.props.history.push(\"/events/\" + data.id)}>\n         <CardContent className={classes.contents}>\n         <Typography variant=\"h3\" className={classes.day} >\n         { undecided ? \"日時未定\": dataFormatwithday(data.event_day)}\n        </Typography>\n        <Typography variant=\"h3\" style={{\"marginBottom\":\"10px\"}}>\n          {data.title} \n        </Typography>\n        <Typography variant=\"h3\">\n          {data.club_id === 0 ? data.place_text:data.club.name} \n        </Typography>\n      </CardContent>\n        <CardHeader className={classes.header} avatar={\n          <Avatar src={process.env.PUBLIC_URL + \"/\" + data.user.avatar } aria-label=\"event\" className={classes.avatar}>\n          </Avatar>\n        }\n        title={<Typography style={{fontSize:\"11px\"}} variant=\"body2\">{`${data.user.screen_name}@${data.user.sns_id}` }</Typography>}\n        subheader={<Typography style={{fontSize:\"11px\"}} variant=\"body2\">{dayEditor().to(dayEditor(data.update_at))}</Typography>}\n        />\n        </CardActionArea>\n     </Card>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(EventCard))\n",["238","239"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/all.tsx",["240","241","242","243","244","245"],"import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles'\nimport EventCard from '../components/EventCard'\nimport EventList from '../components/eventlist'\nimport {List,ListItem} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {GetCompetitions} from '../store/app/api'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport {ResetResult} from '../store/system/actions'\nimport querystring from 'query-string'\nimport {SearchLog} from '../util/util'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {Helmet} from 'react-helmet'\n\n\n\ninterface Props extends ReduxProps,RouteComponentProps,WithStyles<typeof styles> {}\n\ntype State = {\n  tabIndex: number\n  page:number\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    flexGrow:1,\n    backgroundColor: theme.palette.background.default,\n  },\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: 0,\n      marginBottom:\"100px\",\n    }\n  },\n  select :{\n    fontSize:\"1.1em\",\n    fontWeight:700,\n    color: theme.palette.grey[700],\n  }\n})\n\nclass All extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = this.parseQuery(this.props)\n  }\n  componentDidMount() {\n    this.props.getCompetitions(this.state.page,this.state.tabIndex)\n  }\n  handeleChange(event:React.ChangeEvent<{}>,newIndex:number) {\n    this.setState({tabIndex:newIndex})\n    //const {page} = this.parseQuery(this.props)\n    this.props.history.push({\n      search: `?p=1&sort=${newIndex}`\n    })\n  }\n  handelePage(page:number) {\n    this.setState({page:page})\n    this.props.history.push({\n      search: `?p=${page}&sort=${this.state.tabIndex}`\n    })\n  }\n  parseQuery(props:Props):State {\n    const parse = querystring.parse(props.location.search)\n    return {\n      tabIndex:parse.sort === undefined ? 1: Number(parse.sort),\n      page:parse.p === undefined ? 1: Number(parse.p)\n    }\n  }\n  componentDidUpdate(prevProps:Props) {\n    if (this.props.location.search !== prevProps.location.search) {\n      const {page,tabIndex} = this.parseQuery(this.props) \n      this.setState({\n        page:page,\n        tabIndex:tabIndex\n      })\n      this.props.getCompetitions(page,tabIndex)\n    }\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  render() {\n    const {tabIndex} = this.state\n    const {classes,competitions,system}  = this.props\n    const competitionsResult = SearchLog(system.result,\"competitions\")\n    const allPage:number = Math.ceil(competitions.allNumber/Number(process.env.REACT_APP_PERNUM))\n    return (\n    <Grid container spacing={2}> \n      <div className=\"All\">\n        <Helmet>\n         <title>みんなのイベント</title>\n        </Helmet>\n      </div>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n           みんなのイベント\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Paper variant=\"outlined\" style={{padding:\"15px 15px 0 15px\",borderRadius:10}}>\n          <Tabs \n            value={tabIndex}\n            textColor=\"inherit\"\n            indicatorColor=\"primary\"\n            variant=\"fullWidth\"\n            centered\n            onChange={(e,val)=> this.handeleChange(e,val)}\n          >\n          <Tab label=\"最新\" style={{fontSize:15}}  value={1}/>\n          <Tab label=\"開催日\" style={{fontSize:15}} value={2}/>\n          <Tab label=\"締切日\" style={{fontSize:15}} value={3}/>\n          </Tabs>\n        </Paper>\n      </Grid>\n     {system.loading.competitions && <Progress/>}\n     {competitionsResult.status !== 200 && !system.loading.competitions && <Message mes={competitionsResult.cause}/>}\n     {competitionsResult.status == 200 && !system.loading.competitions && \n     <>\n      <Grid item xs={12} sm={12} md={12}>\n        <Paper variant=\"outlined\">\n              <EventList data={competitions.payload}/>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={12}>\n        <Pagination shape=\"rounded\" page={this.state.page} onChange={(e,p) => this.handelePage(p)} count={allPage} boundaryCount={5}/>\n      </Grid>\n      </>\n     }\n     </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competitions: state.app.competitions,\n    system:state.system\n  }\n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    getCompetitions(page:number,sort:number){\n      GetCompetitions(page,sort)(dispatch)\n    },\n    resetLog() {\n      dispatch(ResetResult())\n    }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(All)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/search.tsx",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"import React from 'react'\nimport {FormControl,Button,TextField,FormLabel,FormControlLabel,Radio,RadioGroup,InputLabel,Typography,Grid,Paper,Select,MenuItem} from '@material-ui/core'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles'\nimport {dateFormatNotime,SearchLog} from '../util/util'\nimport EventList from '../components/eventlist'\nimport {SearchCompetition} from '../store/app/api'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport querystring from 'query-string'\nimport {ResetResult} from '../store/system/actions'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {Helmet} from 'react-helmet'\n\ninterface Props extends ReduxProps,RouteComponentProps,WithStyles<typeof styles>{}\n\ntype State = {\n  p:number\n  mode:number\n  date:string\n  dis:boolean\n  keyword:string\n}\n\nconst styles = (theme:Theme)=> createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    formLabel: {\n      color: theme.palette.grey[900],\n      fontSize: 15,\n      '&.Mui-focused': {\n        color:theme.palette.primary.main\n      }\n    },\n    helperTxt: {\n      color: theme.palette.info.dark\n    }\n})\n//search?p=x&date=yyyy-mm-dd&mode=x\nclass Search extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = this.parseQuery(props)\n  }\n  execute() {\n    this.props.history.push({\n        search:`?mode=${this.state.mode}&q=${this.state.keyword}&p=${this.state.p}&date=${this.state.date}&k=${Date.now()}`\n    })\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  componentDidUpdate(prevProps:Props) {\n    if (this.props.location.search !== prevProps.location.search) {\n       let parse = this.parseQuery(this.props)\n       this.setState({\n         mode:parse.mode,\n         date:parse.date,\n         keyword:parse.keyword,\n         p: parse.p,\n         dis: parse.mode == 1? true:false\n       })\n       const {p,date,mode,dis,keyword} = parse \n       const inputdate = date == \"\" ? null: date\n       const inputmode = Number(mode)\n       this.props.search(p,keyword,inputdate,inputmode)\n    }\n  }\n  parseQuery(props:Props):State{\n    const parse = querystring.parse(props.location.search)\n    let mode:string = parse.mode == undefined ? \"1\": parse.mode as string\n    let p:string = parse.p == undefined ? \"1\": parse.p as string\n    let date:string = parse.date == undefined ? dateFormatNotime(new Date()): parse.date as string\n    let keyword:string = parse.q == undefined ? \"\": parse.q as string\n    return {\n      mode:Number(mode),\n      p:Number(p),\n      date:date,\n      dis: mode == \"1\" ? true: false,\n      keyword:keyword\n    }\n  }\n  handelePage(page:number) {\n    this.setState({p:page})\n    this.props.history.push({\n      search: `?p=${page}&mode=${this.state.mode}&date=${this.state.date}&keyword=${this.state.keyword}`\n    })\n  }\n  handleRadio(e:React.ChangeEvent<{}>) {\n    if ((e.target as HTMLInputElement).value == '1') {\n      this.setState({\n        mode: 1,\n        dis: true\n      })\n    } else {\n      this.setState({\n        mode: 2,\n        dis: false\n      })\n    }\n  }\n  render() {\n    const {classes,competitions,system} = this.props\n    const searchResult = SearchLog(system.result,\"search\")\n    const allPage:number = Math.ceil(competitions.allNumber/Number(process.env.REACT_APP_PERNUM))\n    return (\n    <Grid container spacing={3}>\n      <div className=\"Search\">\n        <Helmet>\n         <title>検索</title>\n        </Helmet>\n      </div>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n          検索\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Paper elevation={0} variant=\"outlined\" style={{borderRadius:10,padding:15}}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12}>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.formLabel}>日付</FormLabel>\n                  <RadioGroup row  value={this.state.mode} onChange={(e)=>this.handleRadio(e)}>\n                    <FormControlLabel \n                      control={<Radio color=\"default\"/>}\n                      value={1}\n                      labelPlacement=\"end\"\n                      label=\"指定\"\n                     />\n                     <FormControlLabel \n                      control={<Radio color=\"default\"/>}\n                      labelPlacement=\"end\"\n                      value={2}\n                      label=\"未定\"\n                     />\n                  </RadioGroup>\n                </FormControl>\n            </Grid>\n            {\n              this.state.dis &&\n            <Grid item xs={12} sm={12}>\n              <TextField\n               id=\"date\"\n               label=\"開催日\"\n               type=\"date\"\n               value={this.state.date}\n               helperText=\"※選択日以降のイベントを表示します\"\n               FormHelperTextProps={{\n                 className:classes.helperTxt\n               }}\n               onChange={(e)=>this.setState({date:e.target.value})}\n               InputLabelProps={{\n               shrink: true,\n               className: classes.formLabel\n               }}\n             />\n            </Grid>\n            }\n            <Grid item xs={12} sm={12}>\n             <TextField\n              label=\"キーワード\"\n              fullWidth\n              value={this.state.keyword}\n              onChange={(e)=>this.setState({keyword:e.target.value})}\n              InputLabelProps={{\n                shrink: true,\n                className: classes.formLabel\n              }}\n              id=\"filled-size-small\"\n             />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <Button\n              disableElevation\n              disabled={system.loading.search ? true:false}\n              color=\"primary\"\n              variant=\"contained\"\n              style={{color:\"#fff\",fontWeight:700}}\n              onClick={()=>this.execute()}>\n              検索する\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n        {searchResult.status != 200 && searchResult.status != 999 && <Message mes={searchResult.cause}/>}\n        {system.loading.search && <Progress/>}\n        {!system.loading.search && searchResult.status == 200 && \n        <>\n      <Grid item xs={12} sm={12} >\n              <Paper elevation={0} variant=\"outlined\" >\n          <EventList data={competitions.payload} />\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={12}>\n        <Pagination shape=\"rounded\" page={this.state.p} onChange={(e,p) => this.handelePage(p)} count={allPage} boundaryCount={5}/>\n      </Grid>\n      </>\n        }\n    </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competitions: state.app.searchresult,\n    system:state.system\n  } \n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    search(p:number,q:string | null,day:string | null,mode:number) {\n      SearchCompetition(p,q,day,mode)(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Search)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/menu.tsx",["261","262","263","264","265","266","267","268"],"import React from 'react'\nimport {CardContent,Grid,Typography,Card,CardHeader,Theme,List,ListItem,ListItemIcon,Avatar,ListItemAvatar,Divider,ListItemText,Collapse} from '@material-ui/core'\nimport {createStyles,withStyles,WithStyles} from '@material-ui/styles'\nimport {ExpandLess,ExpandMore} from '@material-ui/icons/'\nimport {withRouter,RouteComponentProps,NavLink} from 'react-router-dom'\nimport HomeIcon from '@material-ui/icons/Home'\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts'\nimport {Session} from '../store/session/types'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  session:Session\n}\n\ntype State ={}\n\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    backgroundColor: theme.palette.common.white\n  },\n  main: {\n    backgroundColor: theme.palette.common.white\n  },\n  cardcontents: {\n      padding: 0,\n    \"&:last-child\": {\n      paddingBottom: 0\n    }\n  },\n  manuList: {\n    padding: theme.spacing(2)\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  activeStyle: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.primary.main\n  }\n})\n\nclass Menu extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      selectedIndex:99, \n      open: true\n    }\n  }\n  render() {\n    const {classes,session} = this.props\n    return (\n      <Grid container >\n        <Grid item xs={12} sm={12}>\n          <Card elevation={0} variant=\"outlined\" className={classes.main} >\n            <List component=\"nav\" style={{padding:0}}>\n            { \n              session.login &&\n              <ListItem button divider  component={NavLink} to={\"/users/\" + session.auth.sns_id} activeClassName=\"Mui-selected\">\n                <ListItemIcon>\n                  <HomeIcon/>\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h3\">マイページ</Typography>} />\n              </ListItem>\n            }\n              <ListItem button divider component={NavLink} to=\"/events\" activeClassName=\"Mui-selected\" exact>\n                <ListItemIcon>\n                  <PeopleAltIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h3\">みんなのイベント</Typography>} />\n              </ListItem>\n              <ListItem button divider component={NavLink} to=\"/search\" activeClassName=\"Mui-selected\" exact>\n                <ListItemIcon>\n                  <SearchIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h3\">検索</Typography>} />\n              </ListItem>\n              <ListItem button divider component={NavLink} to=\"/guid\" activeClassName=\"Mui-selected\" exact>\n                <ListItemIcon>\n                  <ImportContactsIcon/>\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h3\">使い方ガイド</Typography>}/>\n              </ListItem>\n            </List>\n          </Card>\n        </Grid>\n      </Grid>\n    )\n  }\n} \n\nexport default withRouter(withStyles(styles,{withTheme:true})(Menu))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/guid.tsx",["269"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Grid,Typography} from '@material-ui/core'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  }\n}) \n\nclass Guid extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Grid container spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h1\">\n              使い方ガイド\n            </Typography>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Guid))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/bottomNavi.tsx",["270","271","272"],"import React from 'react'\nimport {withRouter,RouteComponentProps,NavLink} from 'react-router-dom'\nimport {BottomNavigation,BottomNavigationAction,Theme} from '@material-ui/core'\nimport {createStyles,WithStyles,withStyles} from '@material-ui/styles'\nimport HomeIcon from '@material-ui/icons/Home'\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {Session} from '../store/session/types'\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  session:Session\n}\ninterface State {\n  selected: string\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    borderTop:\"1px solid\",\n    borderTopColor: theme.palette.grey[300]\n  },\n  select: {\n    color: theme.palette.grey[700]\n  }\n})\n\nclass BottomNavi extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      selected: \"\",\n    }\n  }\n  componentDidMount() {\n   let path:string = this.props.location.pathname\n    this.setState({selected:path})\n  }\n  hundleChange(e:React.ChangeEvent<{}>,v:string) {\n    this.props.history.push(v)\n    this.setState({selected:v})\n  }\n  render(){\n    const {selected} = this.state\n    const {classes,session} = this.props\n    return (\n    <div>\n      <BottomNavigation  showLabels={false} className={classes.root} value={selected} onChange={(e,val)=>this.hundleChange(e,val)}>\n      { session.login &&\n        <BottomNavigationAction showLabel={false}  value={\"/users/\" + session.auth.sns_id} className={classes.select} key=\"mypage\" icon={<HomeIcon />} />\n      }\n        <BottomNavigationAction showLabel={false}  value={\"/events\"} className={classes.select} key=\"event\" icon={<PeopleAltIcon />} />\n        <BottomNavigationAction showLabel={false}  value={\"/search\"} className={classes.select} key=\"search\" icon={<SearchIcon />} />\n        <BottomNavigationAction showLabel={false}  value={\"/guid\"} className={classes.select}   key=\"guide\" icon={<ImportContactsIcon />} />\n      </BottomNavigation>\n    </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(BottomNavi))\n\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/plan.tsx",["273","274","275","276","277","278","279","280","281","282","283","284"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Divider,Paper} from '@material-ui/core'\nimport {Box,Container,Button,List,ListItem,ListItemAvatar,ListItemText,Avatar,Grid,Tabs,Tab,Card,Typography} from '@material-ui/core'\nimport EventList from '../components/eventlist'\nimport {User} from '../store/app/types'\nimport {GetUser,GetUserCompetitions} from '../store/app/api'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport querystring from 'query-string'\nimport {SearchLog} from '../util/util'\nimport {ResetResult} from '../store/system/actions'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {Helmet} from 'react-helmet'\n\nconst {TwitterFollowButton} = require(\"react-twitter-embed\")\n\ninterface MatchParams {\n  snsid:string\n}\n\ninterface Props extends ReduxType,RouteComponentProps<MatchParams>,WithStyles<typeof styles>{}\n\ntype State = {\n  tabIndex:number\n  page:number\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n  paper: {\n    padding:\"10px\",\n    borderRadius: \"10px\"\n  },\n  link: {\n    color:theme.palette.primary.dark\n  },\n  back: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"8px\"\n  },\n  select :{\n    fontSize: \"1.0rem\",\n    fontWeight:700,\n    color: theme.palette.grey[700]\n  },\n  selected: {\n    color:\"#0069c0\"\n  },\n  avatar: {\n    width: theme.spacing(5),\n    height: theme.spacing(5)\n  }\n})\n\nclass Plan extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = this.parseQuery(this.props)\n  }\n  componentDidMount() {\n    this.props.getUserCompetitions(this.props.match.params.snsid,this.state.page,this.state.tabIndex)\n    this.props.getUser(this.props.match.params.snsid)\n  }\n  handeleChange(e:React.ChangeEvent<{}>,val:number) {\n    this.setState({tabIndex:val})\n    this.props.history.push({\n      search:`?p=1&sort=${val}`\n    })\n  }\n  handelePage(page:number) {\n    this.setState({page:page})\n    this.props.history.push({\n      search: `?p=${page}&sort=${this.state.tabIndex}`\n    })\n  }\n  parseQuery(props:Props):State {\n    const parse = querystring.parse(props.location.search)\n    return {\n      tabIndex:parse.sort === undefined ? 1: Number(parse.sort),\n      page:parse.p === undefined ? 1: Number(parse.p)\n    }\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  componentDidUpdate(PrevProps:Props) {\n    if (this.props.location.search !== PrevProps.location.search) {\n      const {page,tabIndex} = this.parseQuery(this.props)\n      this.setState({\n        tabIndex:tabIndex,\n        page:page\n      })\n      this.props.getUserCompetitions(this.props.match.params.snsid,page,tabIndex)\n    }\n  }\n  render() {\n    const {classes,user,competitions,system,session} = this.props\n    const {tabIndex} = this.state\n    const competitionsResult = SearchLog(system.result,\"competitions\")\n    const userResult = SearchLog(system.result,\"user\")\n    const mypage = user.sns_id == session.auth.sns_id ? true:false\n    const allPage:number = Math.ceil(competitions.allNumber/Number(process.env.REACT_APP_PERNUM))\n    return (\n    <Grid container direction=\"row\" justify=\"flex-start\" spacing={2} >\n      <Grid item xs={12} sm={12}>\n            {userResult.status != 200 && userResult.status != 999 && <Message mes={userResult.cause}/>}\n            {userResult.status == 200 && !system.loading.user &&\n      <>\n      <div className=\"Plan\">\n        <Helmet>\n         <title>{user.screen_name}さんのマイページ</title>\n        </Helmet>\n      </div>\n        <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n          {user.screen_name}さんのマイページ \n        </Typography >\n        <Paper variant=\"outlined\" className={classes.paper} >\n          <List>\n            <ListItem style={{padding:0}} alignItems=\"flex-start\">\n              <ListItemAvatar style={{minWidth:50}}> \n                <Avatar src={process.env.PUBLIC_URL + \"/nanahara.jpg\"} aria-label=\"event\" className={classes.avatar}/>\n              </ListItemAvatar> \n              <ListItemText \n                  primary={<Typography variant=\"body2\">{user.sns_id}</Typography>}\n                  secondary={<Typography variant=\"body2\">{user.description}</Typography>}/>\n              </ListItem>\n          </List>\n          {!mypage &&\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n            <TwitterFollowButton screenName={user.sns_id} />\n          </Box>\n          }\n          {mypage &&  \n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"left\" style={{marginTop:15}}>\n            <Button variant=\"text\" size=\"medium\"  onClick={()=> this.props.history.push(\"/creation\")} disableElevation  \n               style={{fontWeight:700}} color=\"primary\" >\n                イベント作成\n            </Button>\n            <Button variant=\"text\" size=\"medium\"  onClick={()=> this.props.history.push(\"/config\")} disableElevation color=\"primary\" \n               style={{fontWeight:700}} >\n               設定\n            </Button>\n          </Box>\n          }\n        </Paper>\n            </>\n        }\n    </Grid>\n    <Grid item xs={12} sm={12}>\n     <Paper variant=\"outlined\" className={classes.paper} style={{paddingBottom:0}}>\n      <Tabs \n        value={tabIndex}\n        textColor=\"inherit\"\n        variant=\"fullWidth\"\n        centered\n        onChange={(e,val)=> this.handeleChange(e,val)}>\n              <Tab label=\"今後\" style={{fontSize:15}} value={1} />\n              <Tab label=\"過去\" style={{fontSize:15}} value={2} />\n              <Tab label=\"未定\" style={{fontSize:15}} value={3} />\n      </Tabs>\n     </Paper>\n    </Grid>\n   {competitionsResult.status != 200 && competitionsResult.status != 999  && <Message mes={competitionsResult.cause}/>}\n   {competitionsResult.status == 200 && !system.loading.competitions &&\n    <>\n     <Grid item xs={12} sm={12}>\n       <Paper variant=\"outlined\">\n         <EventList data={competitions.payload} session={session} />\n       </Paper>\n     </Grid>\n     <Grid item xs={12} sm={12} md={12}>\n        <Pagination shape=\"rounded\" page={this.state.page} onChange={(e,p) => this.handelePage(p)} count={allPage} boundaryCount={5}/>\n     </Grid>\n     </>\n   } \n    </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    user:state.app.user,\n    competitions:state.app.competitions,\n    system:state.system,\n    session: state.session\n  }\n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    getUser(id:string){\n      GetUser(id)(dispatch)\n    },\n    getUserCompetitions(id:string,page:number,sort:number) {\n      GetUserCompetitions(id,page,sort)(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Plan)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/event.tsx",["285","286","287","288","289","290"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Divider} from '@material-ui/core'\nimport {Container,Grid,Tabs,Tab,Card,Button,Typography} from '@material-ui/core'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport EventList from '../components/eventlist'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\n\ntype State = {\n  tabindex:number\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingTop: \"20px\" \n    }\n  },\n  button: {\n    color: theme.palette.common.white,\n    fontWeight:700\n  }\n})\n\nclass Event extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      tabindex:0\n    }\n  }\n  handeleChange(e:React.ChangeEvent<{}>,val:number) {\n    this.setState({tabindex:val})\n  }\n  handleNew() {\n    this.props.history.push(\"/creation\")\n  }\n  render() {\n    const {classes} = this.props\n    const {tabindex} = this.state\n    return (\n    <Grid container spacing={2}  >\n    <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n           イベント管理 \n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Button size=\"medium\" onClick={()=> this.handleNew()} startIcon={<AddCircleOutlineIcon/>} variant=\"contained\"  color=\"primary\" className={classes.button}>\n         イベント作成\n        </Button>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Grid container>\n        {\n          [1,2,3,4].map((i) => ( \n            <EventList key={i} editable={true}/>\n          ))\n        }\n        </Grid>\n      </Grid>\n    </Grid>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Event))\n",["291","292"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/eventlist.tsx",["293","294","295"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/layout/layout.tsx",["296","297","298","299","300","301","302","303"],"import React from 'react'\nimport {Route} from 'react-router-dom'\nimport {withRouter,RouteComponentProps,Switch} from 'react-router-dom'\nimport Menu from '../components/menu'\nimport {Container,Theme,Grid,Hidden,Snackbar,SnackbarContent} from '@material-ui/core'\nimport {createStyles,withStyles,WithStyles} from '@material-ui/styles'\nimport Alert from '@material-ui/lab/Alert'\nimport All from '../page/all'\nimport Search from '../page/search'\nimport Guid from '../page/guid'\nimport Plan from '../page/plan'\nimport Editing from '../page/editing'\nimport Events from '../page/event'\nimport Dm from '../page/dm'\nimport Config from '../page/config'\nimport Detail from '../page/detail'\nimport PaManagement from '../page/pa_management'\nimport CompeManagement from '../page/compe_management'\nimport PrivateRoute from '../page/privateRoute'\nimport BottomNavi from '../components/bottomNavi'\nimport TopBar from '../components/TopBar'\nimport {RootState} from '../store'\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport {GetSession,LogOut} from '../store/session/api'\nimport {ResetSnack} from '../store/system/actions'\nimport {snackStatus} from '../store/system/types'\n\ninterface Props extends ReduxProps,RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginBottom:\"100px\",\n    }\n  },\n  root: {\n    paddingTop: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: \"50px 10px 10px 10px\"\n    }\n  },\n  toolbar: theme.mixins.toolbar\n})\n\nclass Layout extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  componentDidMount() {\n   if (this.props.session.auth.id == undefined) {\n    this.props.getSession()\n   }\n  }\n  logouthandler(){\n    this.props.logOut()\n  }\n  getColor(d:snackStatus):string {\n    switch (d){\n      case null:\n        return \"\"\n      case \"success\":\n        return \"green\"\n      case \"info\":\n        return \"blue\"\n      case \"error\":\n        return \"red\"\n      case \"warning\":\n        return \"orange\"\n      defalt:\n        return \"greeen\"\n    }\n  }\n  render() {\n    const {classes,session,system} = this.props\n    const snackColor =  this.getColor(system.snack.status)\n    return (\n    <div>\n      <Container maxWidth={\"lg\"} className={classes.container}>\n        <div className={classes.toolbar}/>\n        <TopBar session={session} handler={()=>this.logouthandler()}/>\n        <Grid container className={classes.root} direction=\"row\" justify=\"center\" spacing={4} >\n          <Hidden smDown >\n            <Grid  md={3} item>\n              <Menu session={session}/>\n            </Grid>\n          </Hidden>\n          <Grid xs={12} sm={12} md={7} item>\n            <Switch>\n              <Route exact path=\"/users/:snsid\" component={Plan} />\n              <Route exact path=\"/events\" component={All} />\n              <Route exact path=\"/events/:id\" component={Detail} />\n              <Route exact path=\"/search\" component={Search} />\n              <Route exact path=\"/guid\" component={Guid} />\n              <Route exact path=\"/dm\" component={Dm} />\n              <PrivateRoute  path=\"/config\" component={Config} auth=\"/events\" />\n              <PrivateRoute  path=\"/creation\" component={Editing} auth=\"/events\" />\n              <PrivateRoute  path=\"/pa_management\" component={PaManagement} auth=\"/events\" />\n              <PrivateRoute  path=\"/compe_management\" component={CompeManagement} auth=\"/events\" />\n            </Switch>\n          </Grid>\n          <Hidden smDown >\n            <Grid  md={2} item>\n            </Grid>\n          </Hidden>\n        </Grid>\n     </Container>\n     <Snackbar open={system.snack.status !== null ? true:false} autoHideDuration={3000}\n     onClose={() => this.props.resetSnack()} anchorOrigin={{horizontal: 'center',vertical:'top'}}>\n     <Alert severity={system.snack.status !== null ? system.snack.status : \"info\"}>\n      {system.snack.message}\n      </Alert>\n     </Snackbar>\n     <Hidden smUp>\n          <BottomNavi session={session} />\n          </Hidden>\n     </div>\n    )\n  }\n}\n\nconst  mapStateToProps = (state:RootState) => {\n  return  {\n    session:state.session,\n    system:state.system\n  }\n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    getSession() {\n      GetSession()(dispatch)\n    },\n    logOut() {\n      LogOut()(dispatch)\n    },\n    resetSnack() {\n      dispatch(ResetSnack())\n    }\n  }\n}\n\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Layout)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/editing.tsx",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/mde.tsx",["335"],"import React from 'react'\nimport SimpleMde from 'react-simplemde-editor'\nimport 'easymde/dist/easymde.min.css'\n\ninterface Props {\n  handlerProps: (s:string) => void\n  data:string\n}\ninterface State {}\n\nexport default class Mde extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  handleChange(e:string) {\n    this.props.handlerProps(e)\n  }\n  render() {\n    return (\n      <SimpleMde value={this.props.data} onChange={(e)=> this.handleChange(e)}/>\n    )\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/dm.tsx",["336"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Grid,Typography} from '@material-ui/core'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  }\n}) \n\nclass Dm extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Grid container spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h1\">\n              DM送信\n            </Typography>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Dm))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/config.tsx",["337","338","339","340"],"import React from 'react'\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Box,Button,TextField,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport {Helmet} from 'react-helmet'\nimport {RootState} from '../store'\nimport {ResetResult} from '../store/system/actions'\nimport {PostRealNameData} from '../store/app/api'\nimport {PostRealName} from '../store/app/types'\nimport {GetSession} from '../store/session/api'\nimport {SearchLog} from '../util/util'\n\ninterface Props extends ReduxType,RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {\n  real_name: {\n    name: {\n      error:boolean\n      error_message:string\n      value:string\n    }\n    kana: {\n      error:boolean,\n      error_message: string\n      value:string\n    }\n  }\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n  paper: {\n    padding:\"20px\",\n    borderRadius: \"10px\"\n  },\n  formLabel: {\n    color: theme.palette.grey[900],\n    fontSize: 15,\n    '&.Mui-focused': {\n      color:theme.palette.primary.main\n    }\n  },\n  helperTxt: {\n    color: theme.palette.info.dark\n  }\n}) \n\nclass Config extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      real_name: {\n        name: {\n          error:false,\n          error_message:\"\",\n          value:this.props.session.auth.real_name == null ? \"\": this.props.session.auth.real_name\n        },\n        kana: {\n          error:false,\n          error_message: \"\",\n          value:this.props.session.auth.real_name_kana == null ? \"\": this.props.session.auth.real_name_kana\n        }\n      }\n    }\n  }\n  componentDidMount() {\n    this.props.getSession()\n  }\n  checkName() {\n    const {real_name} = this.state\n    real_name.name.error = false\n    real_name.name.error_message = \"\" \n    if (real_name.name.value == \"\") {\n      real_name.name.error = true\n      real_name.name.error_message = \"氏名を入力してください\"\n      this.setState({\n        ...this.state,\n        real_name: {\n          ...this.state.real_name,\n          name: {\n            ...this.state.real_name.name,\n            error:real_name.name.error, \n            error_message: real_name.name.error_message \n          }\n        }\n      })\n    }\n  }\n  checkKana() {\n    const {real_name} = this.state\n    real_name.kana.error = false\n    real_name.kana.error_message = \"\" \n    if (real_name.kana.value == \"\") {\n      real_name.kana.error = true\n      real_name.kana.error_message = \"ふりがなを入力してください\"\n      this.setState({\n        ...this.state,\n        real_name: {\n          ...this.state.real_name,\n          kana: {\n            ...this.state.real_name.kana,\n            error:real_name.kana.error, \n            error_message: real_name.kana.error_message \n          }\n        }\n      })\n    }\n  }\n  send() {\n    this.checkName()\n    this.checkKana()\n    if (!this.state.real_name.name.error && !this.state.real_name.kana.error) {\n      let data = {\n        id: this.props.session.auth.id,\n        real_name: this.state.real_name.name.value,\n        real_name_kana: this.state.real_name.kana.value\n      }\n      this.props.postRealName(data)\n    }\n  }\n  componentWillUnmount() {\n    this.props.getSession()\n    this.props.resetLog()\n  }\n  render() {\n    const {classes,session,system} = this.props\n    const {real_name} = this.state\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <div className=\"Plan\">\n              <Helmet>\n                <title>設定</title>\n              </Helmet>\n            </div>\n            <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n              設定\n            </Typography>\n            <Paper variant=\"outlined\" className={classes.paper}>\n              <Typography variant=\"h2\" style={{marginBottom:\"10px\"}}>\n                氏名を登録する\n              </Typography>\n              <Typography variant=\"caption\">\n                参加イベントの主催者に氏名を通知することができます。\n              </Typography>\n              <Box style={{marginTop:13}}>\n                <TextField label=\"氏名\" error={real_name.name.error} value={real_name.name.value} helperText={real_name.name.error_message} \n                fullWidth required id=\"name\" variant=\"standard\" InputLabelProps={{\n                shrink: true,\n                className: classes.formLabel\n                }}\n                onChange={(e)=> this.setState({\n                   ...this.state, \n                   real_name: {\n                     ...this.state.real_name,\n                     name: {\n                       ...this.state.real_name.name,\n                       value: e.target.value\n                     }\n                   }\n                  })}\n                />\n              </Box>\n              <Box style={{marginTop:13}}>\n                <TextField label=\"ふりがな\" error={real_name.kana.error} value={real_name.kana.value} helperText={real_name.kana.error_message} \n                fullWidth required id=\"kana\" variant=\"standard\" InputLabelProps={{\n                shrink: true,\n                className: classes.formLabel\n                }}\n                onChange={(e)=> this.setState({\n                   ...this.state, \n                   real_name: {\n                     ...this.state.real_name,\n                     kana: {\n                       ...this.state.real_name.kana,\n                       value: e.target.value\n                     }\n                   }\n                  })}\n                />\n              </Box>\n              <Box style={{marginTop:15}}>\n                <Button\n                 disableElevation\n                 disabled={system.loading.user}\n                 color=\"primary\"\n                 variant=\"contained\"\n                 style={{color:\"#fff\",fontWeight:700}}\n                 onClick={()=> this.send()}>\n                 保存する\n              </Button>\n              </Box>\n            </Paper>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    session:state.session,\n    system: state.system\n  }\n}\n\nconst mapDispatchProps = (dispatch:Dispatch) => {\n  return {\n    postRealName(data:PostRealName) {\n      PostRealNameData(data)(dispatch)\n    },\n    getSession() {\n      GetSession()(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchProps>\n\n\nexport default connect(mapStateToProps,mapDispatchProps)(withRouter(withStyles(styles,{withTheme:true})(Config)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/detail.tsx",["341","342","343","344","345","346","347","348","349","350","351","352","353"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Box,Divider,TextField,Button,Avatar,List,colors,ListItem,CircularProgress,ListItemAvatar,ListItemText,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport marked from 'marked'\nimport {Competition} from '../store/app/types'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport KeyWords from '../components/keyWord'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport {PostComments,GetCompetition,GetParticipants,GetComments,PostPatricipant} from '../store/app/api'\nimport {ResetResult} from '../store/system/actions'\nimport Progress from '../components/progress'\nimport {nl2br,dataFormatwithday,dateFormat,dayEditor,ExtractionParticipants,SearchLog} from '../util/util'\nimport { useParams } from 'react-router-dom'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport {PostParticipant,PostComment} from '../store/app/types'\nimport {Helmet} from 'react-helmet'\n\n\ninterface MatchParams {\n  id:string\n}\n\ninterface Props extends ReduxProps,RouteComponentProps<MatchParams>,WithStyles<typeof styles>{}\ntype State = {\n  comment_str:string\n  error:boolean\n  helper:string\n  close:boolean\n  timer:ReturnType<typeof setInterval> | null\n}\n\nconst styles = (theme:Theme) => createStyles({\n  day: {\n    color:theme.palette.primary.dark\n  },\n  mde: {\n    '& img': {\n      width:\"100%\",\n      height:\"100%\",\n      objectFit: 'fill'\n    }\n  },\n  sanka:{\n   '& > *': {\n        margin: theme.spacing(1)\n      }\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.common.white,\n    fontWeight:700\n  },\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  paper: {\n    minHeight: \"100px\",\n    padding: \"15px\",\n    borderRadius: \"10px\"\n  },\n  label:{\n   color: \"black\"\n  },\n  wrapIcon: {\n    verticalAlign: 'bottom',\n    display: 'inline-flex'\n  },\n  title: {\n   '&::first-line': {\n      textAlign:\"center\"\n    }\n  },\n  box: {\n    marginBottom:15\n  }\n}) \n\n\nclass CompeDetail extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state =  {\n      comment_str:\"\",\n      error:false,\n      helper:\"\",\n      close: this.props.competition.status == 0 || dayEditor().isAfter(dayEditor(this.props.competition.event_deadline))  ? true:false,\n      timer: this.props.competition.status == 0 ? null:setInterval(() => this.closeAccept(),1000)\n    }\n  }\n  componentDidMount() {\n    const id = this.props.match.params.id\n    this.props.getdata(Number(id))\n    this.props.getParti(Number(id))\n    this.props.getComments(Number(id))\n  }\n  closeAccept() {\n    let now = dayEditor(new Date())\n    let closetime = dayEditor(this.props.competition.event_deadline)\n    let endtime = dayEditor(this.props.competition.event_day)\n    this.setState({\n      close: now.isAfter(closetime) || now.isAfter(endtime)\n    })\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n    if (this.state.timer !== null) {\n      clearInterval(this.state.timer)\n    }\n  }\n  handleParticipant(cid:number,status:number) {\n    const {participants} = this.props\n    let id:number \n    let result = participants.find(val => val.user_id == this.props.session.auth.id)\n    if (result == undefined) {\n      id = 0\n    } else {\n      id = result.id\n    }\n    this.props.postParticipant({\n      id:id,\n      competition_id:cid,\n      user_id:this.props.session.auth.id,\n      status:status,\n    })\n  }\n  send() {\n    if (this.state.comment_str == \"\" ) {\n      this.setState({error:true,helper:\"入力してください\"})\n      return\n    }\n    let data = {\n      competition_id:this.props.competition.id,\n      user_id:this.props.session.auth.id,\n      message:this.state.comment_str\n    }\n    this.props.postCom(data)\n  }\n  componentDidUpdate(privprops:Props) {\n    if (privprops.system !== this.props.system) {\n      if (SearchLog(this.props.system.result,\"comments\").status == 200 ) {\n        this.setState({\n          ...this.state,\n          comment_str:\"\",\n          error:false,\n          helper:\"\"\n        })\n      }\n    }\n  }\n  render() {\n    const {classes,session,competition,system,participants,comments} = this.props\n    const undecided:boolean = competition.event_day === null ? true:false\n    const commentResult = SearchLog(system.result,\"comments\")\n    const participantsResult = SearchLog(system.result,\"participants\")\n    const over = competition.capacity !== null && ExtractionParticipants(1,participants).length >= competition.capacity ? true:false\n    return (\n      <Grid container spacing={1}>\n        { system.loading.competition && <Progress/> }\n        { !system.loading.competition && competition.id !== undefined &&\n          <Grid item xs={12} sm={12}>\n          <div className=\"Detail\">\n            <Helmet>\n              <title>{competition.title}</title>\n            </Helmet>\n         </div>\n            <Box display=\"flex\" justifyContent=\"center\">\n             <List style={{paddingTop:0}}>\n                  <ListItem style={{padding:0}} button onClick={()=>this.props.history.push(\"/users/\" + competition.user.sns_id)}>\n                   <ListItemAvatar style={{minWidth:40}}> \n                    <Avatar src={process.env.PUBLIC_URL + \"/\"+ competition.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"caption\" component=\"p\">{competition.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\">@{competition.user.sns_id}</Typography>}/>\n                  </ListItem>\n             </List>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" className={classes.box}>\n              <Typography variant=\"h1\" component=\"h1\" dangerouslySetInnerHTML={{__html:nl2br(competition.title)}} style={{lineHeight:1.4}} > \n              </Typography>\n            </Box>\n               {competition.keyword !== null && \n             <Box display=\"flex\" justifyContent=\"center\" className={classes.box}>\n                  <KeyWords keyWords={competition.keyword.split(\",\")}/>\n            </Box>\n               }\n          </Grid>\n        }\n          <Grid item xs={12} sm={12}>\n            <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n            { !system.loading.competition && competition.id !== undefined &&\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                <Typography variant=\"h3\" style={{lineHeight:1.4}}>\n                 {competition.place_text == null ? \"開催場所：未定\" : competition.place_text} \n                </Typography>\n              </Grid>\n             <Grid item xs={12} sm={12}>\n                <Typography variant=\"h3\">\n                   <span> 開催日時 : {competition.event_day == null ? \"未定\" : dataFormatwithday(competition.event_day)} </span>\n                </Typography>\n              </Grid>\n             {competition.event_deadline !== null &&\n              <Grid item xs={12} sm={12}>\n                <Typography variant=\"h3\">\n                 受付期限 : {dataFormatwithday(competition.event_deadline)} \n                </Typography>\n              </Grid>\n             }\n              <Grid item xs={12} sm={12}>\n                <Divider/>\n                <div className={classes.mde} style={{lineHeight:1.6}} dangerouslySetInnerHTML={{__html:marked(competition.contents,{breaks:true})}}/>\n              </Grid>\n            </Grid>\n            }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper elevation={0} variant=\"outlined\"  style={{border:\"3px solid #6ec6ff\"}} className={classes.paper}>\n            { !session.login &&\n            <>\n              <Typography component=\"p\" align=\"center\" style={{fontWeight:700}}>\n                このイベントに参加する場合は、まずログインをしてください\n              </Typography>\n              <Typography component=\"p\" align=\"center\" >\n                <Button size=\"large\" className={classes.button} variant=\"contained\" disableElevation  color=\"primary\" startIcon={<TwitterIcon/>}>\n                ログイン\n                </Button>\n              </Typography>\n              </>\n            }\n            {\n              session.login && !this.state.close &&\n              <>\n               <Typography component=\"p\" align=\"center\" style={{fontWeight:700}}>\n               {over &&\n                 <span style={{color:colors.red[500]}}>このイベントは定員に達しました</span>\n               }\n               {!over &&\n                <span>このイベントに参加しますか？</span>\n               }\n              </Typography>\n              <Typography component=\"p\" className={classes.sanka} align=\"center\" style={{fontWeight:700}}>\n                <Button variant=\"contained\" disableElevation disabled={!!system.loading.participants || over} \n                onClick={() => this.handleParticipant(competition.id,1)} color=\"primary\"  style={{color:\"white\",fontWeight:700}}>\n                  参加する\n                </Button>\n                <Button variant=\"contained\" disableElevation disabled={!!system.loading.participants}\n                onClick={() => this.handleParticipant(competition.id,2)} color=\"secondary\" style={{color:\"white\",fontWeight:700}}>\n                  興味あり\n                </Button>\n                <Button variant=\"contained\" disableElevation disabled={!!system.loading.participants}\n                onClick={() => this.handleParticipant(competition.id,3)}  color=\"default\" style={{fontWeight:700}}>\n                  不参加\n                </Button>\n              </Typography>\n              </>\n            }\n            { this.state.close && session.login &&\n            <>\n              <Typography component=\"p\" align=\"center\" style={{fontWeight:700}}>\n                <span style={{color:colors.red[700]}}>このイベントの受付は終了しました</span>\n              </Typography>\n              </>\n            }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12}> \n            {participantsResult.status !== 200 && <Paper elevation={0} variant=\"outlined\" className={classes.paper}><Message mes={participantsResult.cause}/></Paper>}\n            {system.loading.participants && <Progress/>}\n            {!system.loading.participants && participantsResult.status === 200 &&\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={4}>\n                <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                  <Typography variant=\"caption\" style={{fontWeight:700}}>\n                  参加者({ExtractionParticipants(1,participants).length}人) { competition.capacity == null || competition.capacity == 0 ? \"\": \"/ 定員:\" + competition.capacity + \"人\"}\n                  </Typography>\n                  <Divider/>\n                  <List  style={{padding:\"5px\"}}>\n                  { ExtractionParticipants(1,participants).map((data) => (\n                  <ListItem style={{padding:0}} key={data.user_id}>\n                   <ListItemAvatar style={{padding:0,minWidth:40}}> \n                    <Avatar  src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                   primary={<Typography variant=\"caption\" component=\"p\">{data.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" component=\"p\">@{data.user.sns_id}</Typography>}/>\n                  </ListItem>\n                  ))}\n                </List>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                  <Typography variant=\"caption\" style={{fontWeight:700}}>\n                  興味あり({ExtractionParticipants(2,participants).length}人)\n                  </Typography>\n                  <Divider/>\n                  <List  style={{padding:\"5px\"}}>\n                  { ExtractionParticipants(2,participants).map((data) => (\n                  <ListItem style={{padding:0}} key={data.user_id}>\n                   <ListItemAvatar style={{padding:0,minWidth:40}}> \n                    <Avatar  src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                   primary={<Typography variant=\"caption\" component=\"p\">{data.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" component=\"p\">@{data.user.sns_id}</Typography>}/>\n                  </ListItem>\n                  ))}\n                </List>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                <Typography variant=\"caption\" style={{fontWeight:700}}>\n                  不参加({ExtractionParticipants(3,participants).length}人) \n                  </Typography>\n                  <Divider/>\n                  <List  style={{padding:\"5px\"}}>\n                  { ExtractionParticipants(3,participants).map((data) => (\n                  <ListItem style={{padding:0}} key={data.user_id}>\n                   <ListItemAvatar style={{padding:0,minWidth:40}}> \n                    <Avatar  src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"caption\" component=\"p\">{data.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" component=\"p\">@{data.user.sns_id}</Typography>}/>\n                  </ListItem>\n                  ))}\n                </List>\n                </Paper>\n              </Grid>\n            </Grid>\n            }\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper variant=\"outlined\" className={classes.paper}>\n            <Typography  variant=\"h2\" className={classes.wrapIcon}>\n             <CommentIcon/>コメント\n            </Typography>\n            {system.loading.comments && <Progress/>}\n            {!system.loading.comments && commentResult.status == 200 &&\n            <List>\n              { comments.map((data) => (\n                  <ListItem key={data.id} divider style={{padding:0}} alignItems=\"flex-start\">\n                   <ListItemAvatar style={{minWidth:40,verticalAlign:\"top\"}} > \n                    <Avatar src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"body2\" component=\"p\" dangerouslySetInnerHTML={{__html:nl2br(data.message)}}></Typography>}\n                  secondary={<Typography variant=\"caption\">{data.user.screen_name}・{dayEditor().to(dayEditor(data.update_at))} </Typography>}/>\n                  </ListItem>\n              ))}\n            </List>\n            }\n            { session.login &&\n            <>\n            <TextField  fullWidth multiline required id=\"comment\" style={{marginTop:10}} placeholder=\"コメント\" value={this.state.comment_str}\n            onChange={(e) => this.setState({comment_str:e.target.value}) }\n            variant=\"outlined\" error={this.state.error} helperText={this.state.helper} InputLabelProps={{className:classes.label}}/>\n            <Button variant=\"contained\" disableElevation disabled={!!system.loading.comments}  onClick={() => this.send()} color=\"primary\"  style={{marginTop:20,color:\"white\",fontWeight:700}}>\n              投稿する\n            </Button>\n            </>\n            }\n            </Paper>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competition: state.app.competition,\n    participants: state.app.participants,\n    comments: state.app.comments,\n    system:state.system,\n    session:state.session\n  }\n}\nconst mapDispatchToProps = (dispatch:Dispatch)=>{\n  return {\n     getdata(id:number){\n       GetCompetition(id)(dispatch)\n     },\n     resetLog() {\n       dispatch(ResetResult())\n     },\n     getParti(id:number){\n       GetParticipants(id)(dispatch)\n     },\n     getComments(id:number){\n       GetComments(id)(dispatch)\n     },\n     postParticipant(data:PostParticipant){\n       PostPatricipant(data)(dispatch)\n     },\n     postCom(data:PostComment) {\n       PostComments(data)(dispatch)\n     }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(CompeDetail)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/keyWord.tsx",["354","355","356"],"import React from 'react'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles/'\nimport {Chip} from '@material-ui/core/'\nimport { red,grey,blue } from '@material-ui/core/colors'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  keyWords:string[]\n}\n\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n      root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.3),\n        color: theme.palette.common.white,\n        padding:5,\n        backgroundColor: blue[600],\n        fontSize:12,\n        fontWeight:600\n      }\n    }\n})\n\nclass KeyWords extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {classes,keyWords} = this.props\n    return (\n      <div className={classes.root}>\n        {\n          keyWords.map((s:string)=> ( \n            <Chip size=\"small\" label={s} />\n          )) \n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(KeyWords))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/util/util.ts",["357","358","359","360","361"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/index.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/reducers.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/reducers.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/types.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/types.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/api.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/actions.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/api/index.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/actions.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/progress.tsx",["362"],"import React from 'react'\nimport {Grid,CircularProgress} from '@material-ui/core'\n\ninterface Props {\n}\ninterface State {}\n\nexport default class Progress extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Grid container alignItems=\"center\" justify=\"center\">\n          <CircularProgress/>\n      </Grid>\n    )\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/message.tsx",["363"],"import React from 'react'\nimport {Grid,Paper,Typography} from '@material-ui/core'\n\ninterface Props {\n  mes:string\n}\ninterface State {}\n\nexport default class Message extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n       <Grid sm={12} md={12} item style={{width:\"100%\"}}>\n          <Paper elevation={0}  style={{alignItems:\"center\",padding:\"30px 0 30px 0\",border:\"1px solid #dfdfdf\"}}>\n            <Typography  variant=\"h2\" align=\"center\" style={{color:\"#808080\"}}>\n             {this.props.mes}\n            </Typography>\n          </Paper>\n       </Grid>\n    )\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/reducers.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/types.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/api.ts",["364","365"],"import {SetLoading,SetSnack,SetResult} from '../system/actions'\nimport {SetSessionAuth} from './actions'\nimport {SetSessionLogin} from './actions'\nimport {DelSession} from './actions'\nimport * as types from './types'\nimport client,* as api from '../../api' \nimport {Dispatch} from 'redux'\n\n\nexport const GetSession = () => {\n  return async (dispatch:Dispatch) => {\n    await client.get(api.API_SESSION).then((res)=> {\n      dispatch(SetSessionAuth(res.data))\n      dispatch(SetSessionLogin(true))\n      dispatch(SetResult({name:\"session\",status:200,cause:\"ok\"}))\n    }).catch(error => {\n      if (error.response) {\n        dispatch(SetResult({name:\"session\",status:error.response.status,cause:error.response.data.cause}))\n      }\n      dispatch(SetSessionLogin(false))\n    })\n  }\n}\n\nexport const LogOut = () => {\n  return async (dispatch:Dispatch) => {\n    await client.delete(api.API_LOGOUT).then((res) => {\n      dispatch(SetSessionLogin(false))\n      dispatch(DelSession())\n      dispatch(SetResult({name:\"logout\",status:200,cause:\"ok\"}))\n      dispatch(SetSnack({status:\"success\",message:\"ログアウトしました\"}))\n    }).catch(error => {\n      if (error.response) {\n        dispatch(SetResult({name:\"logout\",status:error.response.status,cause:error.response.data.cause}))\n      }\n      dispatch(SetSnack({status:\"error\",message:\"ログアウトに失敗しました\"}))\n    })\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/actions.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/privateRoute.tsx",["366","367"],"import React from 'react'\nimport {Redirect,Route,RouteComponentProps,withRouter,RouteProps} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {RootState} from '../store'\n\ninterface Props extends ReduxProps,RouteComponentProps {\n  path:string,\n  component:any\n  auth:string\n}\n\nclass PrivateRoute extends React.Component<Props,{}> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {session} = this.props\n    if (session.login) {\n      return (<Route exact path={this.props.path} component={this.props.component}/>)\n    } else {\n      return (<Redirect to={this.props.auth}/>)\n    }\n  }\n}\n\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    session:state.session\n  }\n}\n\ntype ReduxProps = ReturnType<typeof mapStateToProps>\n\nexport default connect(mapStateToProps)(withRouter(PrivateRoute)) \n\n\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/pa_management.tsx",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React from 'react'\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {FormControl,InputLabel,Select,MenuItem,Avatar,IconButton,Box,Button,TextField,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport {Helmet} from 'react-helmet'\nimport {RootState} from '../store'\nimport DeleteRounded from '@material-ui/icons/DeleteRounded'\nimport {ResetResult} from '../store/system/actions'\nimport {Participant,BundleParticipant,PostParticipant} from '../store/app/types'\nimport {GetParticipants,PostBundlePatricipant} from '../store/app/api'\nimport {SearchLog} from '../util/util'\nimport querystring from 'query-string'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Progress from '../components/progress'\n\ntype transaction = {\n    uid:number\n    status:number\n  }\n\ninterface Props extends ReduxType,RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {\n  participants: transaction[]\n  disable:boolean\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n     formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  paper: {\n    padding:\"5px\",\n    borderRadius: \"10px\"\n  },\n  helperTxt: {\n    color: theme.palette.info.dark\n  }\n}) \n\nclass PaManagement extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      participants:[] as transaction[],\n      disable:true\n    }\n  }\n  componentDidMount() {\n    const cid = this.queryParse()\n    this.props.getParti(Number(cid))\n  }\n  componentDidUpdate(Prov:Props) {\n    if (Prov.participants != this.props.participants) {\n      const data = [] as transaction[]\n      this.props.participants.map((val) => {\n        data.push(\n          {\n            uid:val.user_id,\n            status:val.status,\n          }\n        )\n      })\n      this.setState({disable:true,participants:data})\n    }\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  handleChange(uid:number,status:number) {\n    const {participants} = this.props\n    const data = this.state.participants.slice()\n    let disable = true \n    data.map(val => {\n      if (val.uid == uid) {\n        val.status = status\n      }\n    })\n    data.map((v1) => {\n      let result = participants.find((v2) => v1.uid == v2.user_id)\n      if (result == undefined) return\n      if (result.status !== v1.status) {\n        disable = false\n      }\n    })\n    this.setState({disable:disable,participants:data})\n  }\n  send() {\n    const {participants} = this.state\n    let sendData:BundleParticipant = {} as BundleParticipant\n    let temparray:PostParticipant[] = [] as PostParticipant[]\n    //削除あるか？\n    let result = participants.find(val => val.status === 4)\n    if (result !== undefined) {\n      if (!window.confirm(\"削除が含まれます。本当に削除しますか？\")) {\n        return\n      }\n    }\n    participants.map((v1) => {\n      let result = this.props.participants.find((v2) => v2.user_id == v1.uid)\n      if (result != undefined && result.status !== v1.status) {\n        let tmp:PostParticipant = {\n            id: result.id,\n            competition_id:result.competition_id,\n            user_id:v1.uid,\n            status:v1.status\n          }\n          temparray.push(tmp)\n      }\n    })\n    sendData.transaction = temparray\n    this.props.postParticipant(sendData)\n  }\n  getStatus(uid:number):number{\n    let d = this.state.participants.find((val) => val.uid === uid)\n    return d == undefined ? 4: d.status\n  }\n  queryParse():string {\n    const parse = querystring.parse(this.props.location.search)\n    return parse.cid == undefined ? \"0\": parse.cid as string\n  }\n  render() {\n    const {classes,system,participants} = this.props\n    const results = SearchLog(system.result,\"participants\")\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <div className=\"PaManagement\">\n              <Helmet>\n                <title>参加者管理</title>\n              </Helmet>\n            </div>\n          <Grid item xs={12} sm={12}>\n           <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n              参加者管理\n            </Typography>\n            <Typography variant=\"caption\">\n               参加者の削除など主催者権限で参加状況の変更をすることができます。\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper variant=\"outlined\" className={classes.paper}>\n              { system.loading.participants && <Progress/>}\n              { !system.loading.participants && results.status == 200 &&\n              <List>\n                { participants.map(val => ( \n                  <ListItem key={val.id} divider alignItems=\"center\" >\n                    <ListItemAvatar>\n                      <Avatar \n                        src={process.env.PUBLIC_URL + \"/\" + val.user.avatar} />\n                    </ListItemAvatar>\n                    <ListItemText primary={\n                       <React.Fragment>\n                      <Typography variant=\"caption\">\n                        {val.user.screen_name}\n                      </Typography>\n                      <Typography variant=\"caption\" component=\"p\" >\n                        {val.user.sns_id}\n                      </Typography>\n                      </React.Fragment>\n                     }\n                    />\n                    <ListItemSecondaryAction>\n                    <FormControl className={classes.formControl}>\n                          <Select\n                            value={this.getStatus(val.user_id)}\n                            onChange={(e) => this.handleChange(val.user_id,Number(e.target.value))}\n                          >\n                            <MenuItem value={1}>参加</MenuItem>\n                            <MenuItem value={2}>興味あり</MenuItem>\n                            <MenuItem value={3}>不参加</MenuItem>\n                            <MenuItem value={4}>削除する</MenuItem>\n                          </Select>\n                      </FormControl>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ) \n                )}\n              </List>\n              }\n              <Box style={{padding:20}}>\n                <Button color=\"primary\" disabled={this.state.disable} style={{color:\"#fff\",fontWeight:700}}\n                variant=\"contained\" disableElevation onClick={() => this.send()}>\n                  保存する\n                </Button>\n              </Box>\n            </Paper>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    participants:state.app.participants,\n    system: state.system\n  }\n}\n\nconst mapDispatchProps = (dispatch:Dispatch) => {\n  return {\n    getParti(id:number){\n       GetParticipants(id)(dispatch)\n    },\n    postParticipant(data:BundleParticipant){\n      PostBundlePatricipant(data)(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchProps>\n\n\nexport default connect(mapStateToProps,mapDispatchProps)(withRouter(withStyles(styles,{withTheme:true})(PaManagement)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/compe_management.tsx",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","severity":1,"message":"417","line":3,"column":8,"nodeType":"418","messageId":"419","endLine":3,"endColumn":18},{"ruleId":"416","severity":1,"message":"420","line":4,"column":8,"nodeType":"418","messageId":"419","endLine":4,"endColumn":17},{"ruleId":"416","severity":1,"message":"421","line":5,"column":9,"nodeType":"418","messageId":"419","endLine":5,"endColumn":13},{"ruleId":"416","severity":1,"message":"422","line":5,"column":14,"nodeType":"418","messageId":"419","endLine":5,"endColumn":22},{"ruleId":"416","severity":1,"message":"423","line":5,"column":23,"nodeType":"418","messageId":"419","endLine":5,"endColumn":35},{"ruleId":"416","severity":1,"message":"424","line":5,"column":36,"nodeType":"418","messageId":"419","endLine":5,"endColumn":48},{"ruleId":"416","severity":1,"message":"425","line":6,"column":8,"nodeType":"418","messageId":"419","endLine":6,"endColumn":12},{"ruleId":"416","severity":1,"message":"426","line":7,"column":8,"nodeType":"418","messageId":"419","endLine":7,"endColumn":11},{"ruleId":"416","severity":1,"message":"427","line":8,"column":8,"nodeType":"418","messageId":"419","endLine":8,"endColumn":12},{"ruleId":"416","severity":1,"message":"428","line":9,"column":9,"nodeType":"418","messageId":"419","endLine":9,"endColumn":19},{"ruleId":"416","severity":1,"message":"429","line":9,"column":20,"nodeType":"418","messageId":"419","endLine":9,"endColumn":31},{"ruleId":"416","severity":1,"message":"430","line":10,"column":8,"nodeType":"418","messageId":"419","endLine":10,"endColumn":13},{"ruleId":"416","severity":1,"message":"431","line":13,"column":10,"nodeType":"418","messageId":"419","endLine":13,"endColumn":17},{"ruleId":"416","severity":1,"message":"432","line":15,"column":8,"nodeType":"418","messageId":"419","endLine":15,"endColumn":15},{"ruleId":"416","severity":1,"message":"433","line":16,"column":8,"nodeType":"418","messageId":"419","endLine":16,"endColumn":22},{"ruleId":"416","severity":1,"message":"434","line":17,"column":8,"nodeType":"418","messageId":"419","endLine":17,"endColumn":14},{"ruleId":"416","severity":1,"message":"435","line":18,"column":8,"nodeType":"418","messageId":"419","endLine":18,"endColumn":23},{"ruleId":"416","severity":1,"message":"436","line":19,"column":8,"nodeType":"418","messageId":"419","endLine":19,"endColumn":18},{"ruleId":"416","severity":1,"message":"437","line":20,"column":8,"nodeType":"418","messageId":"419","endLine":20,"endColumn":21},{"ruleId":"416","severity":1,"message":"438","line":21,"column":9,"nodeType":"418","messageId":"419","endLine":21,"endColumn":16},{"ruleId":"416","severity":1,"message":"439","line":22,"column":9,"nodeType":"418","messageId":"419","endLine":22,"endColumn":18},{"ruleId":"440","severity":1,"message":"441","line":190,"column":3,"nodeType":"442","messageId":"443","endLine":192,"endColumn":4},{"ruleId":"416","severity":1,"message":"444","line":194,"column":12,"nodeType":"418","messageId":"419","endLine":194,"endColumn":19},{"ruleId":"416","severity":1,"message":"445","line":2,"column":8,"nodeType":"418","messageId":"419","endLine":2,"endColumn":14},{"ruleId":"416","severity":1,"message":"446","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":14},{"ruleId":"416","severity":1,"message":"447","line":6,"column":8,"nodeType":"418","messageId":"419","endLine":6,"endColumn":14},{"ruleId":"416","severity":1,"message":"421","line":8,"column":8,"nodeType":"418","messageId":"419","endLine":8,"endColumn":12},{"ruleId":"416","severity":1,"message":"448","line":9,"column":8,"nodeType":"418","messageId":"419","endLine":9,"endColumn":17},{"ruleId":"416","severity":1,"message":"432","line":10,"column":8,"nodeType":"418","messageId":"419","endLine":10,"endColumn":15},{"ruleId":"416","severity":1,"message":"422","line":11,"column":8,"nodeType":"418","messageId":"419","endLine":11,"endColumn":16},{"ruleId":"416","severity":1,"message":"424","line":12,"column":8,"nodeType":"418","messageId":"419","endLine":12,"endColumn":20},{"ruleId":"416","severity":1,"message":"423","line":13,"column":8,"nodeType":"418","messageId":"419","endLine":13,"endColumn":20},{"ruleId":"416","severity":1,"message":"449","line":14,"column":8,"nodeType":"418","messageId":"419","endLine":14,"endColumn":16},{"ruleId":"416","severity":1,"message":"450","line":15,"column":8,"nodeType":"418","messageId":"419","endLine":15,"endColumn":16},{"ruleId":"416","severity":1,"message":"426","line":19,"column":8,"nodeType":"418","messageId":"419","endLine":19,"endColumn":11},{"ruleId":"416","severity":1,"message":"451","line":20,"column":8,"nodeType":"418","messageId":"419","endLine":20,"endColumn":13},{"ruleId":"416","severity":1,"message":"452","line":21,"column":8,"nodeType":"418","messageId":"419","endLine":21,"endColumn":25},{"ruleId":"416","severity":1,"message":"453","line":22,"column":9,"nodeType":"418","messageId":"419","endLine":22,"endColumn":19},{"ruleId":"416","severity":1,"message":"454","line":22,"column":61,"nodeType":"418","messageId":"419","endLine":22,"endColumn":71},{"ruleId":"416","severity":1,"message":"455","line":80,"column":13,"nodeType":"418","messageId":"419","endLine":80,"endColumn":23},{"ruleId":"456","severity":1,"message":"457","line":86,"column":13,"nodeType":"458","endLine":86,"endColumn":68},{"ruleId":"416","severity":1,"message":"421","line":3,"column":9,"nodeType":"418","messageId":"419","endLine":3,"endColumn":13},{"ruleId":"416","severity":1,"message":"422","line":3,"column":14,"nodeType":"418","messageId":"419","endLine":3,"endColumn":22},{"ruleId":"416","severity":1,"message":"459","line":4,"column":8,"nodeType":"418","messageId":"419","endLine":4,"endColumn":17},{"ruleId":"416","severity":1,"message":"432","line":5,"column":20,"nodeType":"418","messageId":"419","endLine":5,"endColumn":27},{"ruleId":"416","severity":1,"message":"426","line":5,"column":35,"nodeType":"418","messageId":"419","endLine":5,"endColumn":38},{"ruleId":"440","severity":1,"message":"441","line":54,"column":3,"nodeType":"442","messageId":"443","endLine":56,"endColumn":4},{"ruleId":"416","severity":1,"message":"460","line":3,"column":29,"nodeType":"418","messageId":"419","endLine":3,"endColumn":38},{"ruleId":"416","severity":1,"message":"432","line":3,"column":80,"nodeType":"418","messageId":"419","endLine":3,"endColumn":87},{"ruleId":"440","severity":1,"message":"441","line":52,"column":3,"nodeType":"442","messageId":"443","endLine":54,"endColumn":4},{"ruleId":"412","replacedBy":"461"},{"ruleId":"414","replacedBy":"462"},{"ruleId":"416","severity":1,"message":"420","line":6,"column":8,"nodeType":"418","messageId":"419","endLine":6,"endColumn":17},{"ruleId":"416","severity":1,"message":"459","line":8,"column":8,"nodeType":"418","messageId":"419","endLine":8,"endColumn":17},{"ruleId":"416","severity":1,"message":"421","line":10,"column":9,"nodeType":"418","messageId":"419","endLine":10,"endColumn":13},{"ruleId":"416","severity":1,"message":"422","line":10,"column":14,"nodeType":"418","messageId":"419","endLine":10,"endColumn":22},{"ruleId":"416","severity":1,"message":"444","line":95,"column":12,"nodeType":"418","messageId":"419","endLine":95,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":128,"column":33,"nodeType":"465","messageId":"466","endLine":128,"endColumn":35},{"ruleId":"416","severity":1,"message":"467","line":2,"column":82,"nodeType":"418","messageId":"419","endLine":2,"endColumn":92},{"ruleId":"416","severity":1,"message":"468","line":2,"column":115,"nodeType":"418","messageId":"419","endLine":2,"endColumn":121},{"ruleId":"416","severity":1,"message":"469","line":2,"column":122,"nodeType":"418","messageId":"419","endLine":2,"endColumn":130},{"ruleId":"463","severity":1,"message":"464","line":69,"column":26,"nodeType":"465","messageId":"466","endLine":69,"endColumn":28},{"ruleId":"416","severity":1,"message":"470","line":71,"column":27,"nodeType":"418","messageId":"419","endLine":71,"endColumn":30},{"ruleId":"463","severity":1,"message":"464","line":72,"column":31,"nodeType":"465","messageId":"466","endLine":72,"endColumn":33},{"ruleId":"463","severity":1,"message":"464","line":79,"column":34,"nodeType":"465","messageId":"466","endLine":79,"endColumn":36},{"ruleId":"463","severity":1,"message":"464","line":80,"column":28,"nodeType":"465","messageId":"466","endLine":80,"endColumn":30},{"ruleId":"463","severity":1,"message":"464","line":81,"column":34,"nodeType":"465","messageId":"466","endLine":81,"endColumn":36},{"ruleId":"463","severity":1,"message":"464","line":82,"column":34,"nodeType":"465","messageId":"466","endLine":82,"endColumn":36},{"ruleId":"463","severity":1,"message":"464","line":87,"column":17,"nodeType":"465","messageId":"466","endLine":87,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":98,"column":46,"nodeType":"465","messageId":"466","endLine":98,"endColumn":48},{"ruleId":"463","severity":1,"message":"471","line":195,"column":30,"nodeType":"465","messageId":"466","endLine":195,"endColumn":32},{"ruleId":"463","severity":1,"message":"471","line":195,"column":60,"nodeType":"465","messageId":"466","endLine":195,"endColumn":62},{"ruleId":"463","severity":1,"message":"464","line":197,"column":56,"nodeType":"465","messageId":"466","endLine":197,"endColumn":58},{"ruleId":"416","severity":1,"message":"429","line":2,"column":9,"nodeType":"418","messageId":"419","endLine":2,"endColumn":20},{"ruleId":"416","severity":1,"message":"428","line":2,"column":42,"nodeType":"418","messageId":"419","endLine":2,"endColumn":52},{"ruleId":"416","severity":1,"message":"472","line":2,"column":86,"nodeType":"418","messageId":"419","endLine":2,"endColumn":92},{"ruleId":"416","severity":1,"message":"473","line":2,"column":93,"nodeType":"418","messageId":"419","endLine":2,"endColumn":107},{"ruleId":"416","severity":1,"message":"432","line":2,"column":108,"nodeType":"418","messageId":"419","endLine":2,"endColumn":115},{"ruleId":"416","severity":1,"message":"474","line":2,"column":129,"nodeType":"418","messageId":"419","endLine":2,"endColumn":137},{"ruleId":"416","severity":1,"message":"475","line":4,"column":9,"nodeType":"418","messageId":"419","endLine":4,"endColumn":19},{"ruleId":"416","severity":1,"message":"476","line":4,"column":20,"nodeType":"418","messageId":"419","endLine":4,"endColumn":30},{"ruleId":"440","severity":1,"message":"441","line":15,"column":3,"nodeType":"442","messageId":"443","endLine":17,"endColumn":4},{"ruleId":"416","severity":1,"message":"438","line":2,"column":40,"nodeType":"418","messageId":"419","endLine":2,"endColumn":47},{"ruleId":"416","severity":1,"message":"477","line":9,"column":8,"nodeType":"418","messageId":"419","endLine":9,"endColumn":12},{"ruleId":"416","severity":1,"message":"469","line":10,"column":8,"nodeType":"418","messageId":"419","endLine":10,"endColumn":16},{"ruleId":"416","severity":1,"message":"432","line":4,"column":15,"nodeType":"418","messageId":"419","endLine":4,"endColumn":22},{"ruleId":"416","severity":1,"message":"420","line":5,"column":13,"nodeType":"418","messageId":"419","endLine":5,"endColumn":22},{"ruleId":"416","severity":1,"message":"427","line":5,"column":93,"nodeType":"418","messageId":"419","endLine":5,"endColumn":97},{"ruleId":"416","severity":1,"message":"478","line":7,"column":9,"nodeType":"418","messageId":"419","endLine":7,"endColumn":13},{"ruleId":"416","severity":1,"message":"479","line":9,"column":8,"nodeType":"418","messageId":"419","endLine":9,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":107,"column":32,"nodeType":"465","messageId":"466","endLine":107,"endColumn":34},{"ruleId":"463","severity":1,"message":"471","line":112,"column":32,"nodeType":"465","messageId":"466","endLine":112,"endColumn":34},{"ruleId":"463","severity":1,"message":"471","line":112,"column":60,"nodeType":"465","messageId":"466","endLine":112,"endColumn":62},{"ruleId":"463","severity":1,"message":"464","line":113,"column":32,"nodeType":"465","messageId":"466","endLine":113,"endColumn":34},{"ruleId":"463","severity":1,"message":"471","line":169,"column":31,"nodeType":"465","messageId":"466","endLine":169,"endColumn":33},{"ruleId":"463","severity":1,"message":"471","line":169,"column":67,"nodeType":"465","messageId":"466","endLine":169,"endColumn":69},{"ruleId":"463","severity":1,"message":"464","line":170,"column":31,"nodeType":"465","messageId":"466","endLine":170,"endColumn":33},{"ruleId":"416","severity":1,"message":"432","line":4,"column":15,"nodeType":"418","messageId":"419","endLine":4,"endColumn":22},{"ruleId":"416","severity":1,"message":"420","line":5,"column":9,"nodeType":"418","messageId":"419","endLine":5,"endColumn":18},{"ruleId":"416","severity":1,"message":"480","line":5,"column":24,"nodeType":"418","messageId":"419","endLine":5,"endColumn":28},{"ruleId":"416","severity":1,"message":"481","line":5,"column":29,"nodeType":"418","messageId":"419","endLine":5,"endColumn":32},{"ruleId":"416","severity":1,"message":"427","line":5,"column":33,"nodeType":"418","messageId":"419","endLine":5,"endColumn":37},{"ruleId":"416","severity":1,"message":"482","line":44,"column":12,"nodeType":"418","messageId":"419","endLine":44,"endColumn":20},{"ruleId":"412","replacedBy":"483"},{"ruleId":"414","replacedBy":"484"},{"ruleId":"416","severity":1,"message":"432","line":7,"column":8,"nodeType":"418","messageId":"419","endLine":7,"endColumn":15},{"ruleId":"416","severity":1,"message":"485","line":13,"column":8,"nodeType":"418","messageId":"419","endLine":13,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":103,"column":55,"nodeType":"465","messageId":"466","endLine":103,"endColumn":57},{"ruleId":"416","severity":1,"message":"486","line":5,"column":46,"nodeType":"418","messageId":"419","endLine":5,"endColumn":61},{"ruleId":"416","severity":1,"message":"487","line":13,"column":8,"nodeType":"418","messageId":"419","endLine":13,"endColumn":14},{"ruleId":"440","severity":1,"message":"441","line":48,"column":3,"nodeType":"442","messageId":"443","endLine":50,"endColumn":4},{"ruleId":"463","severity":1,"message":"464","line":52,"column":35,"nodeType":"465","messageId":"466","endLine":52,"endColumn":37},{"ruleId":"488","severity":1,"message":"489","line":71,"column":7,"nodeType":"490","messageId":"491","endLine":72,"endColumn":24},{"ruleId":"492","severity":1,"message":"493","line":71,"column":7,"nodeType":"418","messageId":"494","endLine":71,"endColumn":13,"fix":"495"},{"ruleId":"496","severity":1,"message":"497","line":71,"column":7,"nodeType":"490","messageId":"498","endLine":72,"endColumn":24},{"ruleId":"416","severity":1,"message":"499","line":77,"column":11,"nodeType":"418","messageId":"419","endLine":77,"endColumn":21},{"ruleId":"416","severity":1,"message":"427","line":4,"column":117,"nodeType":"418","messageId":"419","endLine":4,"endColumn":121},{"ruleId":"416","severity":1,"message":"500","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":17},{"ruleId":"416","severity":1,"message":"501","line":7,"column":16,"nodeType":"418","messageId":"419","endLine":7,"endColumn":21},{"ruleId":"416","severity":1,"message":"502","line":32,"column":6,"nodeType":"418","messageId":"419","endLine":32,"endColumn":13},{"ruleId":"463","severity":1,"message":"464","line":198,"column":22,"nodeType":"465","messageId":"466","endLine":198,"endColumn":24},{"ruleId":"416","severity":1,"message":"503","line":204,"column":12,"nodeType":"418","messageId":"419","endLine":204,"endColumn":17},{"ruleId":"463","severity":1,"message":"464","line":206,"column":13,"nodeType":"465","messageId":"466","endLine":206,"endColumn":15},{"ruleId":"504","severity":1,"message":"505","line":221,"column":26,"nodeType":"506","messageId":"507","endLine":221,"endColumn":28},{"ruleId":"463","severity":1,"message":"464","line":246,"column":41,"nodeType":"465","messageId":"466","endLine":246,"endColumn":43},{"ruleId":"463","severity":1,"message":"464","line":264,"column":21,"nodeType":"465","messageId":"466","endLine":264,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":283,"column":22,"nodeType":"465","messageId":"466","endLine":283,"endColumn":24},{"ruleId":"463","severity":1,"message":"471","line":370,"column":60,"nodeType":"465","messageId":"466","endLine":370,"endColumn":62},{"ruleId":"504","severity":1,"message":"505","line":379,"column":21,"nodeType":"506","messageId":"507","endLine":379,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":394,"column":36,"nodeType":"465","messageId":"466","endLine":394,"endColumn":38},{"ruleId":"463","severity":1,"message":"464","line":395,"column":35,"nodeType":"465","messageId":"466","endLine":395,"endColumn":37},{"ruleId":"463","severity":1,"message":"464","line":396,"column":35,"nodeType":"465","messageId":"466","endLine":396,"endColumn":37},{"ruleId":"463","severity":1,"message":"464","line":397,"column":31,"nodeType":"465","messageId":"466","endLine":397,"endColumn":33},{"ruleId":"463","severity":1,"message":"464","line":399,"column":38,"nodeType":"465","messageId":"466","endLine":399,"endColumn":40},{"ruleId":"463","severity":1,"message":"464","line":400,"column":48,"nodeType":"465","messageId":"466","endLine":400,"endColumn":50},{"ruleId":"416","severity":1,"message":"508","line":441,"column":33,"nodeType":"418","messageId":"419","endLine":441,"endColumn":44},{"ruleId":"463","severity":1,"message":"464","line":451,"column":22,"nodeType":"465","messageId":"466","endLine":451,"endColumn":24},{"ruleId":"463","severity":1,"message":"464","line":456,"column":15,"nodeType":"465","messageId":"466","endLine":456,"endColumn":17},{"ruleId":"463","severity":1,"message":"471","line":519,"column":55,"nodeType":"465","messageId":"466","endLine":519,"endColumn":57},{"ruleId":"463","severity":1,"message":"464","line":659,"column":18,"nodeType":"465","messageId":"466","endLine":659,"endColumn":20},{"ruleId":"463","severity":1,"message":"471","line":661,"column":18,"nodeType":"465","messageId":"466","endLine":661,"endColumn":20},{"ruleId":"463","severity":1,"message":"464","line":692,"column":29,"nodeType":"465","messageId":"466","endLine":692,"endColumn":31},{"ruleId":"463","severity":1,"message":"471","line":693,"column":45,"nodeType":"465","messageId":"466","endLine":693,"endColumn":47},{"ruleId":"463","severity":1,"message":"471","line":699,"column":43,"nodeType":"465","messageId":"466","endLine":699,"endColumn":45},{"ruleId":"463","severity":1,"message":"471","line":706,"column":29,"nodeType":"465","messageId":"466","endLine":706,"endColumn":31},{"ruleId":"463","severity":1,"message":"471","line":706,"column":57,"nodeType":"465","messageId":"466","endLine":706,"endColumn":59},{"ruleId":"463","severity":1,"message":"464","line":707,"column":29,"nodeType":"465","messageId":"466","endLine":707,"endColumn":31},{"ruleId":"440","severity":1,"message":"441","line":12,"column":3,"nodeType":"442","messageId":"443","endLine":14,"endColumn":4},{"ruleId":"440","severity":1,"message":"441","line":15,"column":3,"nodeType":"442","messageId":"443","endLine":17,"endColumn":4},{"ruleId":"416","severity":1,"message":"509","line":13,"column":9,"nodeType":"418","messageId":"419","endLine":13,"endColumn":18},{"ruleId":"463","severity":1,"message":"464","line":75,"column":30,"nodeType":"465","messageId":"466","endLine":75,"endColumn":32},{"ruleId":"463","severity":1,"message":"464","line":95,"column":30,"nodeType":"465","messageId":"466","endLine":95,"endColumn":32},{"ruleId":"416","severity":1,"message":"510","line":128,"column":20,"nodeType":"418","messageId":"419","endLine":128,"endColumn":27},{"ruleId":"416","severity":1,"message":"511","line":4,"column":66,"nodeType":"418","messageId":"419","endLine":4,"endColumn":82},{"ruleId":"416","severity":1,"message":"512","line":6,"column":9,"nodeType":"418","messageId":"419","endLine":6,"endColumn":20},{"ruleId":"416","severity":1,"message":"513","line":16,"column":33,"nodeType":"418","messageId":"419","endLine":16,"endColumn":43},{"ruleId":"416","severity":1,"message":"514","line":17,"column":10,"nodeType":"418","messageId":"419","endLine":17,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":91,"column":44,"nodeType":"465","messageId":"466","endLine":91,"endColumn":46},{"ruleId":"463","severity":1,"message":"464","line":92,"column":44,"nodeType":"465","messageId":"466","endLine":92,"endColumn":46},{"ruleId":"463","severity":1,"message":"464","line":118,"column":55,"nodeType":"465","messageId":"466","endLine":118,"endColumn":57},{"ruleId":"463","severity":1,"message":"464","line":119,"column":16,"nodeType":"465","messageId":"466","endLine":119,"endColumn":18},{"ruleId":"463","severity":1,"message":"464","line":132,"column":32,"nodeType":"465","messageId":"466","endLine":132,"endColumn":34},{"ruleId":"463","severity":1,"message":"464","line":145,"column":65,"nodeType":"465","messageId":"466","endLine":145,"endColumn":67},{"ruleId":"416","severity":1,"message":"515","line":157,"column":11,"nodeType":"418","messageId":"419","endLine":157,"endColumn":28},{"ruleId":"463","severity":1,"message":"464","line":281,"column":128,"nodeType":"465","messageId":"466","endLine":281,"endColumn":130},{"ruleId":"463","severity":1,"message":"464","line":347,"column":63,"nodeType":"465","messageId":"466","endLine":347,"endColumn":65},{"ruleId":"416","severity":1,"message":"516","line":4,"column":10,"nodeType":"418","messageId":"419","endLine":4,"endColumn":13},{"ruleId":"416","severity":1,"message":"517","line":4,"column":14,"nodeType":"418","messageId":"419","endLine":4,"endColumn":18},{"ruleId":"440","severity":1,"message":"441","line":30,"column":3,"nodeType":"442","messageId":"443","endLine":32,"endColumn":4},{"ruleId":"463","severity":1,"message":"464","line":38,"column":46,"nodeType":"465","messageId":"466","endLine":38,"endColumn":48},{"ruleId":"463","severity":1,"message":"464","line":65,"column":12,"nodeType":"465","messageId":"466","endLine":65,"endColumn":14},{"ruleId":"463","severity":1,"message":"471","line":75,"column":14,"nodeType":"465","messageId":"466","endLine":75,"endColumn":16},{"ruleId":"463","severity":1,"message":"471","line":84,"column":14,"nodeType":"465","messageId":"466","endLine":84,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":85,"column":64,"nodeType":"465","messageId":"466","endLine":85,"endColumn":66},{"ruleId":"440","severity":1,"message":"441","line":9,"column":3,"nodeType":"442","messageId":"443","endLine":11,"endColumn":4},{"ruleId":"440","severity":1,"message":"441","line":10,"column":3,"nodeType":"442","messageId":"443","endLine":12,"endColumn":4},{"ruleId":"416","severity":1,"message":"518","line":1,"column":9,"nodeType":"418","messageId":"419","endLine":1,"endColumn":19},{"ruleId":"416","severity":1,"message":"519","line":5,"column":13,"nodeType":"418","messageId":"419","endLine":5,"endColumn":18},{"ruleId":"416","severity":1,"message":"520","line":2,"column":55,"nodeType":"418","messageId":"419","endLine":2,"endColumn":65},{"ruleId":"440","severity":1,"message":"441","line":13,"column":3,"nodeType":"442","messageId":"443","endLine":15,"endColumn":4},{"ruleId":"416","severity":1,"message":"467","line":6,"column":21,"nodeType":"418","messageId":"419","endLine":6,"endColumn":31},{"ruleId":"416","severity":1,"message":"521","line":6,"column":55,"nodeType":"418","messageId":"419","endLine":6,"endColumn":65},{"ruleId":"416","severity":1,"message":"522","line":6,"column":77,"nodeType":"418","messageId":"419","endLine":6,"endColumn":86},{"ruleId":"416","severity":1,"message":"523","line":9,"column":8,"nodeType":"418","messageId":"419","endLine":9,"endColumn":21},{"ruleId":"416","severity":1,"message":"524","line":11,"column":9,"nodeType":"418","messageId":"419","endLine":11,"endColumn":20},{"ruleId":"463","severity":1,"message":"471","line":65,"column":27,"nodeType":"465","messageId":"466","endLine":65,"endColumn":29},{"ruleId":"504","severity":1,"message":"505","line":67,"column":41,"nodeType":"506","messageId":"507","endLine":67,"endColumn":43},{"ruleId":"504","severity":1,"message":"505","line":85,"column":18,"nodeType":"506","messageId":"507","endLine":85,"endColumn":20},{"ruleId":"463","severity":1,"message":"464","line":86,"column":19,"nodeType":"465","messageId":"466","endLine":86,"endColumn":21},{"ruleId":"504","severity":1,"message":"525","line":90,"column":19,"nodeType":"506","messageId":"526","endLine":90,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":91,"column":53,"nodeType":"465","messageId":"466","endLine":91,"endColumn":55},{"ruleId":"463","severity":1,"message":"464","line":92,"column":18,"nodeType":"465","messageId":"466","endLine":92,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":92,"column":32,"nodeType":"527","messageId":"528","endLine":92,"endColumn":38},{"ruleId":"504","severity":1,"message":"505","line":110,"column":27,"nodeType":"506","messageId":"507","endLine":110,"endColumn":29},{"ruleId":"463","severity":1,"message":"464","line":111,"column":68,"nodeType":"465","messageId":"466","endLine":111,"endColumn":70},{"ruleId":"463","severity":1,"message":"471","line":112,"column":18,"nodeType":"465","messageId":"466","endLine":112,"endColumn":20},{"ruleId":"463","severity":1,"message":"464","line":127,"column":14,"nodeType":"465","messageId":"466","endLine":127,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":131,"column":22,"nodeType":"465","messageId":"466","endLine":131,"endColumn":24},{"ruleId":"463","severity":1,"message":"464","line":154,"column":64,"nodeType":"465","messageId":"466","endLine":154,"endColumn":66},{"ruleId":"416","severity":1,"message":"467","line":6,"column":185,"nodeType":"418","messageId":"419","endLine":6,"endColumn":195},{"ruleId":"416","severity":1,"message":"529","line":6,"column":279,"nodeType":"418","messageId":"419","endLine":6,"endColumn":285},{"ruleId":"416","severity":1,"message":"524","line":10,"column":9,"nodeType":"418","messageId":"419","endLine":10,"endColumn":20},{"ruleId":"416","severity":1,"message":"479","line":14,"column":8,"nodeType":"418","messageId":"419","endLine":14,"endColumn":16},{"ruleId":"416","severity":1,"message":"530","line":15,"column":8,"nodeType":"418","messageId":"419","endLine":15,"endColumn":15},{"ruleId":"463","severity":1,"message":"464","line":106,"column":24,"nodeType":"465","messageId":"466","endLine":106,"endColumn":26},{"ruleId":"463","severity":1,"message":"471","line":112,"column":28,"nodeType":"465","messageId":"466","endLine":112,"endColumn":30},{"ruleId":"463","severity":1,"message":"471","line":112,"column":78,"nodeType":"465","messageId":"466","endLine":112,"endColumn":80},{"ruleId":"504","severity":1,"message":"505","line":120,"column":41,"nodeType":"506","messageId":"507","endLine":120,"endColumn":43},{"ruleId":"504","severity":1,"message":"505","line":157,"column":23,"nodeType":"506","messageId":"507","endLine":157,"endColumn":25},{"ruleId":"504","severity":1,"message":"505","line":158,"column":31,"nodeType":"506","messageId":"507","endLine":158,"endColumn":33},{"ruleId":"463","severity":1,"message":"464","line":159,"column":27,"nodeType":"465","messageId":"466","endLine":159,"endColumn":29},{"ruleId":"504","severity":1,"message":"505","line":203,"column":29,"nodeType":"506","messageId":"507","endLine":203,"endColumn":31},{"ruleId":"463","severity":1,"message":"464","line":204,"column":25,"nodeType":"465","messageId":"466","endLine":204,"endColumn":27},{"ruleId":"416","severity":1,"message":"531","line":219,"column":12,"nodeType":"418","messageId":"419","endLine":219,"endColumn":24},{"ruleId":"416","severity":1,"message":"532","line":219,"column":25,"nodeType":"418","messageId":"419","endLine":219,"endColumn":29},{"ruleId":"504","severity":1,"message":"505","line":250,"column":29,"nodeType":"506","messageId":"507","endLine":250,"endColumn":31},{"ruleId":"463","severity":1,"message":"464","line":251,"column":26,"nodeType":"465","messageId":"466","endLine":251,"endColumn":28},{"ruleId":"416","severity":1,"message":"533","line":262,"column":25,"nodeType":"418","messageId":"419","endLine":262,"endColumn":30},{"ruleId":"504","severity":1,"message":"505","line":265,"column":28,"nodeType":"506","messageId":"507","endLine":265,"endColumn":30},{"ruleId":"504","severity":1,"message":"525","line":289,"column":21,"nodeType":"506","messageId":"526","endLine":289,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":291,"column":18,"nodeType":"465","messageId":"466","endLine":291,"endColumn":20},{"ruleId":"416","severity":1,"message":"534","line":336,"column":11,"nodeType":"418","messageId":"419","endLine":336,"endColumn":14},{"ruleId":"463","severity":1,"message":"464","line":337,"column":65,"nodeType":"465","messageId":"466","endLine":337,"endColumn":67},{"ruleId":"463","severity":1,"message":"464","line":337,"column":84,"nodeType":"465","messageId":"466","endLine":337,"endColumn":86},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'Paper' is defined but never used.","'Shadows' is defined but never used.","'Divider' is defined but never used.","'AccountBoxIcon' is defined but never used.","'TopBar' is defined but never used.","'EmojiPeopleIcon' is defined but never used.","'SearchIcon' is defined but never used.","'DataUsageIcon' is defined but never used.","'NavLink' is defined but never used.","'RootState' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'classes' is assigned a value but never used.","'Button' is defined but never used.","'Hidden' is defined but never used.","'Drawer' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'makeStyles' is defined but never used.","'StyleRules' is defined but never used.","'mobileOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'EventCard' is defined but never used.","'CardMedia' is defined but never used.",["535"],["536"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'dis' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'Collapse' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'Menu' is defined but never used.","'User' is defined but never used.","'Progress' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'tabindex' is assigned a value but never used.",["535"],["536"],"'EditIcon' is defined but never used.","'SnackbarContent' is defined but never used.","'Events' is defined but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'defalt:' is defined but never used.","unused",{"range":"537","text":"538"},"no-unreachable","Unreachable code.","unreachableCode","'snackColor' is assigned a value but never used.","'FormGroup' is defined but never used.","'Modal' is defined but never used.","'Element' is defined but never used.","'input' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'competition' is assigned a value but never used.","'SearchLog' is defined but never used.","'session' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Competition' is defined but never used.","'dateFormat' is defined but never used.","'useParams' is defined but never used.","'undecided' is assigned a value but never used.","'red' is defined but never used.","'grey' is defined but never used.","'SetLoading' is defined but never used.","'types' is defined but never used.","'RouteProps' is defined but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'DeleteRounded' is defined but never used.","'Participant' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'colors' is defined but never used.","'Message' is defined but never used.","'selectColumn' is assigned a value but never used.","'open' is assigned a value but never used.","'error' is assigned a value but never used.","'log' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2099,2115],""]