[{"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx":"1","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts":"2","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx":"3","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx":"4"},{"size":500,"mtime":1610330413000,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1610330413000,"results":"7","hashOfConfig":"6"},{"size":3395,"mtime":1611161466000,"results":"8","hashOfConfig":"6"},{"size":4824,"mtime":1611151987000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1bdkhho",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx",[],["20","21"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx",["22","23","24","25"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx",["26","27","28","29"],"import AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Hidden from '@material-ui/core/Hidden'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MailIcon from '@material-ui/icons/Mail'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport IconButton from '@material-ui/core/IconButton'\nimport Box from '@material-ui/core/Box'\nimport Badge from '@material-ui/core/Badge'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport {makeStyles,Theme,createStyles,withStyles,StyleRules} from '@material-ui/core/styles'\nimport React from 'react'\n\nconst drawWidth = 240\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    display: 'flex'\n  },\n  grow : {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n   [theme.breakpoints.up(\"sm\")]: {\n     width: drawWidth,\n     flexshrink:0\n   }\n  },\n  drawerPaper: {\n    width: drawWidth\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawWidth}px)`,\n      marginLeft: drawWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    padding:\"10px 0px 10px 20px\"\n  }\n})\n\ntype State = {\n  mobileOpen: boolean\n}\ntype Props = {\n  window?: () => Window\n  classes: any \n  theme : Theme\n} \n\n\nconst container = window !== undefined ? () => window.document.body : undefined\n\nclass TopBar extends React.Component<Props,State> {\n  constructor(props:any) {\n    super(props)\n    this.state = {\n      mobileOpen: false\n    }\n  }\n  handleMobileToggle = () => {\n    this.setState(state => ({\n      mobileOpen: !state.mobileOpen\n    }))\n  }\n  render() {\n    const { classes,theme } = this.props\n    const { mobileOpen } = this.state\n    const drawer = (\n      <div>\n      <div className={classes.toolbar} >\n      <Typography variant=\"h5\" className={classes.title}>\n        TwiGolf\n      </Typography>\n      </div>\n      <Divider />\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n    )\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar} color='primary'>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n            onClick ={() => this.handleMobileToggle()}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.grow} >\n            News\n          </Typography>\n          <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={1} color=\"error\">\n                <NotificationsIcon />\n              </Badge>\n          </IconButton>\n          <IconButton edge=\"end\" color=\"inherit\" arial-label=\"login\">\n            <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer}>\n        <Hidden smUp implementation=\"css\">\n          <Drawer \n            container= {container}\n            variant= \"temporary\"\n            anchor= {theme.direction === 'rtl' ? 'right': 'left'}\n            open = {mobileOpen}\n            onClose = {this.handleMobileToggle}\n            classes = {{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps = {{\n              keepMounted: true\n            }}\n          >\n           {drawer}\n          </Drawer>\n        </Hidden>\n              <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n          {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n    )\n  }\n}\n\nexport default withStyles(styles,{withTheme:true})(TopBar)\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":17},{"ruleId":"34","severity":1,"message":"38","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":11},{"ruleId":"34","severity":1,"message":"39","line":9,"column":10,"nodeType":"36","messageId":"37","endLine":9,"endColumn":17},{"ruleId":"40","severity":1,"message":"41","line":96,"column":3,"nodeType":"42","messageId":"43","endLine":98,"endColumn":4},{"ruleId":"34","severity":1,"message":"44","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":14},{"ruleId":"34","severity":1,"message":"38","line":17,"column":8,"nodeType":"36","messageId":"37","endLine":17,"endColumn":11},{"ruleId":"34","severity":1,"message":"45","line":20,"column":9,"nodeType":"36","messageId":"37","endLine":20,"endColumn":19},{"ruleId":"34","severity":1,"message":"46","line":20,"column":50,"nodeType":"36","messageId":"37","endLine":20,"endColumn":60},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Shadows' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'makeStyles' is defined but never used.","'StyleRules' is defined but never used.","no-global-assign","no-unsafe-negation"]