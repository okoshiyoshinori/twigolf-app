[{"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx":"1","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts":"2","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx":"3","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx":"4","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/top.tsx":"5","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/EventCard.tsx":"6"},{"size":682,"mtime":1611367314000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610330413000,"results":"9","hashOfConfig":"8"},{"size":3560,"mtime":1611505535000,"results":"10","hashOfConfig":"8"},{"size":5010,"mtime":1611385918000,"results":"11","hashOfConfig":"8"},{"size":671,"mtime":1611505406000,"results":"12","hashOfConfig":"8"},{"size":1785,"mtime":1611501943000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1bdkhho",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx",[],["29","30"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx",["31","32","33","34","35"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx",["36","37","38","39","40","41","42","43","44","45"],"import AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Hidden from '@material-ui/core/Hidden'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MailIcon from '@material-ui/icons/Mail'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport IconButton from '@material-ui/core/IconButton'\nimport Box from '@material-ui/core/Box'\nimport Badge from '@material-ui/core/Badge'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport {makeStyles,Theme,createStyles,withStyles,StyleRules} from '@material-ui/core/styles'\nimport React from 'react'\n\nconst drawWidth = 0 \n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    display: 'flex'\n  },\n  grow : {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n   [theme.breakpoints.up(\"sm\")]: {\n     width: drawWidth,\n     flexshrink:0\n   }\n  },\n  drawerPaper: {\n    width: drawWidth\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawWidth}px)`,\n      marginLeft: drawWidth\n    },\n    backgroundColor:theme.palette.primary.main,\n    boxShadow:\"0 0 0 0\",\n    borderColor:theme.palette.divider,\n    borderBottomWidth:\"1px\",\n    borderBottomStyle:\"solid\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    padding:\"10px 0px 10px 20px\"\n  }\n})\n\ntype State = {\n  mobileOpen: boolean\n}\ntype Props = {\n  window?: () => Window\n  classes: any \n  theme : Theme\n} \n\n\nconst container = window !== undefined ? () => window.document.body : undefined\n\nclass TopBar extends React.Component<Props,State> {\n  constructor(props:any) {\n    super(props)\n    this.state = {\n      mobileOpen: false\n    }\n  }\n  handleMobileToggle = () => {\n    this.setState(state => ({\n      mobileOpen: !state.mobileOpen\n    }))\n  }\n  render() {\n    const { classes,theme } = this.props\n    const { mobileOpen } = this.state\n    const drawer = (\n      <div>\n      <div className={classes.toolbar} >\n      <Typography variant=\"h5\" className={classes.title}>\n        TwiGolf\n      </Typography>\n      </div>\n      <Divider />\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n    )\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar} >\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n            onClick ={() => this.handleMobileToggle()}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.grow} >\n            ツイゴル \n          </Typography>\n          <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={1} color=\"error\">\n                <NotificationsIcon />\n              </Badge>\n          </IconButton>\n          <IconButton edge=\"end\" color=\"inherit\" arial-label=\"login\">\n            <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      { /*\n      <nav className={classes.drawer}>\n        <Hidden smUp implementation=\"css\">\n          <Drawer \n            container= {container}\n            variant= \"temporary\"\n            anchor= {theme.direction === 'rtl' ? 'right': 'left'}\n            open = {mobileOpen}\n            onClose = {this.handleMobileToggle}\n            classes = {{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps = {{\n              keepMounted: true\n            }}\n          >\n           {drawer}\n          </Drawer>\n        </Hidden>\n              <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n          {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      */}\n    </div>\n    )\n  }\n}\n\nexport default withStyles(styles,{withTheme:true})(TopBar)\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/top.tsx",["46"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/EventCard.tsx",["47","48"],"import React from 'react'\nimport {OverView} from '../store/competition/types'\nimport {createStyles,Theme,withStyles} from '@material-ui/core/styles/'\nimport {Card,CardHeader,CardContent,Avatar,Typography} from '@material-ui/core/'\nimport { red } from '@material-ui/core/colors'\n\ntype Props = {\n//  data: OverView \n  classes: any\n}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    backgroundColor: theme.palette.common.white,\n    boxShadow: \"0 0 0 0\",\n    borderColor: theme.palette.divider,\n  },\n  header: {\n    color: theme.palette.common.black,\n    fontSize:45,\n  },\n  contents: {\n    color: theme.palette.common.black\n  },\n  avatar: {\n    backgroundColor: red[500] \n  }\n})\n\nclass EventCard extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {classes} = this.props\n    return (\n      <Card className={classes.root}>\n        <CardHeader className={classes.header} avatar={\n          <Avatar aria-label=\"event\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        titleTypographyProps={{variant:'h6' }}\n        title=\"トマコマ＠苫小牧ボードゲーム会 2021.1.24\"\n        subheader=\"@nexx\"\n        />\n              <CardContent className={classes.contents}>\n        <Typography variant=\"body2\" component=\"p\">\n        今日、WordPressウェブサイトの多くでは、イタリック体が全くなく、2種類のフォントウェイトしか使用されません。Google Fontsを自分で埋め込んでいる場合は、Google Fontsの「カスタマイズ」タブで使用するウェイトを選択できます：\n        </Typography>\n      </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default withStyles(styles,{withTheme:true})(EventCard)\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":11},{"ruleId":"53","severity":1,"message":"57","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":13},{"ruleId":"53","severity":1,"message":"58","line":10,"column":10,"nodeType":"55","messageId":"56","endLine":10,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":12,"column":8,"nodeType":"55","messageId":"56","endLine":12,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":114,"column":3,"nodeType":"62","messageId":"63","endLine":116,"endColumn":4},{"ruleId":"53","severity":1,"message":"64","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"65","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":14},{"ruleId":"53","severity":1,"message":"66","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":17,"column":8,"nodeType":"55","messageId":"56","endLine":17,"endColumn":11},{"ruleId":"53","severity":1,"message":"67","line":20,"column":9,"nodeType":"55","messageId":"56","endLine":20,"endColumn":19},{"ruleId":"53","severity":1,"message":"68","line":20,"column":50,"nodeType":"55","messageId":"56","endLine":20,"endColumn":60},{"ruleId":"53","severity":1,"message":"69","line":74,"column":7,"nodeType":"55","messageId":"56","endLine":74,"endColumn":16},{"ruleId":"53","severity":1,"message":"70","line":89,"column":21,"nodeType":"55","messageId":"56","endLine":89,"endColumn":26},{"ruleId":"53","severity":1,"message":"71","line":90,"column":13,"nodeType":"55","messageId":"56","endLine":90,"endColumn":23},{"ruleId":"53","severity":1,"message":"72","line":91,"column":11,"nodeType":"55","messageId":"56","endLine":91,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":11,"column":3,"nodeType":"62","messageId":"63","endLine":13,"endColumn":4},{"ruleId":"53","severity":1,"message":"73","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":32,"column":3,"nodeType":"62","messageId":"63","endLine":34,"endColumn":4},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Shadows' is defined but never used.","'Divider' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'Hidden' is defined but never used.","'Drawer' is defined but never used.","'makeStyles' is defined but never used.","'StyleRules' is defined but never used.","'container' is assigned a value but never used.","'theme' is assigned a value but never used.","'mobileOpen' is assigned a value but never used.","'drawer' is assigned a value but never used.","'OverView' is defined but never used.","no-global-assign","no-unsafe-negation"]