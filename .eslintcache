[{"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx":"1","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts":"2","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx":"3","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx":"4","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/top.tsx":"5","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/EventCard.tsx":"6","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/all.tsx":"7","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/search.tsx":"8","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/menu.tsx":"9","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/guid.tsx":"10","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/bottomNavi.tsx":"11","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/plan.tsx":"12","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/event.tsx":"13","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/eventlist.tsx":"14","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/layout/layout.tsx":"15","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/editing.tsx":"16","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/mde.tsx":"17","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/dm.tsx":"18","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/config.tsx":"19","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/detail.tsx":"20","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/keyWord.tsx":"21","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/util/util.ts":"22","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/index.ts":"23","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/reducers.ts":"24","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/reducers.ts":"25","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/types.ts":"26","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/types.ts":"27","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/api.ts":"28","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/actions.ts":"29","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/api/index.ts":"30","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/actions.ts":"31","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/progress.tsx":"32","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/message.tsx":"33","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/reducers.ts":"34","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/types.ts":"35","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/api.ts":"36","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/actions.ts":"37","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/privateRoute.tsx":"38","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/pa_management.tsx":"39","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/compe_management.tsx":"40","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/combinations.tsx":"41"},{"size":1014,"mtime":1619436467000,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":1610330413000,"results":"44","hashOfConfig":"43"},{"size":4004,"mtime":1619803353000,"results":"45","hashOfConfig":"43"},{"size":3114,"mtime":1619753405000,"results":"46","hashOfConfig":"43"},{"size":2776,"mtime":1616072982000,"results":"47","hashOfConfig":"43"},{"size":4977,"mtime":1619787903000,"results":"48","hashOfConfig":"43"},{"size":5053,"mtime":1619832403000,"results":"49","hashOfConfig":"43"},{"size":7628,"mtime":1619673808000,"results":"50","hashOfConfig":"43"},{"size":3134,"mtime":1619627073000,"results":"51","hashOfConfig":"43"},{"size":783,"mtime":1612973672000,"results":"52","hashOfConfig":"43"},{"size":2334,"mtime":1617762799000,"results":"53","hashOfConfig":"43"},{"size":8754,"mtime":1619801419000,"results":"54","hashOfConfig":"43"},{"size":1879,"mtime":1615911906000,"results":"55","hashOfConfig":"43"},{"size":5713,"mtime":1619673742000,"results":"56","hashOfConfig":"43"},{"size":4846,"mtime":1619434404000,"results":"57","hashOfConfig":"43"},{"size":22780,"mtime":1619322343000,"results":"58","hashOfConfig":"43"},{"size":496,"mtime":1616824174000,"results":"59","hashOfConfig":"43"},{"size":769,"mtime":1613133202000,"results":"60","hashOfConfig":"43"},{"size":10533,"mtime":1619371350000,"results":"61","hashOfConfig":"43"},{"size":18882,"mtime":1619833772000,"results":"62","hashOfConfig":"43"},{"size":1160,"mtime":1617452874000,"results":"63","hashOfConfig":"43"},{"size":3534,"mtime":1619850970000,"results":"64","hashOfConfig":"43"},{"size":736,"mtime":1616309619000,"results":"65","hashOfConfig":"43"},{"size":1172,"mtime":1620092110000,"results":"66","hashOfConfig":"43"},{"size":1441,"mtime":1619568849000,"results":"67","hashOfConfig":"43"},{"size":1958,"mtime":1620091342000,"results":"68","hashOfConfig":"43"},{"size":3651,"mtime":1619572542000,"results":"69","hashOfConfig":"43"},{"size":12939,"mtime":1620091797000,"results":"70","hashOfConfig":"43"},{"size":1100,"mtime":1619568762000,"results":"71","hashOfConfig":"43"},{"size":1347,"mtime":1620056686000,"results":"72","hashOfConfig":"43"},{"size":609,"mtime":1616398012000,"results":"73","hashOfConfig":"43"},{"size":384,"mtime":1616935969000,"results":"74","hashOfConfig":"43"},{"size":634,"mtime":1619760078000,"results":"75","hashOfConfig":"43"},{"size":629,"mtime":1617159588000,"results":"76","hashOfConfig":"43"},{"size":564,"mtime":1616297148000,"results":"77","hashOfConfig":"43"},{"size":1486,"mtime":1619190315000,"results":"78","hashOfConfig":"43"},{"size":445,"mtime":1616298010000,"results":"79","hashOfConfig":"43"},{"size":1013,"mtime":1619190123000,"results":"80","hashOfConfig":"43"},{"size":7641,"mtime":1619014466000,"results":"81","hashOfConfig":"43"},{"size":23361,"mtime":1620092235000,"results":"82","hashOfConfig":"43"},{"size":7024,"mtime":1619611567000,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1bdkhho",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"86"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"86"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"86"},"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/index.tsx",[],["195","196"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/reportWebVitals.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/App.tsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React from 'react';\nimport CssBaseLine from '@material-ui/core/CssBaseLine'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport {List,ListItem,ListItemText,ListItemIcon} from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport Card from '@material-ui/core/Card'\nimport {CardHeader,CardContent,colors} from '@material-ui/core/'\nimport Paper from '@material-ui/core/Paper'\nimport { createMuiTheme,responsiveFontSizes} from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { Shadows } from '@material-ui/core/styles/shadows'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport TopBar from './components/TopBar'\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DataUsageIcon from '@material-ui/icons/DataUsage'\nimport {NavLink,withRouter,RouteComponentProps} from 'react-router-dom'\nimport {RootState} from './store'\n\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Hiragino Kaku Gothic ProN',\n      'Meiryo',\n      'ヒラギノ角ゴ Pro W9',\n      'Hiragino Kaku Gothic Pro',\n      'Osaka',\n      'Meiryo',\n      'メイリオ',\n      'MS PGothic',\n      'sans-serif'\n    ].join(','),\n    button: {\n      textTransform: \"none\"\n    },\n    h1: {\n     // fontWeight:700,\n      fontSize:\"1.6rem\",\n//      color:\"#2a2b52\"\n    },\n    h2: {\n    //  fontWeight:700,\n      fontSize:\"1.3rem\",\n //     color:\"#2a2b52\"\n    },\n    h3: {\n    //  fontWeight:600,\n      fontSize:\"1.0rem\",\n  //    color:\"#2a2b52\"\n    },\n    h4: {\n      fontSize:\"0.8rem\"\n    },\n    h5: {\n      fontSize:\"0.6rem\"\n    }\n  },\n  palette: {\n    primary: {\n      light:\"#6ec6ff\",\n      main:\"#2196f3\",\n      dark:\"#0069c0\",\n      contrastText:\"#000\"\n    },\n    secondary: {\n      light: '#aee571',\n      main:\"#7cb342\",\n      dark: \"#4b830d\",\n      contrastText:\"#000\",\n    },\n    text: {\n      primary: \"#000\",\n      secondary:\"#fafafa\"\n    },\n    divider: \"#dedede\",\n    error:{\n      main:\"#f44336\"\n    },\n    warning: {\n      main: \"#ff9800\"\n    },\n    info: {\n      main: \"#2196f3\"\n    },\n    success: {\n      main: \"#4caf50\"\n    },\n    background: {\n     default: \"#edf2f7\",\n     paper: \"#fafafc\"\n    },\n    type: 'light',\n  },\n  mixins: {\n    toolbar: {\n      minHeight:60\n    }\n  },\n  direction: 'ltr',\n  overrides: {\n    MuiListItem: {\n      root: {\n        \"&$selected\": { \n          backgroundColor: \"white\",\n          color: \"#0069c0\",\n          '& svg': {\n            color:\"#0069c0\"\n          }\n        }\n      }\n    },\n    MuiTabs: {\n      root:{\n        fontWeight:800,\n        color:colors.blueGrey[500]\n       },\n      indicator: {\n        backgroundColor:colors.grey[800],\n      },\n    },\n    MuiTab: {\n      root: {\n        fontSize:\"1.3rem\",\n        '&$selected': {\n          color: colors.grey[800] \n        }\n      }\n    },\n    MuiTableCell: {\n      root: {\n          borderBottomColor: colors.grey[300]\n      }\n    },\n    MuiRadio: {\n      root: {\n        color: colors.grey[500],\n        '&$checked': {\n          color: colors.blue[700]\n        }\n      }\n    },\n    MuiCardHeader: {\n      avatar:{\n        marginRight:10,\n      }\n    }\n  }\n})\ntheme = responsiveFontSizes(theme)\ntype State = {}\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\nconst styles = (them:Theme) => createStyles({\n})\n\nclass App extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {classes} = this.props\n    return (\n      <React.Fragment>\n        <ThemeProvider theme={theme}>\n        <CssBaseLine />\n          {this.props.children}\n        </ThemeProvider>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(App))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/TopBar.tsx",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"import AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Hidden from '@material-ui/core/Hidden'\nimport Drawer from '@material-ui/core/Drawer'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MailIcon from '@material-ui/icons/Mail'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Box from '@material-ui/core/Box'\nimport Badge from '@material-ui/core/Badge'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport {makeStyles,Theme,createStyles,withStyles,WithStyles,StyleRules} from '@material-ui/core/styles'\nimport React from 'react'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {Session} from '../store/session/types'\n\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    display: 'flex'\n  },\n  grow : {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n  appBar: {\n    backgroundColor:theme.palette.common.white,\n    boxShadow: \"0 0 0 0\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  title: {\n    padding:\"10px 0px 10px 20px\"\n  }\n})\n\ntype State = {\n  mobileOpen: boolean\n}\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  session:Session\n  handler:Function\n}\n\n\nclass TopBar extends React.Component<Props,State> {\n  constructor(props:any) {\n    super(props)\n    this.state = {\n      mobileOpen: false\n    }\n  }\n  handleMobileToggle = () => {\n    this.setState(state => ({\n      mobileOpen: !state.mobileOpen\n    }))\n  }\n  handleAvatarClick(){\n    if (window.confirm(\"ログアウトしますか？\")) {\n      this.props.handler() \n    }\n  }\n  render() {\n    const { classes,session } = this.props\n    const { mobileOpen } = this.state\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar} >\n        <Toolbar>\n          <Typography  className={classes.grow} >\n            <img src={`${process.env.PUBLIC_URL}/twi_logo.jpeg`} />\n          </Typography>\n          { !session.login &&\n          <IconButton edge=\"end\" color=\"inherit\" arial-label=\"login\">\n            <ExitToAppIcon/>\n          </IconButton>\n           }\n           { session.login &&\n\n           <IconButton onClick={()=> this.handleAvatarClick()}  size=\"small\">\n           <Avatar  src={process.env.PUBLIC_URL + \"/\" + session.auth.avatar} />\n           </IconButton>\n           }\n        </Toolbar>\n      </AppBar>\n    </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(TopBar))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/top.tsx",["239","240","241","242","243","244"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {List,ListItem,Grid,Container,Theme} from '@material-ui/core'\nimport EventCard from '../components/EventCard'\nimport {Typography,Divider,Button,Box} from '@material-ui/core'\nimport {createStyles,withStyles,WithStyles} from '@material-ui/styles'\nimport TwitterIcon from '@material-ui/icons/Twitter'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    paddingTop: \"50px\"\n  },\n    button: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.common.white,\n    fontWeight:700\n  },\n  main: {\n    [theme.breakpoints.up(\"sm\")]: {\n      borderRightColor: theme.palette.divider,\n      borderRightWidth: \"1px\",\n      borderRightStyle: \"solid\",\n      paddingRight:theme.spacing(3)\n    },\n  },\n  sug: {\n    '& > *': {\n      margin:theme.spacing(2)\n    },\n    textAlign: \"center\",\n    marginTop: theme.spacing(2)\n  },\n  subtitle: {\n    fontWeight:700,\n    color:\"#2a2b52\",\n    [theme.breakpoints.up(\"sm\")]: {\n      fontSize: \"1.0rem\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"1.7rem\"\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      fontSize: \"1.8rem\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n}) \n\n\nclass Top extends React.Component<Props,State> {\n  constructor(props:any) {\n    super(props)\n  }\n  linkTo() {\n    this.props.history.push(\"/events\")\n  }\n  render() {\n    const {classes} = this.props\n    return (\n      <Container maxWidth={\"md\"}>\n      <div className={classes.toolbar}/>\n        <Grid container alignItems=\"center\" justify=\"center\" className={classes.root}>\n          <Grid sm={12}>\n          <Typography className={classes.subtitle} align=\"center\" > \n            イベント告知・出席管理をより簡単に\n          </Typography>\n          </Grid>\n          <Grid sm={12} style={{marginTop:\"20px\"}}>\n           <Typography  align=\"center\" > \n            ゴルフイベント告知管理サイト\n          </Typography>\n          </Grid>\n                  <div className={classes.sug}>\n          <Button size=\"large\" className={classes.button} variant=\"contained\"  color=\"primary\" startIcon={<TwitterIcon/>}>ログイン</Button>\n          <Button size=\"large\"  variant=\"contained\" onClick={()=>{this.linkTo()}} >続きを見る</Button>\n        </div>\n          <Grid container style={{marginTop:\"20px\"}} spacing={2}>\n            {[1,2,3,4,5,6].map((i) => (\n            <Grid xs={12} sm={4} key={i} item >\n            { /*\n              <EventCard />\n             */}\n            </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Top))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/EventCard.tsx",["245","246","247","248","249","250","251","252","253","254","255","256"],"import React from 'react'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles/'\nimport {colors,Card,CardActions,IconButton,CardActionArea,CardMedia,CardHeader,CardContent,Avatar,Typography,Divider} from '@material-ui/core/'\nimport { red } from '@material-ui/core/colors'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {Competition} from '../store/app/types'\nimport {Session} from '../store/session/types'\nimport {dataFormatwithday,dayEditor} from '../util/util'\nimport EventIcon from '@material-ui/icons/Event'\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn'\nimport PlaceIcon from '@material-ui/icons/Place'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\n\n\ntype handleProps = (e:React.MouseEvent<HTMLElement>) => void\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  data:Competition\n  session?:Session\n  handler?: handleProps \n}\n\n\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    borderRadius: \"10px\",\n    //boxShadow: \"0 0 0 0\",\n    /*\n    [theme.breakpoints.up(\"sm\")]: {\n      maxWidth:\"350px\"\n    }\n    */\n  },\n  day: {\n    color:theme.palette.primary.dark,\n    marginBottom:\"10px\"\n  },\n  fotter: {\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n  },\n  header: {\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    paddingBottom:0,\n  },\n  contents: {\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n  },\n  avatar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: theme.spacing(3),\n      height: theme.spacing(3)\n    },\n      },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  }\n})\n\nclass EventCard extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {classes,data,session,handler} = this.props\n    const undecided:boolean = data.event_day === null ? true:false\n    return (\n      <Card className={classes.root} elevation={0} variant=\"outlined\">\n        <CardActionArea disableRipple disableTouchRipple onClick={()=> this.props.history.push(\"/events/\" + data.id)}>\n          <CardHeader className={classes.header} avatar={\n            <Avatar src={process.env.PUBLIC_URL + \"/\" + data.user.avatar } aria-label=\"event\" className={classes.avatar}>\n            </Avatar>\n          }\n          title={<Typography  variant=\"h3\" style={{lineHeight:\"1.4em\"}}>{data.title}</Typography>}\n          action={\n           <>\n            { session != undefined && data != undefined && handler != undefined && data.user_id == session.auth.id && \n            <IconButton size=\"small\" aria-controls={\"menu\" + data.id}  aria-haspopup=\"true\" aria-label=\"settings\" data-id={data.id}\n            onClick={(e) =>  handler(e)}>\n              <MoreVertIcon  />\n            </IconButton>\n            }\n            </>\n          }\n         />\n        <CardContent className={classes.contents}>\n          <Typography variant=\"caption\">\n               <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <PlaceIcon style={{fontSize:\"1.0rem\",color:colors.grey[600]}}/>\n                 <span style={{marginLeft:5}}>\n                  {data.place_text == null ? \"未定\" : data.place_text}\n                 </span>\n                 </div>\n          </Typography>\n          <Typography variant=\"caption\">\n               <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <EventIcon style={{fontSize:\"1.0rem\",color:colors.grey[600]}}/>\n                 <span style={{marginLeft:5}}>\n                  {data.event_day == null ? \"未定\": dataFormatwithday(data.event_day)} \n                 </span>\n               </div>\n          </Typography>\n        </CardContent>\n      { /*\n      <CardHeader className={classes.header} avatar={\n          <Avatar src={process.env.PUBLIC_URL + \"/\" + data.user.avatar } aria-label=\"event\" className={classes.avatar}>\n          </Avatar>\n        }\n        title={<Typography  variant=\"caption\">{`@${data.user.sns_id}・` }</Typography>}\n        subheader={<Typography  variant=\"caption\">{dayEditor().to(dayEditor(data.update_at))}</Typography>}\n        action={\n           <>\n            { session != undefined && data != undefined && handler != undefined && data.user_id == session.auth.id && \n            <IconButton size=\"small\" aria-controls={\"menu\" + data.id}  aria-haspopup=\"true\" aria-label=\"settings\" data-id={data.id}\n            onClick={(e) =>  handler(e)}>\n              <MoreVertIcon  />\n            </IconButton>\n            }\n            </>\n          }\n        />\n        */ }\n      </CardActionArea>\n     </Card>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(EventCard))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/all.tsx",["257","258","259","260","261","262","263","264"],"import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles'\nimport EventList from '../components/eventlist'\nimport {List,ListItem} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {GetCompetitions} from '../store/app/api'\nimport Progress from '../components/progress'\nimport EventCard from '../components/EventCard'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport {ResetResult} from '../store/system/actions'\nimport querystring from 'query-string'\nimport {SearchLog} from '../util/util'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {Helmet} from 'react-helmet'\n\n\n\ninterface Props extends ReduxProps,RouteComponentProps,WithStyles<typeof styles> {}\n\ntype State = {\n  tabIndex: number\n  page:number\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    flexGrow:1,\n    backgroundColor: theme.palette.background.default,\n  },\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: 0,\n      marginBottom:\"100px\",\n    }\n  },\n  select :{\n    fontSize:\"1.1em\",\n    fontWeight:700,\n    color: theme.palette.grey[700],\n  }\n})\n\nclass All extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = this.parseQuery(this.props)\n  }\n  componentDidMount() {\n    this.props.getCompetitions(this.state.page,this.state.tabIndex)\n  }\n  handeleChange(event:React.ChangeEvent<{}>,newIndex:number) {\n    this.setState({tabIndex:newIndex})\n    this.props.history.push({\n      search: `?p=1&sort=${newIndex}`\n    })\n  }\n  handelePage(page:number) {\n    this.setState({page:page})\n    this.props.history.push({\n      search: `?p=${page}&sort=${this.state.tabIndex}`\n    })\n  }\n  parseQuery(props:Props):State {\n    const parse = querystring.parse(props.location.search)\n    return {\n      tabIndex:parse.sort === undefined ? 1: Number(parse.sort),\n      page:parse.p === undefined ? 1: Number(parse.p)\n    }\n  }\n  componentDidUpdate(prevProps:Props) {\n    if (this.props.location.search !== prevProps.location.search) {\n      const {page,tabIndex} = this.parseQuery(this.props) \n      this.setState({\n        page:page,\n        tabIndex:tabIndex\n      })\n      this.props.getCompetitions(page,tabIndex)\n    }\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  render() {\n    const {tabIndex} = this.state\n    const {classes,competitions,system}  = this.props\n    const competitionsResult = SearchLog(system.result,\"competitions\")\n    const allPage:number = Math.ceil(competitions.allNumber/Number(process.env.REACT_APP_PERNUM))\n    return (\n    <Grid container spacing={1}> \n      <div className=\"All\">\n        <Helmet>\n         <title>みんなのイベント</title>\n        </Helmet>\n      </div>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n           みんなのイベント\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} style={{marginBottom:15,marginTop:15}}>\n          <Tabs style={{borderBottom:\"1px solid #dcdcdc\"}} \n            value={tabIndex}\n            variant=\"standard\"\n            centered\n            onChange={(e,val)=> this.handeleChange(e,val)}\n          >\n          <Tab label=\"最新\" value={1}/>\n          <Tab label=\"開催日\"value={2}/>\n          <Tab label=\"締切日\" value={3}/>\n          </Tabs>\n      </Grid>\n     {system.loading.competitions && <Progress/>}\n     {competitionsResult.status != 200 && !system.loading.competitions && <Message mes={competitionsResult.cause}/>}\n     {competitionsResult.status == 200 && !system.loading.competitions && \n     <>\n      { /*\n        <Paper variant=\"outlined\">\n              <EventList data={competitions.payload}/>\n        </Paper>\n       */ }\n      { competitions.payload.map((data) => (\n      <Grid item xs={12} sm={12} md={12}>\n        <EventCard data={data}/>\n      </Grid>\n      ) )\n      }\n      <Grid item xs={12} sm={12} md={12}>\n        <Pagination shape=\"rounded\" page={this.state.page} onChange={(e,p) => this.handelePage(p)} count={allPage} boundaryCount={5}/>\n      </Grid>\n      </>\n     }\n     </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competitions: state.app.competitions,\n    system:state.system\n  }\n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    getCompetitions(page:number,sort:number){\n      GetCompetitions(page,sort)(dispatch)\n    },\n    resetLog() {\n      dispatch(ResetResult())\n    }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(All)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/search.tsx",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"import React from 'react'\nimport {FormControl,Button,TextField,FormLabel,FormControlLabel,Radio,RadioGroup,InputLabel,Typography,Grid,Paper,Select,MenuItem} from '@material-ui/core'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles'\nimport {dateFormatNotime,SearchLog} from '../util/util'\nimport EventList from '../components/eventlist'\nimport EventCard from '../components/EventCard'\nimport {SearchCompetition} from '../store/app/api'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport querystring from 'query-string'\nimport {ResetResult} from '../store/system/actions'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {Helmet} from 'react-helmet'\n\ninterface Props extends ReduxProps,RouteComponentProps,WithStyles<typeof styles>{}\n\ntype State = {\n  p:number\n  mode:number\n  date:string\n  dis:boolean\n  keyword:string\n}\n\nconst styles = (theme:Theme)=> createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    formLabel: {\n      color: theme.palette.grey[900],\n      fontSize: 15,\n      '&.Mui-focused': {\n        color:theme.palette.primary.main\n      }\n    },\n    helperTxt: {\n      color: theme.palette.info.dark\n    }\n})\n//search?p=x&date=yyyy-mm-dd&mode=x\nclass Search extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = this.parseQuery(props)\n  }\n  execute() {\n    this.props.history.push({\n        search:`?mode=${this.state.mode}&q=${this.state.keyword}&p=${this.state.p}&date=${this.state.date}&k=${Date.now()}`\n    })\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  componentDidUpdate(prevProps:Props) {\n    if (this.props.location.search !== prevProps.location.search) {\n       let parse = this.parseQuery(this.props)\n       this.setState({\n         mode:parse.mode,\n         date:parse.date,\n         keyword:parse.keyword,\n         p: parse.p,\n         dis: parse.mode == 1? true:false\n       })\n       const {p,date,mode,dis,keyword} = parse \n       const inputdate = date == \"\" ? null: date\n       const inputmode = Number(mode)\n       this.props.search(p,keyword,inputdate,inputmode)\n    }\n  }\n  parseQuery(props:Props):State{\n    const parse = querystring.parse(props.location.search)\n    let mode:string = parse.mode == undefined ? \"1\": parse.mode as string\n    let p:string = parse.p == undefined ? \"1\": parse.p as string\n    let date:string = parse.date == undefined ? dateFormatNotime(new Date()): parse.date as string\n    let keyword:string = parse.q == undefined ? \"\": parse.q as string\n    return {\n      mode:Number(mode),\n      p:Number(p),\n      date:date,\n      dis: mode == \"1\" ? true: false,\n      keyword:keyword\n    }\n  }\n  handelePage(page:number) {\n    this.setState({p:page})\n    this.props.history.push({\n      search: `?p=${page}&mode=${this.state.mode}&date=${this.state.date}&keyword=${this.state.keyword}`\n    })\n  }\n  handleRadio(e:React.ChangeEvent<{}>) {\n    if ((e.target as HTMLInputElement).value == '1') {\n      this.setState({\n        mode: 1,\n        dis: true\n      })\n    } else {\n      this.setState({\n        mode: 2,\n        dis: false\n      })\n    }\n  }\n  render() {\n    const {classes,competitions,system} = this.props\n    const searchResult = SearchLog(system.result,\"search\")\n    const allPage:number = Math.ceil(competitions.allNumber/Number(process.env.REACT_APP_PERNUM))\n    return (\n    <Grid container spacing={1}>\n      <div className=\"Search\">\n        <Helmet>\n         <title>検索</title>\n        </Helmet>\n      </div>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n          検索\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Paper elevation={0} variant=\"outlined\" style={{borderRadius:10,padding:15}}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12}>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.formLabel}>日付</FormLabel>\n                  <RadioGroup row  value={this.state.mode} onChange={(e)=>this.handleRadio(e)}>\n                    <FormControlLabel \n                      control={<Radio color=\"default\"/>}\n                      value={1}\n                      labelPlacement=\"end\"\n                      label=\"指定\"\n                     />\n                     <FormControlLabel \n                      control={<Radio color=\"default\"/>}\n                      labelPlacement=\"end\"\n                      value={2}\n                      label=\"未定\"\n                     />\n                  </RadioGroup>\n                </FormControl>\n            </Grid>\n            {\n              this.state.dis &&\n            <Grid item xs={12} sm={12}>\n              <TextField\n               id=\"date\"\n               label=\"開催日\"\n               type=\"date\"\n               value={this.state.date}\n               helperText=\"※選択日以降のイベントを表示します\"\n               FormHelperTextProps={{\n                 className:classes.helperTxt\n               }}\n               onChange={(e)=>this.setState({date:e.target.value})}\n               InputLabelProps={{\n               shrink: true,\n               className: classes.formLabel\n               }}\n             />\n            </Grid>\n            }\n            <Grid item xs={12} sm={12}>\n             <TextField\n              label=\"キーワード\"\n              fullWidth\n              value={this.state.keyword}\n              onChange={(e)=>this.setState({keyword:e.target.value})}\n              InputLabelProps={{\n                shrink: true,\n                className: classes.formLabel\n              }}\n              id=\"filled-size-small\"\n             />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <Button\n              disableElevation\n              disabled={system.loading.search ? true:false}\n              color=\"primary\"\n              variant=\"contained\"\n              style={{color:\"#fff\",fontWeight:700}}\n              onClick={()=>this.execute()}>\n              検索する\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n        {searchResult.status != 200 && searchResult.status != 999 && <Message mes={searchResult.cause}/>}\n        {system.loading.search && <Progress/>}\n        {!system.loading.search && searchResult.status == 200 && \n        <>\n     { competitions.payload.map((val) => ( \n      <Grid item xs={12} sm={12} >\n        <EventCard data={val} />\n      </Grid>\n     )) }\n      <Grid item xs={12} sm={12} md={12}>\n        <Pagination shape=\"rounded\" page={this.state.p} onChange={(e,p) => this.handelePage(p)} count={allPage} boundaryCount={5}/>\n      </Grid>\n      </>\n        }\n    </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competitions: state.app.searchresult,\n    system:state.system\n  } \n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    search(p:number,q:string | null,day:string | null,mode:number) {\n      SearchCompetition(p,q,day,mode)(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Search)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/menu.tsx",["281","282","283","284","285","286","287","288","289"],"import React from 'react'\nimport {CardContent,Grid,Typography,Card,CardHeader,Theme,List,ListItem,ListItemIcon,Avatar,ListItemAvatar,Divider,ListItemText,Collapse} from '@material-ui/core'\nimport {createStyles,withStyles,WithStyles} from '@material-ui/styles'\nimport {ExpandLess,ExpandMore} from '@material-ui/icons/'\nimport {withRouter,RouteComponentProps,NavLink} from 'react-router-dom'\nimport HomeIcon from '@material-ui/icons/Home'\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts'\nimport {Session} from '../store/session/types'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  session:Session\n}\n\ntype State ={}\n\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    backgroundColor: theme.palette.common.white\n  },\n  main: {\n    backgroundColor: theme.palette.common.white\n  },\n  cardcontents: {\n      padding: 0,\n    \"&:last-child\": {\n      paddingBottom: 0\n    }\n  },\n  manuList: {\n    padding: theme.spacing(2)\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  activeStyle: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.primary.main\n  }\n})\n\nclass Menu extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      selectedIndex:99, \n      open: true\n    }\n  }\n  render() {\n    const {classes,session} = this.props\n    return (\n          <Card elevation={0} variant=\"outlined\" className={classes.main} >\n            <List component=\"nav\" style={{padding:0}}>\n            { \n              session.login &&\n              <ListItem button divider  component={NavLink} to={\"/users/\" + session.auth.sns_id} activeClassName=\"Mui-selected\">\n                <ListItemIcon>\n                  <HomeIcon/>\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h2\">マイページ</Typography>} />\n              </ListItem>\n            }\n              <ListItem button divider component={NavLink} to=\"/events\" activeClassName=\"Mui-selected\" exact>\n                <ListItemIcon>\n                  <PeopleAltIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h2\">みんなのイベント</Typography>} />\n              </ListItem>\n              <ListItem button divider component={NavLink} to=\"/search\" activeClassName=\"Mui-selected\" exact>\n                <ListItemIcon>\n                  <SearchIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h2\">検索</Typography>} />\n              </ListItem>\n              <ListItem button divider component={NavLink} to=\"/guid\" activeClassName=\"Mui-selected\" exact>\n                <ListItemIcon>\n                  <ImportContactsIcon/>\n                </ListItemIcon>\n                <ListItemText primary={<Typography variant=\"h2\">使い方ガイド</Typography>}/>\n              </ListItem>\n            </List>\n          </Card>\n    )\n  }\n} \n\nexport default withRouter(withStyles(styles,{withTheme:true})(Menu))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/guid.tsx",["290"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Grid,Typography} from '@material-ui/core'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  }\n}) \n\nclass Guid extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Grid container spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h1\">\n              使い方ガイド\n            </Typography>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Guid))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/bottomNavi.tsx",["291","292","293"],"import React from 'react'\nimport {withRouter,RouteComponentProps,NavLink} from 'react-router-dom'\nimport {BottomNavigation,BottomNavigationAction,Theme} from '@material-ui/core'\nimport {createStyles,WithStyles,withStyles} from '@material-ui/styles'\nimport HomeIcon from '@material-ui/icons/Home'\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {Session} from '../store/session/types'\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  session:Session\n}\ninterface State {\n  selected: string\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    width: \"100%\",\n    position: 'fixed',\n    bottom: 0,\n    borderTop:\"1px solid\",\n    borderTopColor: theme.palette.grey[300]\n  },\n  select: {\n    color: theme.palette.grey[700]\n  }\n})\n\nclass BottomNavi extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      selected: \"\",\n    }\n  }\n  componentDidMount() {\n   let path:string = this.props.location.pathname\n    this.setState({selected:path})\n  }\n  hundleChange(e:React.ChangeEvent<{}>,v:string) {\n    this.props.history.push(v)\n    this.setState({selected:v})\n  }\n  render(){\n    const {selected} = this.state\n    const {classes,session} = this.props\n    return (\n    <div>\n      <BottomNavigation  showLabels={false} className={classes.root} value={selected} onChange={(e,val)=>this.hundleChange(e,val)}>\n      { session.login &&\n        <BottomNavigationAction showLabel={false}  value={\"/users/\" + session.auth.sns_id} className={classes.select} key=\"mypage\" icon={<HomeIcon />} />\n      }\n        <BottomNavigationAction showLabel={false}  value={\"/events\"} className={classes.select} key=\"event\" icon={<PeopleAltIcon />} />\n        <BottomNavigationAction showLabel={false}  value={\"/search\"} className={classes.select} key=\"search\" icon={<SearchIcon />} />\n        <BottomNavigationAction showLabel={false}  value={\"/guid\"} className={classes.select}   key=\"guide\" icon={<ImportContactsIcon />} />\n      </BottomNavigation>\n    </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(BottomNavi))\n\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/plan.tsx",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Divider,Paper} from '@material-ui/core'\nimport {colors,Menu,MenuItem,Box,Container,Button,List,ListItem,ListItemAvatar,ListItemText,Avatar,Grid,Tabs,Tab,Card,Typography} from '@material-ui/core'\nimport EventList from '../components/eventlist'\nimport EventCard from '../components/EventCard'\nimport {User} from '../store/app/types'\nimport {GetUser,GetUserCompetitions} from '../store/app/api'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport querystring from 'query-string'\nimport {SearchLog} from '../util/util'\nimport {ResetResult} from '../store/system/actions'\nimport Pagination from '@material-ui/lab/Pagination'\nimport {Helmet} from 'react-helmet'\n\nconst {TwitterFollowButton} = require(\"react-twitter-embed\")\n\ninterface MatchParams {\n  snsid:string\n}\n\ninterface Props extends ReduxType,RouteComponentProps<MatchParams>,WithStyles<typeof styles>{}\n\ntype State = {\n  tabIndex:number\n  page:number\n  anchorEl:HTMLElement | null\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n  paper: {\n    padding:\"15px\",\n    borderRadius: \"10px\"\n  },\n  link: {\n    color:theme.palette.primary.dark\n  },\n  back: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"8px\"\n  },\n  select :{\n    fontSize: \"1.0rem\",\n    fontWeight:700,\n    color: theme.palette.grey[700]\n  },\n  selected: {\n    color:\"#0069c0\"\n  },\n  avatar: {\n    width: theme.spacing(5),\n    height: theme.spacing(5)\n  }\n})\n\nclass Plan extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    const {tabIndex,page} = this.parseQuery(this.props)\n    this.state = {\n      tabIndex:tabIndex,\n      page:page,\n      anchorEl:null\n    }\n  }\n  componentDidMount() {\n    this.props.getUserCompetitions(this.props.match.params.snsid,this.state.page,this.state.tabIndex)\n    this.props.getUser(this.props.match.params.snsid)\n  }\n  handeleChange(e:React.ChangeEvent<{}>,val:number) {\n    this.setState({tabIndex:val})\n    this.props.history.push({\n      search:`?p=1&sort=${val}`\n    })\n  }\n  handleClose() {\n    this.setState({\n      anchorEl:null\n    })\n  }\n  handleLink(link:string) {\n    this.props.history.push(link)\n  }\n  handlePopUp(e:React.MouseEvent<HTMLElement>) {\n    e.stopPropagation()\n    this.setState({\n      anchorEl:e.currentTarget\n    })\n  }\n  handelePage(page:number) {\n    this.setState({page:page})\n    this.props.history.push({\n      search: `?p=${page}&sort=${this.state.tabIndex}`\n    })\n  }\n  parseQuery(props:Props):any {\n    const parse = querystring.parse(props.location.search)\n    return {\n      tabIndex:parse.sort == undefined ? 1: Number(parse.sort),\n      page:parse.p == undefined ? 1: Number(parse.p)\n    }\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  componentDidUpdate(PrevProps:Props) {\n    if ( this.props.location.search != PrevProps.location.search) {\n      const {page,tabIndex} = this.parseQuery(this.props)\n      this.setState({\n        tabIndex:tabIndex,\n        page:page\n      })\n      this.props.getUserCompetitions(this.props.match.params.snsid,page,tabIndex)\n    }\n    if (this.props.location.pathname != PrevProps.location.pathname ) {\n      const {page,tabIndex} = this.parseQuery(this.props)\n      this.setState({\n        tabIndex:tabIndex,\n        page:page\n      })\n      this.props.getUser(this.props.match.params.snsid)\n      this.props.getUserCompetitions(this.props.match.params.snsid,page,tabIndex)\n    }\n  }\n  render() {\n    const {classes,user,competitions,system,session} = this.props\n    const {tabIndex} = this.state\n    const competitionsResult = SearchLog(system.result,\"competitions\")\n    const userResult = SearchLog(system.result,\"user\")\n    const mypage = user.id == session.auth.id ? true:false\n    const allPage:number = Math.ceil(competitions.allNumber/Number(process.env.REACT_APP_PERNUM))\n    if (userResult.status != 200 && userResult.status != 999 ) { return ( <Message mes={userResult.cause}/> )}\n    return (\n    <>\n    <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} >\n     {userResult.status == 200 && !system.loading.user &&\n     <>\n      <Grid item xs={12} sm={12}>\n      <div className=\"Plan\">\n        <Helmet>\n         <title>{user.screen_name}さんのマイページ</title>\n        </Helmet>\n      </div>\n        <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n          {user.screen_name}さんのマイページ \n        </Typography >\n        <Paper variant=\"outlined\" className={classes.paper} >\n          <List>\n            <ListItem style={{padding:0}} alignItems=\"flex-start\">\n              <ListItemAvatar style={{minWidth:50}}> \n                <Avatar src={process.env.PUBLIC_URL + \"/\" + user.avatar} aria-label=\"event\" className={classes.avatar}/>\n              </ListItemAvatar> \n              <ListItemText \n                  primary={<Typography variant=\"caption\" style={{color:\"#000\"}}>{user.screen_name}</Typography>}\n                  secondary={\n                    <>\n                    <Typography variant=\"caption\" component=\"p\" style={{color:\"#000\"}}>@{user.sns_id}</Typography>\n                    <Typography variant=\"caption\" component=\"p\" style={{color:\"#444\"}}>{user.description}</Typography>\n                    </>\n                    }/>\n              </ListItem>\n          </List>\n          {!mypage &&\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n            <TwitterFollowButton screenName={user.sns_id} />\n          </Box>\n          }\n          {mypage &&  \n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"left\">\n            <Button variant=\"text\" size=\"medium\"  onClick={()=> this.props.history.push(\"/creation\")} disableElevation  \n               style={{fontWeight:700}} color=\"primary\" >\n                イベント作成\n            </Button>\n            <Button variant=\"text\" size=\"medium\"  onClick={()=> this.props.history.push(\"/config\")} disableElevation color=\"primary\" \n               style={{fontWeight:700}} >\n               設定\n            </Button>\n          </Box>\n          }\n        </Paper>\n    </Grid>\n    <Grid item xs={12} sm={12} style={{marginBottom:15,marginTop:15}}>\n      <Tabs style={{borderBottom:\"1px solid #dcdcdc\"}} \n        value={tabIndex}\n        variant=\"standard\"\n        centered\n        onChange={(e,val)=> this.handeleChange(e,val)}>\n              <Tab label=\"今 後\" value={1} />\n              <Tab label=\"過 去\" value={2} />\n              <Tab label=\"未 定\" value={3} />\n      </Tabs>\n    </Grid>\n   {competitionsResult.status != 200 && competitionsResult.status != 999  && <Message mes={competitionsResult.cause}/>}\n   {competitionsResult.status == 200 && !system.loading.competitions &&\n    <>\n    { competitions.payload.map((data) => (\n     <Grid item xs={12} sm={12}>\n      <EventCard data={data} session={session} handler={this.handlePopUp.bind(this)} />\n     </Grid>\n     ))}\n     <Grid item xs={12} sm={12} md={12}>\n        <Pagination shape=\"rounded\" page={this.state.page} onChange={(e,p) => this.handelePage(p)} count={allPage} boundaryCount={5}/>\n     </Grid>\n     </>\n    } \n    </>\n   }\n    </Grid>\n    <Menu \n       keepMounted\n       anchorEl={this.state.anchorEl}\n       open={Boolean(this.state.anchorEl)}\n       onClose={(e) => this.handleClose()}\n       id=\"menu\"\n     >\n       <MenuItem onClick={() => this.handleLink(\"/creation?cid=\" + this.state.anchorEl?.getAttribute(\"data-id\")) }>編集</MenuItem>\n       <MenuItem onClick={() => this.handleLink(\"/pa_management?cid=\" + this.state.anchorEl?.getAttribute(\"data-id\")) } >参加管理</MenuItem>\n       <MenuItem onClick={() => this.handleLink(\"/compe_management?cid=\" + this.state.anchorEl?.getAttribute(\"data-id\")) } >ペアリング</MenuItem>\n    </Menu>\n    </>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    user:state.app.user,\n    competitions:state.app.competitions,\n    system:state.system,\n    session: state.session\n  }\n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    getUser(id:string){\n      GetUser(id)(dispatch)\n    },\n    getUserCompetitions(id:string,page:number,sort:number) {\n      GetUserCompetitions(id,page,sort)(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Plan)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/event.tsx",["312","313","314","315","316","317"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Divider} from '@material-ui/core'\nimport {Container,Grid,Tabs,Tab,Card,Button,Typography} from '@material-ui/core'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport EventList from '../components/eventlist'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\n\ntype State = {\n  tabindex:number\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingTop: \"20px\" \n    }\n  },\n  button: {\n    color: theme.palette.common.white,\n    fontWeight:700\n  }\n})\n\nclass Event extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      tabindex:0\n    }\n  }\n  handeleChange(e:React.ChangeEvent<{}>,val:number) {\n    this.setState({tabindex:val})\n  }\n  handleNew() {\n    this.props.history.push(\"/creation\")\n  }\n  render() {\n    const {classes} = this.props\n    const {tabindex} = this.state\n    return (\n    <Grid container spacing={2}  >\n    <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n           イベント管理 \n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Button size=\"medium\" onClick={()=> this.handleNew()} startIcon={<AddCircleOutlineIcon/>} variant=\"contained\"  color=\"primary\" className={classes.button}>\n         イベント作成\n        </Button>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n        <Grid container>\n        {\n          [1,2,3,4].map((i) => ( \n            <EventList key={i} editable={true}/>\n          ))\n        }\n        </Grid>\n      </Grid>\n    </Grid>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Event))\n",["318","319"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/eventlist.tsx",["320","321","322","323"],"import React from 'react'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles/'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport {Menu,MenuItem,colors} from '@material-ui/core/'\nimport ListItem from '@material-ui/core/ListItem'\nimport Divider from '@material-ui/core/Divider'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Avatar from '@material-ui/core/Avatar'\nimport {Competition} from '../store/app/types'\nimport {dayEditor,dataFormatwithday} from '../util/util'\nimport {Session} from '../store/session/types'\nimport BuildIcon from '@material-ui/icons/Build'\nimport EventIcon from '@material-ui/icons/Event'\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn'\nimport PlaceIcon from '@material-ui/icons/Place'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  data:Competition[]\n  session?:Session\n}\ninterface State {\n  anchorEl:HTMLElement | null\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    width:\"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  avatar: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  inline: {\n    display:'inline'\n  },\n  day: {\n    marginBottom:\"5px\"\n  }\n})\n\nclass EventList extends React.Component<Props,State>{\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      anchorEl:null\n    }\n  }\n  handleClick(id:number) {\n    this.props.history.push(\"/events/\" + id)\n  }\n  handleClose() {\n    this.setState({\n      anchorEl:null\n    })\n  }\n  handeleLink(to:string) {\n    this.props.history.push(to)\n  }\n  handleEdit(e:React.MouseEvent<HTMLElement>) {\n    //this.props.history.push(\"/creation?cid=\" + id)\n    this.setState({\n      anchorEl:e.currentTarget\n    })\n  }\n  render() {\n    const {classes,data,session} = this.props\n    return (\n    <>\n      <List className={classes.root} style={{paddingTop:0,paddingBottom:0}}>\n        { data.map((val)=>\n          (\n          <ListItem key={val.id} divider onClick={()=>this.handleClick(val.id)} style={{padding:15}} button alignItems=\"flex-start\" >\n          <ListItemText\n            primary={\n            <React.Fragment>\n               <Typography variant=\"h2\" style={{marginBottom:10}}>\n               {val.title}\n               </Typography>\n               <Typography variant=\"caption\">\n               <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <EventIcon style={{fontSize:14,color:colors.grey[600]}}/>\n                 <span style={{marginLeft:5}}>\n                  {val.event_day === null ? \"未定\": dataFormatwithday(val.event_day)} \n                 </span>\n               </div>\n               </Typography>\n               <Typography variant=\"caption\" component=\"p\">\n               <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <PlaceIcon style={{fontSize:14,color:colors.grey[600]}}/>\n                 <span style={{marginLeft:5}}>\n                  {val.place_text == null ? \"未定\" : val.place_text}\n                 </span>\n                 </div>\n               </Typography>\n            </React.Fragment>\n            }\n            secondary={\n            <React.Fragment>\n            <List style={{padding:0}}>\n                  <ListItem style={{padding:0}}>\n                   <ListItemAvatar style={{minWidth:30}}> \n                    <Avatar src={process.env.PUBLIC_URL + \"/\"+ val.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"caption\" style={{color:colors.grey[800]}}>{val.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" style={{color:colors.grey[800]}}>@{val.user.sns_id}・\n                  {dayEditor().to(dayEditor(val.update_at))}\n                  </Typography>}/>\n                  </ListItem>\n             </List>\n            </React.Fragment>\n          }\n          />\n          { session !== undefined  && session.auth.id == val.user_id &&\n           <ListItemSecondaryAction  >\n              <div>\n               <IconButton size=\"small\" edge=\"end\" data-id={val.id} aria-controls={\"menu\" + val.id} aria-haspopup=\"true\"\n                onClick={(e) => this.handleEdit(e)} aria-label=\"edit\">\n                      <BuildIcon style={{fontSize:20}} />\n                </IconButton>\n              </div>\n           </ListItemSecondaryAction>\n          }\n        </ListItem>\n          )\n        )\n      }\n      </List>\n      <Menu \n                 keepMounted\n                 anchorEl={this.state.anchorEl}\n                 open={Boolean(this.state.anchorEl)}\n                 onClose={(e) => this.handleClose()}\n                 id=\"menu\"\n                >\n                <MenuItem onClick={() => this.handeleLink(\"/creation?cid=\" + this.state.anchorEl?.getAttribute(\"data-id\")) }>編集</MenuItem>\n                <MenuItem onClick={() => this.handeleLink(\"/pa_management?cid=\" + this.state.anchorEl?.getAttribute(\"data-id\")) } >参加管理</MenuItem>\n                <MenuItem onClick={() => this.handeleLink(\"/compe_management?cid=\" + this.state.anchorEl?.getAttribute(\"data-id\")) } >ペアリング</MenuItem>\n                </Menu>\n      </>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(EventList))\n",["324","325"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/layout/layout.tsx",["326","327","328","329","330","331"],"import React from 'react'\nimport {Route} from 'react-router-dom'\nimport {withRouter,RouteComponentProps,Switch} from 'react-router-dom'\nimport Menu from '../components/menu'\nimport {Container,Theme,Grid,Hidden,Snackbar,SnackbarContent} from '@material-ui/core'\nimport {createStyles,withStyles,WithStyles} from '@material-ui/styles'\nimport Alert from '@material-ui/lab/Alert'\nimport All from '../page/all'\nimport Search from '../page/search'\nimport Guid from '../page/guid'\nimport Plan from '../page/plan'\nimport Editing from '../page/editing'\nimport Events from '../page/event'\nimport Dm from '../page/dm'\nimport Config from '../page/config'\nimport Detail from '../page/detail'\nimport PaManagement from '../page/pa_management'\nimport CompeManagement from '../page/compe_management'\nimport Combinations from '../page/combinations'\nimport PrivateRoute from '../page/privateRoute'\nimport BottomNavi from '../components/bottomNavi'\nimport TopBar from '../components/TopBar'\nimport {RootState} from '../store'\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport {GetSession,LogOut} from '../store/session/api'\nimport {ResetSnack} from '../store/system/actions'\nimport {snackStatus} from '../store/system/types'\n\ninterface Props extends ReduxProps,RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  container: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginBottom:\"100px\",\n    }\n  },\n  root: {\n    paddingTop: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: \"50px 10px 10px 10px\"\n    }\n  },\n  toolbar: theme.mixins.toolbar\n})\n\nclass Layout extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.props.getSession()\n  }\n  componentDidMount() {\n  // if (this.props.session.auth.id == undefined) {\n    //this.props.getSession()\n //  }\n  }\n  logouthandler(){\n    this.props.logOut()\n  }\n  getColor(d:snackStatus):string {\n    switch (d){\n      case null:\n        return \"\"\n      case \"success\":\n        return \"green\"\n      case \"info\":\n        return \"blue\"\n      case \"error\":\n        return \"red\"\n      case \"warning\":\n        return \"orange\"\n      defalt:\n        return \"greeen\"\n    }\n  }\n  render() {\n    const {classes,session,system} = this.props\n    const snackColor =  this.getColor(system.snack.status)\n    return (\n    <div>\n      <Container maxWidth={\"lg\"} className={classes.container}>\n        <div className={classes.toolbar}/>\n        <TopBar session={session} handler={()=>this.logouthandler()}/>\n        <Grid container className={classes.root} direction=\"row\" justify=\"center\" spacing={4} >\n          <Hidden smDown >\n            <Grid  md={3} item>\n              <Menu session={session}/>\n            </Grid>\n          </Hidden>\n          <Grid xs={12} sm={12} md={7} item>\n            <Switch>\n              <Route exact path=\"/users/:snsid\" component={Plan} />\n              <Route exact path=\"/events\" component={All} />\n              <Route exact path=\"/events/:id\" component={Detail} />\n              <Route exact path=\"/search\" component={Search} />\n              <Route exact path=\"/guid\" component={Guid} />\n              <Route exact path=\"/dm\" component={Dm} />\n              <Route exact path=\"/combinations/:cid\" component={Combinations} />\n              <PrivateRoute  path=\"/config\" component={Config} auth=\"/events\" />\n              <PrivateRoute  path=\"/creation\" component={Editing} auth=\"/events\" />\n              <PrivateRoute  path=\"/pa_management\" component={PaManagement} auth=\"/events\" />\n              <PrivateRoute  path=\"/compe_management\" component={CompeManagement} auth=\"/events\" />\n            </Switch>\n          </Grid>\n          <Hidden smDown >\n            <Grid  md={2} item>\n            </Grid>\n          </Hidden>\n        </Grid>\n     </Container>\n     <Snackbar  open={system.snack.status !== null ? true:false} autoHideDuration={3000}\n     onClose={() => this.props.resetSnack()} anchorOrigin={{horizontal: 'center',vertical:'top'}}>\n     <Alert variant=\"filled\" severity={system.snack.status !== null ? system.snack.status : \"info\"}>\n      {system.snack.message}\n      </Alert>\n     </Snackbar>\n     <Hidden smUp>\n          <BottomNavi session={session} />\n          </Hidden>\n     </div>\n    )\n  }\n}\n\nconst  mapStateToProps = (state:RootState) => {\n  return  {\n    session:state.session,\n    system:state.system\n  }\n}\n\nconst mapDispatchToProps = (dispatch:Dispatch) => {\n  return {\n    getSession() {\n      GetSession()(dispatch)\n    },\n    logOut() {\n      LogOut()(dispatch)\n    },\n    resetSnack() {\n      dispatch(ResetSnack())\n    }\n  }\n}\n\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Layout)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/editing.tsx",["332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React from 'react'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\nimport {List,ListItem,ListItemText,Button,Dialog,DialogTitle,DialogContent,IconButton,Checkbox,Grid,Chip,Typography,Card,TextField,Paper,InputAdornment} from '@material-ui/core'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport {colors,Modal} from '@material-ui/core'\nimport Mde from '../components/mde'\nimport PlaceIcon from '@material-ui/icons/Place'\nimport CloseIcon from '@material-ui/icons/Close'\nimport {RootState} from '../store/'\nimport {Club,PostCompetition} from '../store/app/types'\nimport {connect} from 'react-redux'\nimport {Dispatch} from 'redux'\nimport {DeleteCompetition,GetCompetition,GetClubs,PostCompetitionDate} from '../store/app/api'\nimport {ResetResult} from '../store/system/actions'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport querystring from 'query-string'\nimport {SearchLog} from '../util/util'\nimport {dayEditor,dateFormat} from '../util/util'\nimport {Helmet} from 'react-helmet'\n\n\ninterface Props extends ReduxType,RouteComponentProps,WithStyles<typeof styles>{}\n\ntype keyData = {\n  key:number,\n  word:string\n}\n\ntype Element = any\n\ninterface State{\n  cid:number\n  club_keyword:string\n  open:boolean\n  keywords: keyData[] \n  _word: string\n  input: {\n    title: {\n      error: boolean\n      error_message:string\n      value:string\n      check:()=>void\n    }\n    detail: {\n      error:boolean\n      error_message:string\n      value:string\n      check:()=>void\n    }\n    keyword :{\n      error:boolean\n      error_message:string\n      value:string | null\n      check:()=>void\n    }\n    place: {\n      error:boolean\n      error_message:string\n      value:string | null\n      club:number | null\n      check:()=>void\n    },\n    event_day: {\n      error:boolean\n      error_message:string\n      value:string\n      check:()=>void\n    }\n    event_deadline: {\n      error:boolean\n      error_message:string\n      value:string\n      check:()=>void\n    }\n    capacity: {\n      error:boolean,\n      error_message:string,\n      value:number | null,\n      check:()=>void\n    }\n    twitter: {\n      value:boolean\n    }\n  }\n}\n\nconst styles = (theme:Theme) => createStyles({\n      root: {\n        width:\"100%\",\n        '& > *': {\n          margin: theme.spacing(1),\n          width: '100%'\n        }\n      },\n      formLabel: {\n        color: theme.palette.grey[900],\n        fontSize: 16,\n        '&.Mui-focused': {\n          color:theme.palette.primary.main\n        }\n      },\n      check: {\n        color: theme.palette.grey[400],\n        '&$checked': {\n          color: theme.palette.primary.main\n        }\n      },\n      modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper : {\n        minWidth:400,\n        padding:theme.spacing(2),\n        position: 'absolute',\n        border: '1px solid #fff'\n      },\n      keywords: {\n       display: 'flex',\n       justifyContent: 'left',\n       flexWrap: 'wrap',\n       listStyle: 'none',\n       padding: theme.spacing(0.5),\n       margin: 0,\n      },\n      chip: {\n       margin: theme.spacing(0.5),\n       color: theme.palette.common.black,\n       fontWeight:600,\n      }\n})\n\nclass New extends React.Component<Props,State>{\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      cid:0,\n      club_keyword:\"\",\n      open:false,\n      keywords: [], \n      _word: '',\n      input: {\n        title: {\n          error:false,\n          error_message:\"\",\n          value:\"\",\n          check:()=> this.checkTitle()\n        },\n        detail: {\n          error:false,\n          error_message:\"\",\n          value:\"\",\n          check:()=> this.checkDetail()\n        },\n        keyword: {\n          error:false,\n          error_message:\"\",\n          value:null,\n          check:()=>{} \n        },\n        place: {\n          error:false,\n          error_message:\"\",\n          value:null,\n          club: null,\n          check :()=>{} \n        },\n        event_day: {\n          error:false,\n          error_message:\"\",\n          value:\"\",\n          check:()=> this.checkEventday() \n        },\n        event_deadline: {\n          error:false,\n          error_message:\"\",\n          value:\"\",\n          check:()=> this.checkDeadline() \n        },\n        capacity: {\n          error:false,\n          error_message:\"\",\n          value:null,\n          check:() => this.checkCapacity()\n        },\n        twitter: {\n          value:false\n        }\n      }\n    }\n  }\n  queryParse():number {\n    const parse = querystring.parse(this.props.location.search)\n    return parse.cid == undefined ? 0: Number(parse.cid)\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  componentDidMount() {\n    let cid = this.queryParse()\n    if (cid == 0) {\n      return\n    }\n    this.props.getCompetition(cid)\n  }\n  componentDidUpdate(ProveProps:Props) {\n    if (this.props.competition != ProveProps.competition) {\n        const {competition} = this.props\n        let cid = this.props.competition.id == undefined ? 0: this.props.competition.id\n        const {input} = this.state\n        let tempKey:keyData[] = [] as keyData[]\n        let i:number = 0\n        //キーワード\n      if (competition.keyword != null) {\n        let t = competition.keyword.split(',')\n        t.map((v:string) =>{\n        tempKey.push({key:i,word:v})\n        i++\n        })\n      }\n      this.setState({\n        cid:cid,\n        keywords: tempKey,\n        input: {\n          ...input,\n          title:{\n            ...input.title,\n            value: competition.title, \n          },\n          detail:{\n            ...input.detail,\n            value: competition.contents,\n          },\n          place:{\n            ...input.place,\n            club: competition.club_id,\n            value: competition.place_text,\n          },\n          capacity: {\n            ...input.capacity,\n            value: competition.capacity == 0 ? null:competition.capacity,\n          },\n          event_day:{\n            ...input.event_day,\n            value: competition.event_day== null ? \"\":dateFormat(competition.event_day)\n          },\n          event_deadline:{\n            ...input.event_deadline,\n            value: competition.event_deadline == null ? \"\":dateFormat(competition.event_deadline)\n          }\n        }\n      })\n    }\n   }\n  checkTitle() {\n    const {title} = this.state.input\n    title.error= false\n    title.error_message = \"\"\n    if (title.value == \"\" ) {\n      title.error = true\n      title.error_message = \"タイトルを入力してください\"\n    }\n    this.setState({\n      input: {\n        ...this.state.input,\n        title: {\n          ...this.state.input.title,\n          error:title.error,\n          error_message:title.error_message\n        }\n      }\n    })\n  }\n  checkDetail() {\n    const {detail} = this.state.input\n    detail.error = false\n    detail.error_message = \"\"\n    if (detail.value == \"\") {\n      detail.error = true\n      detail.error_message = \"詳細を入力してください\"\n    }\n    this.setState({\n      input: {\n        ...this.state.input,\n        detail: {\n          ...this.state.input.detail,\n          error:detail.error,\n          error_message:detail.error_message\n        }\n      }\n    })\n  }\n  checkCapacity() {\n    const {capacity} = this.state.input\n    capacity.error = false\n    capacity.error_message = \"\"\n    if (capacity.value !== null) {\n      if (!Number.isInteger(capacity.value)) {\n        capacity.error = false\n        capacity.error_message = \"半角数字で入力してください\"\n      }\n    }\n    this.setState({\n      input: {\n        ...this.state.input,\n        capacity: {\n          ...this.state.input.capacity,\n          error:capacity.error,\n          error_message:capacity.error_message\n        }\n      }\n    })\n  }\n  checkEventday(){\n    const {event_day} = this.state.input\n    const now = dayEditor()\n    event_day.error = false\n    event_day.error_message = \"\" \n    if (event_day.value !== \"\" && event_day.value !==  null) {\n      if (now.isAfter(dayEditor(event_day.value))) {\n        event_day.error = true\n        event_day.error_message = \"今日以降の日付を設定してください\"\n      }\n    }\n    this.setState({\n      input: {\n        ...this.state.input,\n        event_day: {\n          ...this.state.input.event_day,\n          error:event_day.error,\n          error_message:event_day.error_message\n        }\n      }\n    })\n  }\n  checkDeadline(){\n    const {event_deadline,event_day} = this.state.input\n    const now = dayEditor()\n    event_deadline.error = false\n    event_deadline.error_message = \"\" \n    if (event_deadline.value !== \"\" && event_deadline.value !== null) {\n      if (now.isAfter(dayEditor(event_deadline.value))) {\n        event_deadline.error = true\n        event_deadline.error_message = \"今日以降の日時を設定してください\"\n      }\n    }\n    if ((event_deadline.value !== \"\" && event_deadline.value !== null ) && (event_day.value !== \"\" && event_day.value !== null)) {\n      if (!dayEditor(event_day.value).isAfter(dayEditor(event_deadline.value))) {\n        event_deadline.error = true\n        event_deadline.error_message = \"締切日時は開催日時以前に設定してください\"\n      }\n    }\n    this.setState({\n      input: {\n        ...this.state.input,\n        event_deadline: {\n          ...this.state.input.event_deadline,\n          error:event_deadline.error,\n          error_message:event_deadline.error_message\n        }\n      }\n    })\n  }\n  handleDelete(data:keyData) {\n    const result = this.state.keywords.filter((d)=> d.word != data.word)\n    this.setState({keywords:result})\n  }\n  check():boolean {\n    return this.state.keywords.some((data) => data.word === this.state._word)\n  }\n  send() {\n   const {input,keywords} = this.state\n   let temp:string[] = [] as string[]\n   keywords.map((v) => {\n     temp.push(v.word)\n   })\n   if (temp.length > 0) {\n     input.keyword.value = temp.join()\n   } else {\n     input.keyword.value = null\n   }\n   if (!this.checkAll()) {\n     return\n   }\n   let data:PostCompetition = {\n     id:this.state.cid,\n     title:input.title.value,\n     contents:input.detail.value,\n     capacity:input.capacity.value == 0 ? null:input.capacity.value,\n     keyword: input.keyword.value == \"\" ? null:input.keyword.value,\n     place_text:input.place.value == \"\" ? null: input.place.value,\n     club_id:input.place.club == 0 ? null:input.place.club,\n     status:1,\n     event_day:input.event_day.value == \"\" ? null: new Date(input.event_day.value),\n     event_deadline:input.event_deadline.value == \"\" ? null:new Date(input.event_deadline.value),\n     user_id:this.props.session.auth.id,\n     twitter:input.twitter.value\n   }\n   this.props.sendData(data)\n  }\n  delete(id:number) {\n    if (window.confirm(\"本当に削除しますか？\")) {\n      this.props.deleteCompetition(id)\n      this.props.resetLog()\n      this.props.history.push(\"/users/\" + this.props.session.auth.sns_id)\n    }\n  }\n  checkAll():boolean {\n    const {input} = this.state\n    input.title.check()\n    input.detail.check()\n    input.place.check()\n    input.event_day.check()\n    input.event_deadline.check()\n    input.keyword.check()\n    input.capacity.check()\n    return !input.title.error && !input.detail.error && !input.place.error && !input.event_day.error && !input.event_deadline.error &&\n           !input.keyword.error && !input.capacity.error\n  }\n  handleSelect(data:Club){\n    const {input}  = this.state\n    this.setState({\n      open:false,\n      input:{\n        ...input,\n        place: {\n          ...input.place,\n          club: data.id,\n          value: data.name + \" \" + data.address\n        }\n      }\n    })\n    this.props.resetLog()\n  }\n  render(){\n    const {classes,system,clubs,competition,getClubs} = this.props\n    const {keywords,input,cid} = this.state\n    const clubsRsult = SearchLog(system.result,\"clubs\")\n    if (system.loading.competition ) {\n      return (<Progress/>)\n    }\n    return (\n     <Grid container spacing={3}> \n      <div className=\"New\">\n        <Helmet>\n         <title>{cid == 0 ? \"イベント作成\":\"イベント編集\"}</title>\n        </Helmet>\n      </div>\n      <Grid item xs={12} sm={12}>\n        <Typography variant=\"h1\">\n        { cid == 0 && \n         <span> イベントを作成する</span>\n        }\n        { cid != 0 &&\n         <span> イベントを編集する</span>\n         }\n         </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n         <Paper elevation={0} variant=\"outlined\" style={{padding:15}}>\n         <Grid container spacing={3}>\n           <Grid item xs={12} sm={12}>\n            <TextField label=\"タイトル\" error={input.title.error} helperText={input.title.error_message} fullWidth multiline required id=\"title\"\n            variant=\"standard\" value={this.state.input.title.value}  onChange={(e) => this.setState({\n                  input: {\n                    ...input,\n                    title: {\n                      ...input.title,\n                      value: e.target.value\n                    }\n                  }\n              })}  InputLabelProps={{className:classes.formLabel,shrink:true}}/>\n           </Grid>\n           <Grid item xs={12} sm={12}>\n            <Typography  style={{fontSize:13,color:colors.grey[900]}}>\n            詳細*\n           </Typography>\n            <Mde data={input.detail.value} handlerProps={(str:string) => this.setState({\n                input: {\n                  ...input,\n                  detail: {\n                    ...input.detail,\n                    value:str\n                  }\n                }\n              })} />\n            { input.detail.error && <span style={{color:colors.red[700]}}>{input.detail.error_message}</span>\n            }\n           </Grid>\n           <Grid item xs={12} sm={12} style={{paddingTop:0,paddingBottom:0}}>\n            <ul className={classes.keywords}>\n              {\n                keywords.map((d:keyData)=> (\n                <li >\n                  <Chip label={d.word} size=\"small\" onDelete={() => this.handleDelete(d) }  className={classes.chip}/>\n                </li>\n                ))\n              }\n            </ul>\n           </Grid>\n           <Grid item xs={12} sm={12}>\n            <TextField\n              id=\"keyword\"\n              variant=\"standard\"\n              label=\"キーワード\"\n              value={this.state._word}\n              fullWidth\n              InputLabelProps={{\n                className:classes.formLabel,\n                shrink:true\n              }}\n              onChange={(e)=>this.setState({_word:e.target.value})}\n              onBlur={e => {\n                if (!this.check() && this.state._word != \"\") {\n                    keywords.push({key:0,word:this.state._word})\n                    this.setState({_word:''})\n                }\n              }}\n              onKeyDown={e => {\n                if (e.keyCode === 13) {\n                  if (!this.check()) {\n                    keywords.push({key:0,word:this.state._word})\n                    this.setState({_word:''})\n                  }\n                }\n              }}\n            />\n           </Grid>\n           <Grid item xs={12} sm={12}>\n            <TextField fullWidth multiline id=\"place\"\n            variant=\"standard\" \n            label=\"場所(未定の場合は空欄)\"\n            InputLabelProps={{\n                className:classes.formLabel,\n                shrink:true\n            }}\n            value={this.state.input.place.value}\n            onChange={(e) => this.setState({\n              input: {\n                ...this.state.input,\n                place: {\n                  ...this.state.input.place,\n                  value: e.target.value\n                }\n              }\n            })}\n            InputProps={{\n                endAdornment:( \n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={()=> this.setState({open:true})} size=\"small\">\n                    <PlaceIcon/>\n                    </IconButton>\n                  </InputAdornment>\n                 ) \n              }}\n            />\n           </Grid>\n           <Grid item xs={12} sm={12}>\n            <TextField\n              id=\"Helddate\"\n              type=\"datetime-local\"\n              variant=\"standard\"\n              label=\"開催日時(未定の場合は空欄)\"\n              fullWidth\n              error={this.state.input.event_day.error}\n              helperText={this.state.input.event_day.error_message}\n              value={this.state.input.event_day.value}\n              onChange={(e) => this.setState({\n                input: {\n                  ...input,\n                  event_day: {\n                    ...input.event_day,\n                    value:e.target.value\n                  }\n                }\n              })}\n              InputLabelProps={{\n                className:classes.formLabel,\n                shrink:true\n              }}\n            />\n           </Grid>\n           <Grid item xs={12} sm={12}>\n            <TextField\n              id=\"Deadline\"\n              type=\"datetime-local\"\n              label=\"締切日時(未定の場合は空欄)\"\n              variant=\"standard\"\n              error={this.state.input.event_deadline.error}\n              helperText={this.state.input.event_deadline.error_message}\n              fullWidth\n              value={this.state.input.event_deadline.value}\n              onChange={(e) => this.setState({\n                input: {\n                  ...input,\n                  event_deadline: {\n                    ...input.event_deadline,\n                    value:e.target.value\n                  }\n                }\n              })}\n              InputLabelProps={{\n                className:classes.formLabel,\n                shrink:true\n              }}\n            />\n           </Grid>\n           <Grid item xs={12} sm={12}>\n           <TextField\n              id=\"capacity\"\n              type=\"number\"\n              label=\"参加定員(未定の場合は空欄)\"\n              InputProps={{inputProps:{min:1}}}\n              fullWidth\n              variant=\"standard\"\n              value={this.state.input.capacity.value}\n              onChange={(e) => this.setState({\n                input: {\n                  ...input,\n                  capacity: {\n                    ...input.capacity,\n                    value:Number(e.target.value)\n                  }\n                }\n              })}\n              InputLabelProps={{\n                className:classes.formLabel,\n                shrink:true\n              }}\n            />\n           </Grid>\n           <Grid item xs={12} sm={12}>\n             <FormControlLabel  \n              control={\n                <Checkbox\n                className={classes.check}\n                name=\"twitter\"\n                onChange={(e) => this.setState({\n                  input: {\n                    ...input,\n                    twitter: {\n                      value:e.target.checked\n                    }\n                  }\n                })}\n                checked={this.state.input.twitter.value}\n                color=\"primary\"\n                />\n              }\n              label=\"Twitterにも投稿\"/>\n           </Grid>\n           <Grid item xs={12} sm={12}>\n            <Button disableElevation onClick={()=>this.send()}size=\"medium\" style={{color:\"#fff\",fontWeight:700}} variant=\"contained\" color=\"primary\">\n            {cid == 0 ? \"登録する\":\"更新する\"}\n            </Button>\n            {cid != 0 && \n            <Button disableElevation onClick={()=>this.delete(Number(cid))}size=\"medium\" style={{color:\"#fff\",fontWeight:700,marginLeft:15}} variant=\"contained\" color=\"secondary\">\n              削除する \n            </Button>\n            }\n           </Grid>\n         </Grid>\n        </Paper>\n      </Grid>\n      <Dialog open={this.state.open} fullScreen>\n        <DialogTitle id=\"dialog\" style={{fontWeight:\"bold\"}}>\n          <IconButton edge=\"start\" onClick={()=> {\n            this.setState({open:false,club_keyword:\"\"})\n            this.props.resetLog()\n           }}>\n            <CloseIcon/>\n          </IconButton>\n          ゴルフ場・練習場検索\n        </DialogTitle>\n        <DialogContent dividers>\n          <TextField\n            autoFocus\n            multiline={false}\n            margin=\"dense\"\n            id=\"key\"\n            label=\"キーワード\"\n            type=\"text\"\n            onChange={(e) => {\n              this.setState({club_keyword:e.target.value})\n            }}\n            onKeyDown={(e) => {\n              if (e.keyCode == 13) {\n                if (this.state.club_keyword != \"\") {\n                  (e.target as HTMLElement).blur()\n                }\n              }\n            }}\n            onBlur={(e) => {\n              if (this.state.club_keyword != \"\") {\n                getClubs(this.state.club_keyword)\n              }\n            }}\n            fullWidth\n          />\n         {system.loading.clubs && <Progress/>} \n         {clubsRsult.status != 200 && clubsRsult.status != 999 && <Message mes={clubsRsult.cause}/>}\n         {clubsRsult.status == 200 && !system.loading.clubs &&\n           <List>\n            {\n              clubs.map((val) => (\n                <ListItem key={val.id} divider  button alignItems=\"flex-start\">\n                <ListItemText style={{padding:20}} onClick={() => this.handleSelect(val)}\n                  primary={\n                    <Typography variant=\"h3\">\n                    {val.name + \"  \" + val.address}\n                    </Typography>\n                  }\n                 />\n                </ListItem>\n              ))\n            }\n           </List>\n         }\n        </DialogContent>\n      </Dialog>\n     </Grid>\n    )\n  }\n}\n\nconst mapPropsToState = (state:RootState)  => {\n  return {\n    competition:state.app.competition,\n    system:state.system,\n    clubs:state.app.clubs,\n    session:state.session\n  }\n}\n\nconst mapPropsToDispatch = (dispatch:Dispatch) => {\n  return {\n    getClubs(key:string) {\n      GetClubs(key)(dispatch)\n    },\n    resetLog() {\n      dispatch(ResetResult())\n    },\n    sendData(data:PostCompetition) {\n      PostCompetitionDate(data)(dispatch)\n    },\n    getCompetition(id:number) {\n      GetCompetition(id)(dispatch)\n    },\n    deleteCompetition(id:number) {\n      DeleteCompetition(id)(dispatch)\n    }\n  }\n}\ntype ReduxType = ReturnType<typeof mapPropsToState> & ReturnType<typeof mapPropsToDispatch>\n\nexport default connect(mapPropsToState,mapPropsToDispatch)(withRouter(withStyles(styles,{withTheme:true})(New)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/mde.tsx",["365"],"import React from 'react'\nimport SimpleMde from 'react-simplemde-editor'\nimport 'easymde/dist/easymde.min.css'\n\ninterface Props {\n  handlerProps: (s:string) => void\n  data:string\n}\ninterface State {}\n\nexport default class Mde extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  handleChange(e:string) {\n    this.props.handlerProps(e)\n  }\n  render() {\n    return (\n      <SimpleMde value={this.props.data} onChange={(e)=> this.handleChange(e)}/>\n    )\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/dm.tsx",["366"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Theme,Grid,Typography} from '@material-ui/core'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  }\n}) \n\nclass Dm extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Grid container spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h1\">\n              DM送信\n            </Typography>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(Dm))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/config.tsx",["367","368","369","370","371","372"],"import React from 'react'\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {colors,FormControl,FormHelperText,Select,MenuItem,InputLabel,Box,Button,TextField,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport {Helmet} from 'react-helmet'\nimport {RootState} from '../store'\nimport {ResetResult} from '../store/system/actions'\nimport {PostRealNameData} from '../store/app/api'\nimport {PostRealName} from '../store/app/types'\nimport {GetSession} from '../store/session/api'\nimport {SearchLog,dateFormatNotime} from '../util/util'\n\ninterface Props extends ReduxType,RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {\n  real_name: {\n    name: {\n      error:boolean\n      error_message:string\n      value:string\n    }\n    kana: {\n      error:boolean\n      error_message: string\n      value:string\n    }\n  }\n  sex: {\n    error:boolean\n    error_message:string\n    value:number\n  }\n  birthday: {\n    error:boolean\n    error_message:string\n    value:string\n  }\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n  paper: {\n    padding:\"20px\",\n    borderRadius: \"10px\"\n  },\n   formControl: {\n      minWidth: 100,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  formLabel: {\n    color: theme.palette.grey[900],\n    fontSize: 15,\n    '&.Mui-focused': {\n      color:theme.palette.primary.main\n    }\n  },\n  helperTxt: {\n    color: theme.palette.info.dark\n  }\n}) \n\nclass Config extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      real_name: {\n        name: {\n          error:false,\n          error_message:\"\",\n          value:this.props.session.auth.real_name == null ? \"\": this.props.session.auth.real_name\n        },\n        kana: {\n          error:false,\n          error_message: \"\",\n          value:this.props.session.auth.real_name_kana == null ? \"\": this.props.session.auth.real_name_kana\n        }\n      },\n      sex: {\n        error:false,\n        error_message:\"\",\n        value:this.props.session.auth.sex == null ? 0: this.props.session.auth.sex\n      },\n      birthday: {\n        error:false,\n        error_message:\"\",\n        value:this.props.session.auth.birthday == null ? \"\": dateFormatNotime(this.props.session.auth.birthday)\n        }\n    }\n  }\n  checkName():boolean {\n    const {real_name} = this.state\n    real_name.name.error = false\n    real_name.name.error_message = \"\" \n    if (real_name.name.value == \"\") {\n      real_name.name.error = true\n      real_name.name.error_message = \"氏名を入力してください\"\n    }\n      this.setState({\n        ...this.state,\n        real_name: {\n          ...this.state.real_name,\n          name: {\n            ...this.state.real_name.name,\n            error:real_name.name.error, \n            error_message: real_name.name.error_message \n          }\n        }\n      })\n    return real_name.name.error\n  }\n  checkKana():boolean {\n    const {real_name} = this.state\n    real_name.kana.error = false\n    real_name.kana.error_message = \"\" \n    if (real_name.kana.value == \"\") {\n      real_name.kana.error = true\n      real_name.kana.error_message = \"ふりがなを入力してください\"\n    }\n      this.setState({\n        ...this.state,\n        real_name: {\n          ...this.state.real_name,\n          kana: {\n            ...this.state.real_name.kana,\n            error:real_name.kana.error, \n            error_message: real_name.kana.error_message \n          }\n        }\n      })\n    return real_name.kana.error\n  }\n  checkSex():boolean {\n    const {sex} = this.state\n    sex.error = false\n    sex.error_message = \"\"\n    if (!sex.value) {\n      sex.error = true\n      sex.error_message = \"選択してください\"\n    }\n      this.setState({\n        ...this.state,\n        sex: {\n          ...this.state.sex,\n          error:sex.error,\n          error_message:sex.error_message\n          }\n        }\n      )\n    return sex.error\n  }\n  checkBirthday():boolean {\n    const {birthday} = this.state\n    birthday.error = false\n    birthday.error_message = \"\"\n    if (birthday.value == \"\") {\n      birthday.error = true\n      birthday.error_message = \"選択してください\"\n    }\n      this.setState({\n        ...this.state,\n        birthday: {\n          ...this.state.birthday,\n          error:birthday.error,\n          error_message:birthday.error_message\n          }\n        }\n      )\n    return birthday.error\n  }\n  send() {\n    if (!this.checkName() && !this.checkKana() && !this.checkSex() && !this.checkBirthday()) {\n      let data = {\n        id: this.props.session.auth.id,\n        real_name: this.state.real_name.name.value,\n        real_name_kana: this.state.real_name.kana.value,\n        sex:this.state.sex.value,\n        birthday:new Date(this.state.birthday.value)\n      }\n      this.props.postRealName(data)\n    }\n  }\n  componentWillUnmount() {\n    this.props.getSession()\n    this.props.resetLog()\n  }\n  render() {\n    const {classes,session,system} = this.props\n    const {real_name} = this.state\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={2}>\n          <Grid item xs={12} sm={12}>\n            <div className=\"Plan\">\n              <Helmet>\n                <title>設定</title>\n              </Helmet>\n            </div>\n            <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n              設定\n            </Typography>\n            <Paper variant=\"outlined\" className={classes.paper}>\n              <Typography variant=\"h2\" style={{marginBottom:\"10px\"}}>\n              基本情報を登録する\n              </Typography>\n              <Typography variant=\"caption\">\n                参加イベントの主催者に基本情報を通知することができます。\n                必須ではありませんが、コンペの際に必要になる事が多いので予め登録する事をお勧めします。\n              </Typography>\n              <Box style={{marginTop:13}}>\n                <TextField label=\"氏名\" error={real_name.name.error} value={real_name.name.value} helperText={real_name.name.error_message} \n                fullWidth required id=\"name\" variant=\"standard\" InputLabelProps={{\n                shrink: true,\n                className: classes.formLabel\n                }}\n                onChange={(e)=> this.setState({\n                   ...this.state, \n                   real_name: {\n                     ...this.state.real_name,\n                     name: {\n                       ...this.state.real_name.name,\n                       value: e.target.value\n                     }\n                   }\n                  })}\n                />\n              </Box>\n              <Box style={{marginTop:13}}>\n                <TextField label=\"ふりがな\" error={real_name.kana.error} value={real_name.kana.value} helperText={real_name.kana.error_message} \n                fullWidth required id=\"kana\" variant=\"standard\" InputLabelProps={{\n                shrink: true,\n                className: classes.formLabel\n                }}\n                onChange={(e)=> this.setState({\n                   ...this.state, \n                   real_name: {\n                     ...this.state.real_name,\n                     kana: {\n                       ...this.state.real_name.kana,\n                       value: e.target.value\n                     }\n                   }\n                  })}\n                />\n              </Box>\n              <Box style={{marginTop:15}}>\n               <FormControl required className={classes.formControl}>\n                <InputLabel error={this.state.sex.error} shrink id=\"sex\" className={classes.formLabel}>\n                  性別\n                </InputLabel>\n                <Select\n                 fullWidth\n                 value={this.state.sex.value}\n                 error={this.state.sex.error}\n                 label=\"性別\"\n                 required\n                 onChange={(e) => this.setState({\n                 ...this.state,\n                 sex: {\n                    ...this.state.sex,\n                    value:Number(e.target.value)\n                 }\n                 })}\n                >\n                <MenuItem value={0}>選択</MenuItem>\n                <MenuItem value={1}>男性</MenuItem>\n                <MenuItem value={2}>女性</MenuItem>\n               </Select>\n               <FormHelperText error={this.state.sex.error}>{this.state.sex.error_message}</FormHelperText>\n              </FormControl>\n              </Box>\n              <Box style={{marginTop:15}}>\n              <TextField\n               id=\"date\"\n               label=\"誕生日\"\n               error={this.state.birthday.error}\n               helperText={this.state.birthday.error_message}\n               fullWidth\n               required\n               type=\"date\"\n               value={this.state.birthday.value}\n               FormHelperTextProps={{\n                 className:classes.helperTxt\n               }}\n               onChange={(e)=>this.setState({\n                 ...this.state,\n                 birthday: {\n                   ...this.state.birthday,\n                   value: e.target.value\n                 }\n               })}\n               InputLabelProps={{\n               shrink: true,\n               className: classes.formLabel\n               }}\n              />\n              </Box>\n              <Box style={{marginTop:15}}>\n                <Button\n                 disableElevation\n                 disabled={system.loading.user}\n                 color=\"primary\"\n                 variant=\"contained\"\n                 style={{color:\"#fff\",fontWeight:700}}\n                 onClick={()=> this.send()}>\n                 保存する\n              </Button>\n              </Box>\n            </Paper>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    session:state.session,\n    system: state.system\n  }\n}\n\nconst mapDispatchProps = (dispatch:Dispatch) => {\n  return {\n    postRealName(data:PostRealName) {\n      PostRealNameData(data)(dispatch)\n    },\n    getSession() {\n      GetSession()(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchProps>\n\n\nexport default connect(mapStateToProps,mapDispatchProps)(withRouter(withStyles(styles,{withTheme:true})(Config)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/detail.tsx",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Box,Divider,TextField,Button,Avatar,List,colors,ListItem,CircularProgress,ListItemAvatar,ListItemText,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport marked from 'marked'\nimport {Competition} from '../store/app/types'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport KeyWords from '../components/keyWord'\nimport Message from '../components/message'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport {PostComments,GetCompetition,GetParticipants,GetComments,PostPatricipant} from '../store/app/api'\nimport {ResetResult} from '../store/system/actions'\nimport Progress from '../components/progress'\nimport {nl2br,dataFormatwithday,dateFormat,dayEditor,ExtractionParticipants,SearchLog} from '../util/util'\nimport { useParams } from 'react-router-dom'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport {PostParticipant,PostComment} from '../store/app/types'\nimport {Helmet} from 'react-helmet'\nimport EventIcon from '@material-ui/icons/Event'\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn'\nimport PlaceIcon from '@material-ui/icons/Place'\n\ninterface MatchParams {\n  id:string\n}\n\ninterface Props extends ReduxProps,RouteComponentProps<MatchParams>,WithStyles<typeof styles>{}\ntype State = {\n  comment_str:string\n  error:boolean\n  helper:string\n  close:boolean\n  timer:ReturnType<typeof setInterval> | null\n}\n\nconst styles = (theme:Theme) => createStyles({\n  day: {\n    color:theme.palette.primary.dark\n  },\n  mde: {\n    '& img': {\n      width:\"100%\",\n      height:\"100%\",\n      objectFit: 'fill'\n    }\n  },\n  sanka:{\n   '& > *': {\n        margin: theme.spacing(1)\n      }\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.common.white,\n    fontWeight:700\n  },\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  paper: {\n    minHeight: \"100px\",\n    padding: \"15px\",\n    borderRadius: \"10px\"\n  },\n  label:{\n   color: \"black\"\n  },\n  wrapIcon: {\n    verticalAlign: 'bottom',\n    display: 'inline-flex'\n  },\n  title: {\n   '&::first-line': {\n      textAlign:\"center\"\n    }\n  },\n  box: {\n    marginBottom:15\n  }\n}) \n\n\nclass CompeDetail extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state =  {\n      comment_str:\"\",\n      error:false,\n      helper:\"\",\n      close: this.props.competition.status == 0 || dayEditor().isAfter(dayEditor(this.props.competition.event_deadline))  ? true:false,\n      timer: this.props.competition.status == 0 ? null:setInterval(() => this.closeAccept(),1000)\n    }\n  }\n  componentDidMount() {\n    const id = this.props.match.params.id\n    this.props.getdata(Number(id))\n    this.props.getParti(Number(id))\n    this.props.getComments(Number(id))\n  }\n  closeAccept() {\n    let now = dayEditor(new Date())\n    let closetime = dayEditor(this.props.competition.event_deadline)\n    let endtime = dayEditor(this.props.competition.event_day)\n    this.setState({\n      close: now.isAfter(closetime) || now.isAfter(endtime)\n    })\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n    if (this.state.timer !== null) {\n      clearInterval(this.state.timer)\n    }\n  }\n  handleParticipant(cid:number,status:number) {\n    const {participants} = this.props\n    let id:number \n    let result = participants.find(val => val.user_id == this.props.session.auth.id)\n    if (result == undefined) {\n      id = 0\n    } else {\n      id = result.id\n    }\n    this.props.postParticipant({\n      id:id,\n      competition_id:cid,\n      user_id:this.props.session.auth.id,\n      status:status,\n    })\n  }\n  send() {\n    if (this.state.comment_str == \"\" ) {\n      this.setState({error:true,helper:\"入力してください\"})\n      return\n    }\n    let data = {\n      competition_id:this.props.competition.id,\n      user_id:this.props.session.auth.id,\n      message:this.state.comment_str\n    }\n    this.props.postCom(data)\n  }\n  componentDidUpdate(privprops:Props) {\n    if (privprops.system !== this.props.system) {\n      if (SearchLog(this.props.system.result,\"comments\").status == 200 ) {\n        this.setState({\n          ...this.state,\n          comment_str:\"\",\n          error:false,\n          helper:\"\"\n        })\n      }\n    }\n  }\n  render() {\n    const {classes,session,competition,system,participants,comments} = this.props\n    const undecided:boolean = competition.event_day == null ? true:false\n    const commentResult = SearchLog(system.result,\"comments\")\n    const participantsResult = SearchLog(system.result,\"participants\")\n    const over = competition.capacity !== null && ExtractionParticipants(1,participants).length >= competition.capacity ? true:false\n    if (!system.loading.competition && competition.id == undefined) {\n      return (\n        <Message mes=\"該当のデータはありません\" />\n      )\n    }\n    return (\n      <Grid container spacing={1}>\n        { system.loading.competition && <Progress/> }\n        { !system.loading.competition && competition.id != undefined &&\n        <>\n          <Grid item xs={12} sm={12}>\n            <div className=\"Detail\">\n              <Helmet>\n                <title>{competition.title}</title>\n              </Helmet>\n            </div>\n            <Box display=\"flex\" justifyContent=\"center\">\n             <List style={{paddingTop:0}}>\n                  <ListItem style={{padding:0}} button onClick={()=>this.props.history.push(\"/users/\" + competition.user.sns_id)}>\n                   <ListItemAvatar style={{minWidth:40}}> \n                    <Avatar src={process.env.PUBLIC_URL + \"/\"+ competition.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"caption\" component=\"p\">{competition.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\">@{competition.user.sns_id}</Typography>}/>\n                  </ListItem>\n             </List>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" className={classes.box}>\n              <Typography variant=\"h1\" component=\"h1\" dangerouslySetInnerHTML={{__html:nl2br(competition.title)}} style={{lineHeight:\"1.4em\"}} > \n              </Typography>\n            </Box>\n               { competition.keyword !== null && \n                <Box display=\"flex\" justifyContent=\"center\" className={classes.box}>\n                  <KeyWords keyWords={competition.keyword.split(\",\")}/>\n                </Box>\n               }\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n            { !system.loading.competition && competition.id !== undefined &&\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                <Typography variant=\"h4\" style={{lineHeight:1.4}}>\n                <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <PlaceIcon style={{fontSize:\"1.0rem\",color:colors.grey[600]}}/>\n                 <span style={{marginLeft:5}}>\n                  {competition.place_text == null ? \"未定\" : competition.place_text}\n                 </span>\n                 </div>\n                </Typography>\n              </Grid>\n             <Grid item xs={12} sm={12}>\n                <Typography variant=\"h4\">\n                <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                  <EventIcon style={{fontSize:\"1.0rem\",color:colors.grey[600]}}/> <span style={{marginLeft:5}}>{competition.event_day == null ? \n                  \"未定\" : dataFormatwithday(competition.event_day)}</span>\n                </div>\n                </Typography>\n              </Grid>\n             {competition.event_deadline !== null &&\n              <Grid item xs={12} sm={12}>\n                <Typography variant=\"h4\">\n                <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <AlarmOnIcon style={{fontSize:\"1.0rem\",color:colors.grey[600]}}/>\n                 <span  style={{marginLeft:5}}> \n                   {dataFormatwithday(competition.event_deadline)}\n                 </span>\n                </div>\n                </Typography>\n              </Grid>\n             }\n             { competition.combination_open && \n              <Grid item xs={12} sm={12}>\n                <Button variant=\"text\" color=\"primary\" style={{fontWeight:700}}\n                  onClick={() => this.props.history.push(\"/combinations/\" + competition.id)}>\n                  ペアリングを確認する\n                </Button>\n              </Grid>\n             }\n              <Grid item xs={12} sm={12}>\n                <Divider/>\n                <div className={classes.mde} style={{lineHeight:1.6}} dangerouslySetInnerHTML={{__html:marked(competition.contents,{breaks:true})}}/>\n              </Grid>\n            </Grid>\n            }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper elevation={0} variant=\"outlined\"  className={classes.paper}>\n            { !session.login &&\n            <>\n              <Typography variant=\"h3\" align=\"center\" style={{fontWeight:700}}>\n                このイベントに参加する場合は、まずログインをしてください\n              </Typography>\n              <Typography component=\"p\" align=\"center\" >\n                <Button size=\"large\" className={classes.button} variant=\"contained\" disableElevation  color=\"primary\" startIcon={<TwitterIcon/>}>\n                ログイン\n                </Button>\n              </Typography>\n              </>\n            }\n            {\n              session.login && !this.state.close &&\n              <>\n               <Typography variant=\"h3\"  align=\"center\" style={{fontWeight:700}}>\n               {over &&\n                 <span style={{color:colors.red[500]}}>このイベントは定員に達しました</span>\n               }\n               {!over &&\n                <span>このイベントに参加しますか？</span>\n               }\n              </Typography>\n              <Typography component=\"p\" className={classes.sanka} align=\"center\" style={{fontWeight:700}}>\n                <Button variant=\"contained\" disableElevation disabled={system.loading.participants || over} \n                onClick={() => this.handleParticipant(competition.id,1)} color=\"primary\"  style={{color:\"white\",fontWeight:700}}>\n                  参加する\n                </Button>\n                <Button variant=\"contained\" disableElevation disabled={system.loading.participants}\n                onClick={() => this.handleParticipant(competition.id,2)} color=\"secondary\" style={{color:\"white\",fontWeight:700}}>\n                  興味あり\n                </Button>\n                <Button variant=\"contained\" disableElevation disabled={system.loading.participants}\n                onClick={() => this.handleParticipant(competition.id,3)}  color=\"default\" style={{fontWeight:700}}>\n                  不参加\n                </Button>\n              </Typography>\n              </>\n            }\n            { this.state.close && session.login &&\n            <>\n              <Typography component=\"p\" align=\"center\" style={{fontWeight:700}}>\n                <span style={{color:colors.red[700]}}>このイベントの受付は終了しました</span>\n              </Typography>\n              </>\n            }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12}> \n            {participantsResult.status != 200 && <Message mes={participantsResult.cause}/>}\n            {system.loading.participants && <Progress/>}\n            {!system.loading.participants && participantsResult.status == 200 &&\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={4}>\n                <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                  <Typography variant=\"caption\" style={{fontWeight:700}}>\n                  参加者({ExtractionParticipants(1,participants).length}人) { competition.capacity == null || competition.capacity == 0 ? \"\": \"/ 定員:\" + competition.capacity + \"人\"}\n                  </Typography>\n                  <Divider/>\n                  <List  style={{padding:\"5px\"}}>\n                  { ExtractionParticipants(1,participants).map((data) => (\n                  <ListItem style={{padding:0}} key={data.user_id} button onClick={()=>this.props.history.push(\"/users/\" + data.user.sns_id)}>\n                   <ListItemAvatar style={{padding:0,minWidth:40}}> \n                    <Avatar  src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                   primary={<Typography variant=\"caption\" component=\"p\">{data.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" component=\"p\">@{data.user.sns_id}</Typography>}/>\n                  </ListItem>\n                  ))}\n                </List>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                  <Typography variant=\"caption\" style={{fontWeight:700}}>\n                  興味あり({ExtractionParticipants(2,participants).length}人)\n                  </Typography>\n                  <Divider/>\n                  <List  style={{padding:\"5px\"}}>\n                  { ExtractionParticipants(2,participants).map((data) => (\n                  <ListItem style={{padding:0}} key={data.user_id} button onClick={()=>this.props.history.push(\"/users/\" + data.user.sns_id)}>\n                   <ListItemAvatar style={{padding:0,minWidth:40}}> \n                    <Avatar  src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                   primary={<Typography variant=\"caption\" component=\"p\">{data.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" component=\"p\">@{data.user.sns_id}</Typography>}/>\n                  </ListItem>\n                  ))}\n                </List>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n                <Typography variant=\"caption\" style={{fontWeight:700}}>\n                  不参加({ExtractionParticipants(3,participants).length}人) \n                  </Typography>\n                  <Divider/>\n                  <List  style={{padding:\"5px\"}}>\n                  { ExtractionParticipants(3,participants).map((data) => (\n                  <ListItem style={{padding:0}} key={data.user_id} button onClick={()=>this.props.history.push(\"/users/\" + data.user.sns_id)}>\n                   <ListItemAvatar style={{padding:0,minWidth:40}}> \n                    <Avatar  src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"caption\" component=\"p\">{data.user.screen_name}</Typography>}\n                  secondary={<Typography variant=\"caption\" component=\"p\">@{data.user.sns_id}</Typography>}/>\n                  </ListItem>\n                  ))}\n                </List>\n                </Paper>\n              </Grid>\n            </Grid>\n            }\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper variant=\"outlined\" className={classes.paper}>\n            <Typography  variant=\"h3\">\n              <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <CommentIcon style={{fontSize:\"1.0rem\",color:colors.grey[600]}}/>\n                 <span  style={{marginLeft:5}}> \n                  コメント\n                 </span>\n              </div>\n            </Typography>\n            {system.loading.comments && <Progress/>}\n            {!system.loading.comments && commentResult.status == 200 &&\n            <List>\n              { comments.map((data) => (\n                  <ListItem key={data.id} divider style={{padding:0}} alignItems=\"flex-start\">\n                   <ListItemAvatar style={{minWidth:40,verticalAlign:\"top\"}} > \n                    <Avatar src={process.env.PUBLIC_URL + \"/\" + data.user.avatar} aria-label=\"event\" className={classes.avatar}/>\n                   </ListItemAvatar> \n                   <ListItemText \n                  primary={<Typography variant=\"body2\" component=\"p\" dangerouslySetInnerHTML={{__html:nl2br(data.message)}}></Typography>}\n                  secondary={<Typography variant=\"caption\">{data.user.screen_name}・{dayEditor().to(dayEditor(data.update_at))} </Typography>}/>\n                  </ListItem>\n              ))}\n            </List>\n            }\n            { session.login &&\n            <>\n            <TextField  fullWidth multiline required id=\"comment\" style={{marginTop:10}}  value={this.state.comment_str}\n            onChange={(e) => this.setState({comment_str:e.target.value}) }\n            variant=\"standard\" error={this.state.error} helperText={this.state.helper} InputLabelProps={{className:classes.label}}/>\n            <Button variant=\"contained\" disableElevation disabled={!!system.loading.comments}  onClick={() => this.send()} color=\"primary\"  style={{marginTop:20,color:\"white\",fontWeight:700}}>\n              投稿する\n            </Button>\n            </>\n            }\n            </Paper>\n          </Grid>\n          </>\n        }\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competition: state.app.competition,\n    participants: state.app.participants,\n    comments: state.app.comments,\n    system:state.system,\n    session:state.session\n  }\n}\nconst mapDispatchToProps = (dispatch:Dispatch)=>{\n  return {\n     getdata(id:number){\n       GetCompetition(id)(dispatch)\n     },\n     resetLog() {\n       dispatch(ResetResult())\n     },\n     getParti(id:number){\n       GetParticipants(id)(dispatch)\n     },\n     getComments(id:number){\n       GetComments(id)(dispatch)\n     },\n     postParticipant(data:PostParticipant){\n       PostPatricipant(data)(dispatch)\n     },\n     postCom(data:PostComment) {\n       PostComments(data)(dispatch)\n     }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(CompeDetail)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/keyWord.tsx",["390","391","392"],"import React from 'react'\nimport {createStyles,Theme,withStyles,WithStyles} from '@material-ui/core/styles/'\nimport {Chip} from '@material-ui/core/'\nimport { red,grey,blue } from '@material-ui/core/colors'\nimport {withRouter,RouteComponentProps} from 'react-router-dom'\n\ninterface Props extends RouteComponentProps,WithStyles<typeof styles>{\n  keyWords:string[]\n}\n\ntype State = {}\n\nconst styles = (theme:Theme) => createStyles({\n      root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.3),\n        color: theme.palette.common.white,\n        padding:5,\n        backgroundColor: blue[600],\n        fontSize:12,\n        fontWeight:600\n      }\n    }\n})\n\nclass KeyWords extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {classes,keyWords} = this.props\n    return (\n      <div className={classes.root}>\n        {\n          keyWords.map((s:string)=> ( \n            <Chip size=\"small\" label={s} />\n          )) \n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles,{withTheme:true})(KeyWords))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/util/util.ts",["393","394","395","396","397","398","399","400","401"],"import {Participant} from '../store/app/types'\nimport {Result} from '../store/system/types'\nimport  dayjs from 'dayjs' \nimport 'dayjs/locale/ja'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\ndayjs.locale('ja')\ndayjs.extend(relativeTime)\nexport const dayEditor = dayjs\n\nexport const nl2br = (str:string) => {\n  return str.replace(/[\\n\\r]/g,\"<br/>\")\n}\n\nexport const dateFormat = (d:Date):string => {\n  const d2 = new Date(d)\n return `${d2.getFullYear()}-${(d2.getMonth()+1).toString().padStart(2,'0')}-${(d2.getDate()).toString().padStart(2,'0')}T${d2.getHours().toString().padStart(2,'0')}:${d2.getMinutes().toString().padStart(2,'0')}`\n}\n\nexport const dateFormatNotime = (d:Date):string => {\n  const d2 = new Date(d)\n return `${d2.getFullYear()}-${(d2.getMonth()+1).toString().padStart(2,'0')}-${(d2.getDate()).toString().padStart(2,'0')}`\n}\n\nexport const dateFormatwithTime = (d:Date):string => {\n  const d2 = new Date(d)\n return `${d2.getFullYear()}-${(d2.getMonth()+1).toString().padStart(2,'0')}-${(d2.getDate()).toString().padStart(2,'0')} ${d2.getHours().toString().padStart(2,'0')}:${d2.getMinutes().toString().padStart(2,'0')}`\n}\n\nconst youbi = [\"日\",\"月\",\"火\",\"水\",\"木\",\"金\",\"土\"]\nexport const dataFormatwithday = (d:Date):string => {\n  const d2 = new Date(d)\n  return `${d2.getFullYear()}年${(d2.getMonth()+1).toString().padStart(2,'0')}月${(d2.getDate()).toString().padStart(2,'0')}日(${youbi[d2.getDay()]})\n   ${d2.getHours().toString().padStart(2,'0')}:${d2.getMinutes().toString().padStart(2,'0')}`\n}\n\nexport const ExtractionParticipants = (status:number,p:Participant[]):Participant[] => {\n  let result = p.filter((data)=> data.status == status)\n  return result\n}\n\nexport const SearchLog = (log:Result[],name:string):Result => {\n  let result = log.find((v) => v.name === name)\n  if (result !== undefined) {\n    return result\n  } else {\n    return {name:\"\",status:999,cause:\"\"}\n  }\n}\n\nexport const getStatus = (data:number):string => {\n  switch (data) {\n    case 1:\n      return \"参加\"\n    case 2:\n      return \"興味あり\"\n    case 3:\n      return \"不参加\"\n    default:\n      return \"\"\n  }\n}\n\nexport const getInOut = (data:number):string => {\n  if (data == 1) {\n    return \"IN\"\n  } else {\n    return \"OUT\"\n  }\n}\n\nexport const getAvatar = (data:Participant[],uid:number | null):string => {\n  if (uid == null)  return \"\"\n  let result = data.find((v) => v.user_id === uid) \n  if (result != undefined) {\n    return result.user.avatar\n  }\n  return \"\"\n}\n\nexport const getSex = (data:number):string => {\n  if (data == undefined) return \"\"\n  if (data == 1) {\n    return \"男性\"\n  }else{\n    return \"女性\"\n  } \n}\n\nexport const getSexNumber = (data:Participant[] | null,uid:number | null):number => {\n  if (data == null) return 0\n  if (uid == null) return 0\n  let result = data.find((v) => v.user_id == uid)\n  if (result != undefined) {\n    return result.user.sex == null ? 0: result.user.sex\n  }\n  return 0\n}\n\n\nexport const getAge = (data:Date):string => {\n  if (data == undefined) return \"\"\n  const today = dayEditor()\n  const birth = dayEditor(data)\n  const base = today.year() - birth.year()\n  const thisBirth = dayEditor(`${today.year()}-${birth.month()}-${birth.date()}`)\n  return today.isBefore(thisBirth) ? base-1 + \"歳\": base + \"歳\"\n}\n\nexport const getName = (data:Participant[],uid:number | null):string => {\n  if (uid == null) return \"-\"\n  let result = data.find((v) => v.user_id === uid) \n  if (result != undefined) {\n      return result.user.screen_name\n  } else {\n    return \"-\"\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/index.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/reducers.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/reducers.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/types.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/types.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/api.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/app/actions.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/api/index.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/system/actions.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/progress.tsx",["402"],"import React from 'react'\nimport {Grid,CircularProgress} from '@material-ui/core'\n\ninterface Props {\n}\ninterface State {}\n\nexport default class Progress extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Grid container alignItems=\"center\" justify=\"center\">\n          <CircularProgress/>\n      </Grid>\n    )\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/components/message.tsx",["403"],"import React from 'react'\nimport {Grid,Paper,Typography} from '@material-ui/core'\n\ninterface Props {\n  mes:string\n}\ninterface State {}\n\nexport default class Message extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    return (\n       <Grid sm={12} md={12} item style={{width:\"100%\"}}>\n          <Paper elevation={0}  style={{alignItems:\"center\",padding:\"30px 0 30px 0\",border:\"1px solid #dfdfdf\"}}>\n            <Typography  variant=\"h3\" align=\"center\" style={{color:\"#808080\"}}>\n             {this.props.mes}\n            </Typography>\n          </Paper>\n       </Grid>\n    )\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/reducers.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/types.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/api.ts",["404"],"import {SetLoading,SetSnack,SetResult} from '../system/actions'\nimport {SetSessionAuth} from './actions'\nimport {SetSessionLogin} from './actions'\nimport {DelSession} from './actions'\nimport * as types from './types'\nimport client,* as api from '../../api' \nimport {Dispatch} from 'redux'\n\n\nexport const GetSession = () => {\n  return async (dispatch:Dispatch) => {\n    dispatch(SetLoading({session:true}))\n    await client.get(api.API_SESSION).then((res)=> {\n      dispatch(SetSessionAuth(res.data))\n      dispatch(SetSessionLogin(true))\n      dispatch(SetResult({name:\"session\",status:200,cause:\"ok\"}))\n      dispatch(SetLoading({session:false}))\n    }).catch(error => {\n      if (error.response) {\n        dispatch(SetResult({name:\"session\",status:error.response.status,cause:error.response.data.cause}))\n        dispatch(SetLoading({session:false}))\n      }\n    })\n  }\n}\n\nexport const LogOut = () => {\n  return async (dispatch:Dispatch) => {\n    await client.delete(api.API_LOGOUT).then((res) => {\n      dispatch(SetSessionLogin(false))\n      dispatch(DelSession())\n      dispatch(SetResult({name:\"logout\",status:200,cause:\"ok\"}))\n      dispatch(SetSnack({status:\"success\",message:\"ログアウトしました\"}))\n    }).catch(error => {\n      if (error.response) {\n        dispatch(SetResult({name:\"logout\",status:error.response.status,cause:error.response.data.cause}))\n      }\n      dispatch(SetSnack({status:\"error\",message:\"ログアウトに失敗しました\"}))\n    })\n  }\n}\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/store/session/actions.ts",[],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/privateRoute.tsx",["405","406"],"import React from 'react'\nimport {Redirect,Route,RouteComponentProps,withRouter,RouteProps} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {RootState} from '../store'\nimport Progress from '../components/progress'\n\ninterface Props extends ReduxProps,RouteComponentProps {\n  path:string,\n  component:any\n  auth:string\n}\n\nclass PrivateRoute extends React.Component<Props,{}> {\n  constructor(props:Props) {\n    super(props)\n  }\n  render() {\n    const {session,system} = this.props\n    if (!system.loading.session) {\n      if (session.login) {\n        return (<Route exact path={this.props.path} component={this.props.component}/>)\n      } else {\n        return (<Redirect to={this.props.auth}/>)\n      }\n    } else {\n      return (<Progress/>)\n    }\n  }\n}\n\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    session:state.session,\n    system:state.system\n  }\n}\n\ntype ReduxProps = ReturnType<typeof mapStateToProps>\n\nexport default connect(mapStateToProps)(withRouter(PrivateRoute)) \n\n\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/pa_management.tsx",["407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425"],"import React from 'react'\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {FormControl,InputLabel,Select,MenuItem,Avatar,IconButton,Box,Button,TextField,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport {Helmet} from 'react-helmet'\nimport {RootState} from '../store'\nimport DeleteRounded from '@material-ui/icons/DeleteRounded'\nimport {ResetResult} from '../store/system/actions'\nimport {Participant,BundleParticipant,PostParticipant} from '../store/app/types'\nimport {GetParticipants,PostBundlePatricipant} from '../store/app/api'\nimport {SearchLog} from '../util/util'\nimport querystring from 'query-string'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Progress from '../components/progress'\n\ntype transaction = {\n    uid:number\n    status:number\n  }\n\ninterface Props extends ReduxType,RouteComponentProps,WithStyles<typeof styles>{}\ntype State = {\n  participants: transaction[]\n  disable:boolean\n}\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n  },\n     formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  paper: {\n    padding:\"5px\",\n    borderRadius: \"10px\"\n  },\n  helperTxt: {\n    color: theme.palette.info.dark\n  }\n}) \n\nclass PaManagement extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n    this.state = {\n      participants:[] as transaction[],\n      disable:true\n    }\n  }\n  componentDidMount() {\n    const cid = this.queryParse()\n    this.props.getParti(Number(cid))\n  }\n  componentDidUpdate(Prov:Props) {\n    if (Prov.participants != this.props.participants) {\n      const data = [] as transaction[]\n      this.props.participants.map((val) => {\n        data.push(\n          {\n            uid:val.user_id,\n            status:val.status,\n          }\n        )\n      })\n      this.setState({disable:true,participants:data})\n    }\n  }\n  componentWillUnmount() {\n    this.props.resetLog()\n  }\n  handleChange(uid:number,status:number) {\n    const {participants} = this.props\n    const data = this.state.participants.slice()\n    let disable = true \n    data.map(val => {\n      if (val.uid == uid) {\n        val.status = status\n      }\n    })\n    data.map((v1) => {\n      let result = participants.find((v2) => v1.uid == v2.user_id)\n      if (result == undefined) return\n      if (result.status !== v1.status) {\n        disable = false\n      }\n    })\n    this.setState({disable:disable,participants:data})\n  }\n  send() {\n    const {participants} = this.state\n    let sendData:BundleParticipant = {} as BundleParticipant\n    let temparray:PostParticipant[] = [] as PostParticipant[]\n    //削除あるか？\n    let result = participants.find(val => val.status === 4)\n    if (result !== undefined) {\n      if (!window.confirm(\"削除が含まれます。本当に削除しますか？\")) {\n        return\n      }\n    }\n    participants.map((v1) => {\n      let result = this.props.participants.find((v2) => v2.user_id == v1.uid)\n      if (result != undefined && result.status !== v1.status) {\n        let tmp:PostParticipant = {\n            id: result.id,\n            competition_id:result.competition_id,\n            user_id:v1.uid,\n            status:v1.status\n          }\n          temparray.push(tmp)\n      }\n    })\n    sendData.transaction = temparray\n    this.props.postParticipant(sendData)\n  }\n  getStatus(uid:number):number{\n    let d = this.state.participants.find((val) => val.uid === uid)\n    return d == undefined ? 4: d.status\n  }\n  queryParse():string {\n    const parse = querystring.parse(this.props.location.search)\n    return parse.cid == undefined ? \"0\": parse.cid as string\n  }\n  render() {\n    const {classes,system,participants} = this.props\n    const results = SearchLog(system.result,\"participants\")\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\n            <div className=\"PaManagement\">\n              <Helmet>\n                <title>参加者管理</title>\n              </Helmet>\n            </div>\n          <Grid item xs={12} sm={12}>\n           <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n              参加管理\n            </Typography>\n            <Typography variant=\"caption\">\n               参加者の削除など主催者権限で参加状況の変更をすることができます。\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Paper variant=\"outlined\" className={classes.paper}>\n              { system.loading.participants && <Progress/>}\n              { !system.loading.participants && results.status == 200 &&\n              <List>\n                { participants.map(val => ( \n                  <ListItem key={val.id} divider alignItems=\"center\" >\n                    <ListItemAvatar>\n                      <Avatar \n                        src={process.env.PUBLIC_URL + \"/\" + val.user.avatar} />\n                    </ListItemAvatar>\n                    <ListItemText primary={\n                       <React.Fragment>\n                      <Typography variant=\"caption\">\n                        {val.user.screen_name}\n                      </Typography>\n                      <Typography variant=\"caption\" component=\"p\" >\n                        {val.user.sns_id}\n                      </Typography>\n                      </React.Fragment>\n                     }\n                    />\n                    <ListItemSecondaryAction>\n                    <FormControl className={classes.formControl}>\n                          <Select\n                            value={this.getStatus(val.user_id)}\n                            onChange={(e) => this.handleChange(val.user_id,Number(e.target.value))}\n                          >\n                            <MenuItem value={1}>参加</MenuItem>\n                            <MenuItem value={2}>興味あり</MenuItem>\n                            <MenuItem value={3}>不参加</MenuItem>\n                            <MenuItem value={4}>削除する</MenuItem>\n                          </Select>\n                      </FormControl>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ) \n                )}\n              </List>\n              }\n              <Box style={{padding:20}}>\n                <Button color=\"primary\" disabled={this.state.disable} style={{color:\"#fff\",fontWeight:700}}\n                variant=\"contained\" disableElevation onClick={() => this.send()}>\n                  保存する\n                </Button>\n              </Box>\n            </Paper>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    participants:state.app.participants,\n    system: state.system\n  }\n}\n\nconst mapDispatchProps = (dispatch:Dispatch) => {\n  return {\n    getParti(id:number){\n       GetParticipants(id)(dispatch)\n    },\n    postParticipant(data:BundleParticipant){\n      PostBundlePatricipant(data)(dispatch)\n    },\n    resetLog(){\n      dispatch(ResetResult())\n    }\n  }\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchProps>\n\n\nexport default connect(mapStateToProps,mapDispatchProps)(withRouter(withStyles(styles,{withTheme:true})(PaManagement)))\n","/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/compe_management.tsx",["426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"/Users/yaginumaetsuko/Documents/twigolf/twigolf-app/src/page/combinations.tsx",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"import React from 'react'\nimport {RouteComponentProps,withRouter} from 'react-router-dom'\nimport {withStyles,WithStyles,createStyles} from '@material-ui/styles'\nimport {Table,TableBody,TableHead,TableRow,TableContainer,TableCell,Box,Divider,TextField,Button,Avatar,List,colors,ListItem,CircularProgress,ListItemAvatar,ListItemText,Theme,Grid,Typography,Paper} from '@material-ui/core'\nimport {RootState} from '../store'\nimport {connect} from 'react-redux' \nimport {Dispatch} from 'redux'\nimport {Competition} from '../store/app/types'\nimport {GetCompetition,GetParticipants,GetCombinationData} from '../store/app/api'\nimport {getStatus,getAge,getSex,SearchLog,dateFormatwithTime,getInOut,getName,dateFormat,getAvatar} from '../util/util'\nimport {ResetResult} from '../store/system/actions'\nimport Progress from '../components/progress'\nimport Message from '../components/message'\nimport {Helmet} from 'react-helmet'\nimport PlaceIcon from '@material-ui/icons/Place'\nimport EventIcon from '@material-ui/icons/Event'\nimport {dataFormatwithday} from '../util/util'\n\ninterface MatchParams {\n  cid:string\n}\n\ninterface Props extends ReduxProps,RouteComponentProps<MatchParams>,WithStyles<typeof styles>{}\n\nconst styles = (theme:Theme) => createStyles({\n  day: {\n    color:theme.palette.primary.dark\n  },\n  body: {\n    '& > *': {\n        fontSize: 13,\n      }\n  },\n  table: {\n    whiteSpace:\"nowrap\",\n    overflowX: \"scroll\",\n    minWidth:650,\n  },\n  header: {\n    backgroundColor:colors.teal[500],\n    '& > *': {\n        fontWeight:600,\n        fontSize: 13,\n        color:colors.common.white\n      }\n  },\n  mde: {\n    '& img': {\n      width:\"100%\",\n      height:\"100%\",\n      objectFit: 'fill'\n    }\n  },\n  sanka:{\n   '& > *': {\n        margin: theme.spacing(1)\n      }\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.common.white,\n    fontWeight:700\n  },\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  paper: {\n    minHeight: \"100px\",\n    padding: \"15px\",\n    borderRadius: \"10px\"\n  },\n  label:{\n   color: \"black\"\n  },\n  wrapIcon: {\n    verticalAlign: 'bottom',\n    display: 'inline-flex'\n  },\n  title: {\n   '&::first-line': {\n      textAlign:\"center\"\n    }\n  },\n  box: {\n    marginBottom:15\n  }\n})\n\ninterface State{}\n\nclass Combinations extends React.Component<Props,State> {\n  constructor(props:Props) {\n    super(props)\n  }\n  componentDidMount(){\n    const cid = this.props.match.params.cid\n    this.props.getdata(Number(cid))\n    this.props.getCombinations(Number(cid))\n    this.props.getParti(Number(cid))\n  }\n  render(){\n    const {classes,competition,system,combinations,participants} = this.props\n    const log = SearchLog(system.result,\"combinations\")\n    if (!system.loading.competition && competition.id == undefined) {\n      return (\n        <Message mes=\"該当のデータはありません\" />\n      )\n    }\n    return (\n      <Grid container spacing={1}>\n       { system.loading.competition || system.loading.combinations && <Progress/> }\n       { !system.loading.competition && !system.loading.combinations &&\n       <>\n        <div className=\"Detail\">\n          <Helmet>\n            <title>ペアリング</title>\n          </Helmet>\n        </div>\n        <Grid item xs={12} sm={12} style={{marginBottom:10}}>\n            <Typography variant=\"h1\" style={{marginBottom:\"10px\"}}>\n              ペアリング\n            </Typography>\n          <Paper elevation={0} variant=\"outlined\" className={classes.paper}>\n            <Typography variant=\"h2\" style={{lineHeight:1.4,marginBottom:15}}>\n            {competition.title}\n            </Typography>\n            <Typography variant=\"caption\" style={{marginBottom:20}}>\n                <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                 <PlaceIcon style={{fontSize:18,color:colors.grey[600]}}/>\n                 <span style={{marginLeft:5}}>\n                  {competition.place_text == null ? \"未定\" : competition.place_text}\n                 </span>\n                </div>\n            </Typography>\n            <Typography variant=\"caption\">\n                <div style={{display: 'flex',alignItems: 'center',flexWrap: 'nowrap',}}>\n                  <EventIcon style={{fontSize:18,color:colors.grey[600]}}/> <span style={{marginLeft:5}}>{competition.event_day == null ? \n                  \"未定\" : dataFormatwithday(competition.event_day)}</span>\n                </div>\n            </Typography>\n          </Paper>\n        </Grid>\n        { log.status != 999 && log.status != 200 && <Message mes={log.cause} />}\n        {  log.status == 200  &&\n        <Grid item xs={12} sm={12}>\n          <TableContainer elevation={0} component={Paper} style={{width:\"100%\"}}>\n              <Table size=\"medium\" className={classes.table} >\n                <TableHead>\n                  <TableRow className={classes.header} >\n                    <TableCell align=\"left\">スタート時間</TableCell>\n                    <TableCell align=\"right\">IN/OUT</TableCell>\n                    <TableCell align=\"right\">P1</TableCell>\n                    <TableCell align=\"right\">P2</TableCell>\n                    <TableCell align=\"right\">P3</TableCell>\n                    <TableCell align=\"right\">P4</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { combinations.payload.map((val) => ( \n                  <TableRow className={classes.body}>\n                    <TableCell align=\"left\">{dateFormatwithTime(val.start_time)}</TableCell>\n                    <TableCell align=\"right\">{getInOut(val.start_in_out)}</TableCell>\n                    <TableCell align=\"right\">{getName(participants,val.member1)}</TableCell>\n                    <TableCell align=\"right\">{getName(participants,val.member2)}</TableCell>\n                    <TableCell align=\"right\">{getName(participants,val.member3)}</TableCell>\n                    <TableCell align=\"right\">{getName(participants,val.member4)}</TableCell>\n                  </TableRow>\n                 ))\n                }\n                </TableBody>\n                </Table>\n           </TableContainer>\n        </Grid>\n        }\n        </>\n       }\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    competition: state.app.competition,\n    combinations:state.app.combinations,\n    participants: state.app.participants,\n    system:state.system,\n    session:state.session\n  }\n}\nconst mapDispatchToProps = (dispatch:Dispatch)=>{\n  return {\n     getdata(id:number){\n       GetCompetition(id)(dispatch)\n     },\n     getCombinations(cid:number) {\n       GetCombinationData(cid)(dispatch)\n     },\n     resetLog() {\n       dispatch(ResetResult())\n     },\n     getParti(id:number){\n       GetParticipants(id)(dispatch)\n     }\n  }\n}\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withStyles(styles,{withTheme:true})(Combinations)))\n",{"ruleId":"486","replacedBy":"487"},{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","severity":1,"message":"491","line":3,"column":8,"nodeType":"492","messageId":"493","endLine":3,"endColumn":18},{"ruleId":"490","severity":1,"message":"494","line":4,"column":8,"nodeType":"492","messageId":"493","endLine":4,"endColumn":17},{"ruleId":"490","severity":1,"message":"495","line":5,"column":9,"nodeType":"492","messageId":"493","endLine":5,"endColumn":13},{"ruleId":"490","severity":1,"message":"496","line":5,"column":14,"nodeType":"492","messageId":"493","endLine":5,"endColumn":22},{"ruleId":"490","severity":1,"message":"497","line":5,"column":23,"nodeType":"492","messageId":"493","endLine":5,"endColumn":35},{"ruleId":"490","severity":1,"message":"498","line":5,"column":36,"nodeType":"492","messageId":"493","endLine":5,"endColumn":48},{"ruleId":"490","severity":1,"message":"499","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":12},{"ruleId":"490","severity":1,"message":"500","line":7,"column":8,"nodeType":"492","messageId":"493","endLine":7,"endColumn":11},{"ruleId":"490","severity":1,"message":"501","line":8,"column":8,"nodeType":"492","messageId":"493","endLine":8,"endColumn":12},{"ruleId":"490","severity":1,"message":"502","line":9,"column":9,"nodeType":"492","messageId":"493","endLine":9,"endColumn":19},{"ruleId":"490","severity":1,"message":"503","line":9,"column":20,"nodeType":"492","messageId":"493","endLine":9,"endColumn":31},{"ruleId":"490","severity":1,"message":"504","line":10,"column":8,"nodeType":"492","messageId":"493","endLine":10,"endColumn":13},{"ruleId":"490","severity":1,"message":"505","line":13,"column":10,"nodeType":"492","messageId":"493","endLine":13,"endColumn":17},{"ruleId":"490","severity":1,"message":"506","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":15},{"ruleId":"490","severity":1,"message":"507","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":22},{"ruleId":"490","severity":1,"message":"508","line":17,"column":8,"nodeType":"492","messageId":"493","endLine":17,"endColumn":14},{"ruleId":"490","severity":1,"message":"509","line":18,"column":8,"nodeType":"492","messageId":"493","endLine":18,"endColumn":23},{"ruleId":"490","severity":1,"message":"510","line":19,"column":8,"nodeType":"492","messageId":"493","endLine":19,"endColumn":18},{"ruleId":"490","severity":1,"message":"511","line":20,"column":8,"nodeType":"492","messageId":"493","endLine":20,"endColumn":21},{"ruleId":"490","severity":1,"message":"512","line":21,"column":9,"nodeType":"492","messageId":"493","endLine":21,"endColumn":16},{"ruleId":"490","severity":1,"message":"513","line":22,"column":9,"nodeType":"492","messageId":"493","endLine":22,"endColumn":18},{"ruleId":"514","severity":1,"message":"515","line":160,"column":3,"nodeType":"516","messageId":"517","endLine":162,"endColumn":4},{"ruleId":"490","severity":1,"message":"518","line":164,"column":12,"nodeType":"492","messageId":"493","endLine":164,"endColumn":19},{"ruleId":"490","severity":1,"message":"519","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":14},{"ruleId":"490","severity":1,"message":"520","line":5,"column":8,"nodeType":"492","messageId":"493","endLine":5,"endColumn":14},{"ruleId":"490","severity":1,"message":"521","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":14},{"ruleId":"490","severity":1,"message":"495","line":8,"column":8,"nodeType":"492","messageId":"493","endLine":8,"endColumn":12},{"ruleId":"490","severity":1,"message":"522","line":9,"column":8,"nodeType":"492","messageId":"493","endLine":9,"endColumn":17},{"ruleId":"490","severity":1,"message":"506","line":10,"column":8,"nodeType":"492","messageId":"493","endLine":10,"endColumn":15},{"ruleId":"490","severity":1,"message":"496","line":11,"column":8,"nodeType":"492","messageId":"493","endLine":11,"endColumn":16},{"ruleId":"490","severity":1,"message":"498","line":12,"column":8,"nodeType":"492","messageId":"493","endLine":12,"endColumn":20},{"ruleId":"490","severity":1,"message":"497","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":20},{"ruleId":"490","severity":1,"message":"523","line":14,"column":8,"nodeType":"492","messageId":"493","endLine":14,"endColumn":16},{"ruleId":"490","severity":1,"message":"524","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":16},{"ruleId":"490","severity":1,"message":"525","line":18,"column":8,"nodeType":"492","messageId":"493","endLine":18,"endColumn":15},{"ruleId":"490","severity":1,"message":"500","line":19,"column":8,"nodeType":"492","messageId":"493","endLine":19,"endColumn":11},{"ruleId":"490","severity":1,"message":"526","line":20,"column":8,"nodeType":"492","messageId":"493","endLine":20,"endColumn":13},{"ruleId":"490","severity":1,"message":"527","line":21,"column":8,"nodeType":"492","messageId":"493","endLine":21,"endColumn":25},{"ruleId":"490","severity":1,"message":"528","line":22,"column":9,"nodeType":"492","messageId":"493","endLine":22,"endColumn":19},{"ruleId":"490","severity":1,"message":"529","line":22,"column":61,"nodeType":"492","messageId":"493","endLine":22,"endColumn":71},{"ruleId":"490","severity":1,"message":"530","line":80,"column":13,"nodeType":"492","messageId":"493","endLine":80,"endColumn":23},{"ruleId":"531","severity":1,"message":"532","line":86,"column":13,"nodeType":"533","endLine":86,"endColumn":68},{"ruleId":"490","severity":1,"message":"495","line":3,"column":9,"nodeType":"492","messageId":"493","endLine":3,"endColumn":13},{"ruleId":"490","severity":1,"message":"496","line":3,"column":14,"nodeType":"492","messageId":"493","endLine":3,"endColumn":22},{"ruleId":"490","severity":1,"message":"534","line":4,"column":8,"nodeType":"492","messageId":"493","endLine":4,"endColumn":17},{"ruleId":"490","severity":1,"message":"506","line":5,"column":20,"nodeType":"492","messageId":"493","endLine":5,"endColumn":27},{"ruleId":"490","severity":1,"message":"500","line":5,"column":35,"nodeType":"492","messageId":"493","endLine":5,"endColumn":38},{"ruleId":"514","severity":1,"message":"515","line":54,"column":3,"nodeType":"516","messageId":"517","endLine":56,"endColumn":4},{"ruleId":"490","severity":1,"message":"535","line":3,"column":21,"nodeType":"492","messageId":"493","endLine":3,"endColumn":32},{"ruleId":"490","severity":1,"message":"536","line":3,"column":59,"nodeType":"492","messageId":"493","endLine":3,"endColumn":68},{"ruleId":"490","severity":1,"message":"506","line":3,"column":110,"nodeType":"492","messageId":"493","endLine":3,"endColumn":117},{"ruleId":"490","severity":1,"message":"537","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":13},{"ruleId":"490","severity":1,"message":"538","line":8,"column":27,"nodeType":"492","messageId":"493","endLine":8,"endColumn":36},{"ruleId":"490","severity":1,"message":"539","line":10,"column":8,"nodeType":"492","messageId":"493","endLine":10,"endColumn":19},{"ruleId":"514","severity":1,"message":"515","line":71,"column":3,"nodeType":"516","messageId":"517","endLine":73,"endColumn":4},{"ruleId":"490","severity":1,"message":"540","line":76,"column":11,"nodeType":"492","messageId":"493","endLine":76,"endColumn":28},{"ruleId":"541","severity":1,"message":"542","line":87,"column":23,"nodeType":"543","messageId":"544","endLine":87,"endColumn":25},{"ruleId":"541","severity":1,"message":"542","line":87,"column":44,"nodeType":"543","messageId":"544","endLine":87,"endColumn":46},{"ruleId":"541","severity":1,"message":"542","line":87,"column":68,"nodeType":"543","messageId":"544","endLine":87,"endColumn":70},{"ruleId":"541","severity":1,"message":"545","line":87,"column":97,"nodeType":"543","messageId":"544","endLine":87,"endColumn":99},{"ruleId":"490","severity":1,"message":"504","line":4,"column":8,"nodeType":"492","messageId":"493","endLine":4,"endColumn":13},{"ruleId":"490","severity":1,"message":"494","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":17},{"ruleId":"490","severity":1,"message":"546","line":8,"column":8,"nodeType":"492","messageId":"493","endLine":8,"endColumn":17},{"ruleId":"490","severity":1,"message":"495","line":9,"column":9,"nodeType":"492","messageId":"493","endLine":9,"endColumn":13},{"ruleId":"490","severity":1,"message":"496","line":9,"column":14,"nodeType":"492","messageId":"493","endLine":9,"endColumn":22},{"ruleId":"490","severity":1,"message":"518","line":94,"column":12,"nodeType":"492","messageId":"493","endLine":94,"endColumn":19},{"ruleId":"541","severity":1,"message":"542","line":122,"column":33,"nodeType":"543","messageId":"544","endLine":122,"endColumn":35},{"ruleId":"541","severity":1,"message":"545","line":123,"column":33,"nodeType":"543","messageId":"544","endLine":123,"endColumn":35},{"ruleId":"490","severity":1,"message":"547","line":2,"column":82,"nodeType":"492","messageId":"493","endLine":2,"endColumn":92},{"ruleId":"490","severity":1,"message":"548","line":2,"column":115,"nodeType":"492","messageId":"493","endLine":2,"endColumn":121},{"ruleId":"490","severity":1,"message":"549","line":2,"column":122,"nodeType":"492","messageId":"493","endLine":2,"endColumn":130},{"ruleId":"490","severity":1,"message":"546","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":17},{"ruleId":"541","severity":1,"message":"545","line":70,"column":26,"nodeType":"543","messageId":"544","endLine":70,"endColumn":28},{"ruleId":"490","severity":1,"message":"550","line":72,"column":27,"nodeType":"492","messageId":"493","endLine":72,"endColumn":30},{"ruleId":"541","severity":1,"message":"545","line":73,"column":31,"nodeType":"543","messageId":"544","endLine":73,"endColumn":33},{"ruleId":"541","severity":1,"message":"545","line":80,"column":34,"nodeType":"543","messageId":"544","endLine":80,"endColumn":36},{"ruleId":"541","severity":1,"message":"545","line":81,"column":28,"nodeType":"543","messageId":"544","endLine":81,"endColumn":30},{"ruleId":"541","severity":1,"message":"545","line":82,"column":34,"nodeType":"543","messageId":"544","endLine":82,"endColumn":36},{"ruleId":"541","severity":1,"message":"545","line":83,"column":34,"nodeType":"543","messageId":"544","endLine":83,"endColumn":36},{"ruleId":"541","severity":1,"message":"545","line":88,"column":17,"nodeType":"543","messageId":"544","endLine":88,"endColumn":19},{"ruleId":"541","severity":1,"message":"545","line":99,"column":46,"nodeType":"543","messageId":"544","endLine":99,"endColumn":48},{"ruleId":"541","severity":1,"message":"542","line":196,"column":30,"nodeType":"543","messageId":"544","endLine":196,"endColumn":32},{"ruleId":"541","severity":1,"message":"542","line":196,"column":60,"nodeType":"543","messageId":"544","endLine":196,"endColumn":62},{"ruleId":"541","severity":1,"message":"545","line":198,"column":56,"nodeType":"543","messageId":"544","endLine":198,"endColumn":58},{"ruleId":"490","severity":1,"message":"503","line":2,"column":9,"nodeType":"492","messageId":"493","endLine":2,"endColumn":20},{"ruleId":"490","severity":1,"message":"499","line":2,"column":21,"nodeType":"492","messageId":"493","endLine":2,"endColumn":25},{"ruleId":"490","severity":1,"message":"502","line":2,"column":42,"nodeType":"492","messageId":"493","endLine":2,"endColumn":52},{"ruleId":"490","severity":1,"message":"551","line":2,"column":86,"nodeType":"492","messageId":"493","endLine":2,"endColumn":92},{"ruleId":"490","severity":1,"message":"552","line":2,"column":93,"nodeType":"492","messageId":"493","endLine":2,"endColumn":107},{"ruleId":"490","severity":1,"message":"506","line":2,"column":108,"nodeType":"492","messageId":"493","endLine":2,"endColumn":115},{"ruleId":"490","severity":1,"message":"553","line":2,"column":129,"nodeType":"492","messageId":"493","endLine":2,"endColumn":137},{"ruleId":"490","severity":1,"message":"554","line":4,"column":9,"nodeType":"492","messageId":"493","endLine":4,"endColumn":19},{"ruleId":"490","severity":1,"message":"555","line":4,"column":20,"nodeType":"492","messageId":"493","endLine":4,"endColumn":30},{"ruleId":"514","severity":1,"message":"515","line":15,"column":3,"nodeType":"516","messageId":"517","endLine":17,"endColumn":4},{"ruleId":"490","severity":1,"message":"512","line":2,"column":40,"nodeType":"492","messageId":"493","endLine":2,"endColumn":47},{"ruleId":"490","severity":1,"message":"556","line":9,"column":8,"nodeType":"492","messageId":"493","endLine":9,"endColumn":12},{"ruleId":"490","severity":1,"message":"549","line":10,"column":8,"nodeType":"492","messageId":"493","endLine":10,"endColumn":16},{"ruleId":"490","severity":1,"message":"506","line":4,"column":15,"nodeType":"492","messageId":"493","endLine":4,"endColumn":22},{"ruleId":"490","severity":1,"message":"557","line":5,"column":9,"nodeType":"492","messageId":"493","endLine":5,"endColumn":15},{"ruleId":"490","severity":1,"message":"494","line":5,"column":34,"nodeType":"492","messageId":"493","endLine":5,"endColumn":43},{"ruleId":"490","severity":1,"message":"501","line":5,"column":114,"nodeType":"492","messageId":"493","endLine":5,"endColumn":118},{"ruleId":"490","severity":1,"message":"546","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":17},{"ruleId":"490","severity":1,"message":"558","line":8,"column":9,"nodeType":"492","messageId":"493","endLine":8,"endColumn":13},{"ruleId":"490","severity":1,"message":"559","line":10,"column":8,"nodeType":"492","messageId":"493","endLine":10,"endColumn":16},{"ruleId":"541","severity":1,"message":"545","line":106,"column":27,"nodeType":"543","messageId":"544","endLine":106,"endColumn":29},{"ruleId":"541","severity":1,"message":"545","line":107,"column":20,"nodeType":"543","messageId":"544","endLine":107,"endColumn":22},{"ruleId":"541","severity":1,"message":"542","line":114,"column":37,"nodeType":"543","messageId":"544","endLine":114,"endColumn":39},{"ruleId":"541","severity":1,"message":"542","line":122,"column":38,"nodeType":"543","messageId":"544","endLine":122,"endColumn":40},{"ruleId":"541","severity":1,"message":"545","line":137,"column":28,"nodeType":"543","messageId":"544","endLine":137,"endColumn":30},{"ruleId":"541","severity":1,"message":"542","line":139,"column":27,"nodeType":"543","messageId":"544","endLine":139,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":139,"column":55,"nodeType":"543","messageId":"544","endLine":139,"endColumn":57},{"ruleId":"541","severity":1,"message":"545","line":143,"column":25,"nodeType":"543","messageId":"544","endLine":143,"endColumn":27},{"ruleId":"541","severity":1,"message":"542","line":200,"column":31,"nodeType":"543","messageId":"544","endLine":200,"endColumn":33},{"ruleId":"541","severity":1,"message":"542","line":200,"column":67,"nodeType":"543","messageId":"544","endLine":200,"endColumn":69},{"ruleId":"541","severity":1,"message":"545","line":201,"column":31,"nodeType":"543","messageId":"544","endLine":201,"endColumn":33},{"ruleId":"490","severity":1,"message":"506","line":4,"column":15,"nodeType":"492","messageId":"493","endLine":4,"endColumn":22},{"ruleId":"490","severity":1,"message":"494","line":5,"column":9,"nodeType":"492","messageId":"493","endLine":5,"endColumn":18},{"ruleId":"490","severity":1,"message":"560","line":5,"column":24,"nodeType":"492","messageId":"493","endLine":5,"endColumn":28},{"ruleId":"490","severity":1,"message":"561","line":5,"column":29,"nodeType":"492","messageId":"493","endLine":5,"endColumn":32},{"ruleId":"490","severity":1,"message":"501","line":5,"column":33,"nodeType":"492","messageId":"493","endLine":5,"endColumn":37},{"ruleId":"490","severity":1,"message":"562","line":44,"column":12,"nodeType":"492","messageId":"493","endLine":44,"endColumn":20},{"ruleId":"486","replacedBy":"563"},{"ruleId":"488","replacedBy":"564"},{"ruleId":"490","severity":1,"message":"506","line":7,"column":8,"nodeType":"492","messageId":"493","endLine":7,"endColumn":15},{"ruleId":"490","severity":1,"message":"565","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":16},{"ruleId":"490","severity":1,"message":"539","line":20,"column":8,"nodeType":"492","messageId":"493","endLine":20,"endColumn":19},{"ruleId":"541","severity":1,"message":"545","line":121,"column":55,"nodeType":"543","messageId":"544","endLine":121,"endColumn":57},{"ruleId":"486","replacedBy":"566"},{"ruleId":"488","replacedBy":"567"},{"ruleId":"490","severity":1,"message":"568","line":5,"column":46,"nodeType":"492","messageId":"493","endLine":5,"endColumn":61},{"ruleId":"490","severity":1,"message":"569","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":14},{"ruleId":"570","severity":1,"message":"571","line":73,"column":7,"nodeType":"572","messageId":"573","endLine":74,"endColumn":24},{"ruleId":"574","severity":1,"message":"575","line":73,"column":7,"nodeType":"492","messageId":"576","endLine":73,"endColumn":13,"fix":"577"},{"ruleId":"578","severity":1,"message":"579","line":73,"column":7,"nodeType":"572","messageId":"580","endLine":74,"endColumn":24},{"ruleId":"490","severity":1,"message":"581","line":79,"column":11,"nodeType":"492","messageId":"493","endLine":79,"endColumn":21},{"ruleId":"490","severity":1,"message":"501","line":4,"column":117,"nodeType":"492","messageId":"493","endLine":4,"endColumn":121},{"ruleId":"490","severity":1,"message":"582","line":5,"column":8,"nodeType":"492","messageId":"493","endLine":5,"endColumn":17},{"ruleId":"490","severity":1,"message":"583","line":7,"column":16,"nodeType":"492","messageId":"493","endLine":7,"endColumn":21},{"ruleId":"490","severity":1,"message":"584","line":32,"column":6,"nodeType":"492","messageId":"493","endLine":32,"endColumn":13},{"ruleId":"541","severity":1,"message":"545","line":198,"column":22,"nodeType":"543","messageId":"544","endLine":198,"endColumn":24},{"ruleId":"541","severity":1,"message":"545","line":205,"column":13,"nodeType":"543","messageId":"544","endLine":205,"endColumn":15},{"ruleId":"541","severity":1,"message":"542","line":211,"column":32,"nodeType":"543","messageId":"544","endLine":211,"endColumn":34},{"ruleId":"541","severity":1,"message":"545","line":213,"column":45,"nodeType":"543","messageId":"544","endLine":213,"endColumn":47},{"ruleId":"585","severity":1,"message":"586","line":220,"column":26,"nodeType":"587","messageId":"588","endLine":220,"endColumn":28},{"ruleId":"541","severity":1,"message":"545","line":245,"column":41,"nodeType":"543","messageId":"544","endLine":245,"endColumn":43},{"ruleId":"541","severity":1,"message":"545","line":263,"column":21,"nodeType":"543","messageId":"544","endLine":263,"endColumn":23},{"ruleId":"541","severity":1,"message":"545","line":282,"column":22,"nodeType":"543","messageId":"544","endLine":282,"endColumn":24},{"ruleId":"541","severity":1,"message":"542","line":369,"column":60,"nodeType":"543","messageId":"544","endLine":369,"endColumn":62},{"ruleId":"585","severity":1,"message":"586","line":378,"column":21,"nodeType":"587","messageId":"588","endLine":378,"endColumn":23},{"ruleId":"541","severity":1,"message":"545","line":393,"column":36,"nodeType":"543","messageId":"544","endLine":393,"endColumn":38},{"ruleId":"541","severity":1,"message":"545","line":394,"column":35,"nodeType":"543","messageId":"544","endLine":394,"endColumn":37},{"ruleId":"541","severity":1,"message":"545","line":395,"column":35,"nodeType":"543","messageId":"544","endLine":395,"endColumn":37},{"ruleId":"541","severity":1,"message":"545","line":396,"column":31,"nodeType":"543","messageId":"544","endLine":396,"endColumn":33},{"ruleId":"541","severity":1,"message":"545","line":398,"column":38,"nodeType":"543","messageId":"544","endLine":398,"endColumn":40},{"ruleId":"541","severity":1,"message":"545","line":399,"column":48,"nodeType":"543","messageId":"544","endLine":399,"endColumn":50},{"ruleId":"490","severity":1,"message":"589","line":440,"column":33,"nodeType":"492","messageId":"493","endLine":440,"endColumn":44},{"ruleId":"541","severity":1,"message":"545","line":450,"column":22,"nodeType":"543","messageId":"544","endLine":450,"endColumn":24},{"ruleId":"541","severity":1,"message":"545","line":455,"column":15,"nodeType":"543","messageId":"544","endLine":455,"endColumn":17},{"ruleId":"541","severity":1,"message":"542","line":458,"column":15,"nodeType":"543","messageId":"544","endLine":458,"endColumn":17},{"ruleId":"541","severity":1,"message":"542","line":518,"column":55,"nodeType":"543","messageId":"544","endLine":518,"endColumn":57},{"ruleId":"541","severity":1,"message":"545","line":658,"column":18,"nodeType":"543","messageId":"544","endLine":658,"endColumn":20},{"ruleId":"541","severity":1,"message":"542","line":660,"column":18,"nodeType":"543","messageId":"544","endLine":660,"endColumn":20},{"ruleId":"541","severity":1,"message":"545","line":691,"column":29,"nodeType":"543","messageId":"544","endLine":691,"endColumn":31},{"ruleId":"541","severity":1,"message":"542","line":692,"column":45,"nodeType":"543","messageId":"544","endLine":692,"endColumn":47},{"ruleId":"541","severity":1,"message":"542","line":698,"column":43,"nodeType":"543","messageId":"544","endLine":698,"endColumn":45},{"ruleId":"541","severity":1,"message":"542","line":705,"column":29,"nodeType":"543","messageId":"544","endLine":705,"endColumn":31},{"ruleId":"541","severity":1,"message":"542","line":705,"column":57,"nodeType":"543","messageId":"544","endLine":705,"endColumn":59},{"ruleId":"541","severity":1,"message":"545","line":706,"column":29,"nodeType":"543","messageId":"544","endLine":706,"endColumn":31},{"ruleId":"514","severity":1,"message":"515","line":12,"column":3,"nodeType":"516","messageId":"517","endLine":14,"endColumn":4},{"ruleId":"514","severity":1,"message":"515","line":15,"column":3,"nodeType":"516","messageId":"517","endLine":17,"endColumn":4},{"ruleId":"490","severity":1,"message":"557","line":6,"column":9,"nodeType":"492","messageId":"493","endLine":6,"endColumn":15},{"ruleId":"490","severity":1,"message":"590","line":13,"column":9,"nodeType":"492","messageId":"493","endLine":13,"endColumn":18},{"ruleId":"541","severity":1,"message":"545","line":98,"column":30,"nodeType":"543","messageId":"544","endLine":98,"endColumn":32},{"ruleId":"541","severity":1,"message":"545","line":119,"column":30,"nodeType":"543","messageId":"544","endLine":119,"endColumn":32},{"ruleId":"541","severity":1,"message":"545","line":159,"column":24,"nodeType":"543","messageId":"544","endLine":159,"endColumn":26},{"ruleId":"490","severity":1,"message":"591","line":191,"column":20,"nodeType":"492","messageId":"493","endLine":191,"endColumn":27},{"ruleId":"490","severity":1,"message":"592","line":4,"column":66,"nodeType":"492","messageId":"493","endLine":4,"endColumn":82},{"ruleId":"490","severity":1,"message":"593","line":6,"column":9,"nodeType":"492","messageId":"493","endLine":6,"endColumn":20},{"ruleId":"490","severity":1,"message":"594","line":16,"column":33,"nodeType":"492","messageId":"493","endLine":16,"endColumn":43},{"ruleId":"490","severity":1,"message":"595","line":17,"column":10,"nodeType":"492","messageId":"493","endLine":17,"endColumn":19},{"ruleId":"541","severity":1,"message":"545","line":93,"column":44,"nodeType":"543","messageId":"544","endLine":93,"endColumn":46},{"ruleId":"541","severity":1,"message":"545","line":94,"column":44,"nodeType":"543","messageId":"544","endLine":94,"endColumn":46},{"ruleId":"541","severity":1,"message":"545","line":120,"column":55,"nodeType":"543","messageId":"544","endLine":120,"endColumn":57},{"ruleId":"541","severity":1,"message":"545","line":121,"column":16,"nodeType":"543","messageId":"544","endLine":121,"endColumn":18},{"ruleId":"541","severity":1,"message":"545","line":134,"column":32,"nodeType":"543","messageId":"544","endLine":134,"endColumn":34},{"ruleId":"541","severity":1,"message":"545","line":147,"column":65,"nodeType":"543","messageId":"544","endLine":147,"endColumn":67},{"ruleId":"490","severity":1,"message":"540","line":159,"column":11,"nodeType":"492","messageId":"493","endLine":159,"endColumn":28},{"ruleId":"541","severity":1,"message":"545","line":163,"column":55,"nodeType":"543","messageId":"544","endLine":163,"endColumn":57},{"ruleId":"541","severity":1,"message":"542","line":171,"column":57,"nodeType":"543","messageId":"544","endLine":171,"endColumn":59},{"ruleId":"541","severity":1,"message":"542","line":302,"column":40,"nodeType":"543","messageId":"544","endLine":302,"endColumn":42},{"ruleId":"541","severity":1,"message":"545","line":304,"column":72,"nodeType":"543","messageId":"544","endLine":304,"endColumn":74},{"ruleId":"541","severity":1,"message":"545","line":309,"column":128,"nodeType":"543","messageId":"544","endLine":309,"endColumn":130},{"ruleId":"541","severity":1,"message":"545","line":380,"column":63,"nodeType":"543","messageId":"544","endLine":380,"endColumn":65},{"ruleId":"490","severity":1,"message":"537","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":13},{"ruleId":"490","severity":1,"message":"596","line":4,"column":14,"nodeType":"492","messageId":"493","endLine":4,"endColumn":18},{"ruleId":"514","severity":1,"message":"515","line":30,"column":3,"nodeType":"516","messageId":"517","endLine":32,"endColumn":4},{"ruleId":"541","severity":1,"message":"545","line":38,"column":46,"nodeType":"543","messageId":"544","endLine":38,"endColumn":48},{"ruleId":"541","severity":1,"message":"545","line":65,"column":12,"nodeType":"543","messageId":"544","endLine":65,"endColumn":14},{"ruleId":"541","severity":1,"message":"542","line":75,"column":14,"nodeType":"543","messageId":"544","endLine":75,"endColumn":16},{"ruleId":"541","severity":1,"message":"545","line":82,"column":12,"nodeType":"543","messageId":"544","endLine":82,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":83,"column":12,"nodeType":"543","messageId":"544","endLine":83,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":93,"column":43,"nodeType":"543","messageId":"544","endLine":93,"endColumn":45},{"ruleId":"541","severity":1,"message":"542","line":94,"column":14,"nodeType":"543","messageId":"544","endLine":94,"endColumn":16},{"ruleId":"541","severity":1,"message":"545","line":102,"column":12,"nodeType":"543","messageId":"544","endLine":102,"endColumn":14},{"ruleId":"541","severity":1,"message":"542","line":113,"column":14,"nodeType":"543","messageId":"544","endLine":113,"endColumn":16},{"ruleId":"514","severity":1,"message":"515","line":9,"column":3,"nodeType":"516","messageId":"517","endLine":11,"endColumn":4},{"ruleId":"514","severity":1,"message":"515","line":10,"column":3,"nodeType":"516","messageId":"517","endLine":12,"endColumn":4},{"ruleId":"490","severity":1,"message":"597","line":5,"column":13,"nodeType":"492","messageId":"493","endLine":5,"endColumn":18},{"ruleId":"490","severity":1,"message":"598","line":2,"column":55,"nodeType":"492","messageId":"493","endLine":2,"endColumn":65},{"ruleId":"514","severity":1,"message":"515","line":14,"column":3,"nodeType":"516","messageId":"517","endLine":16,"endColumn":4},{"ruleId":"490","severity":1,"message":"547","line":6,"column":21,"nodeType":"492","messageId":"493","endLine":6,"endColumn":31},{"ruleId":"490","severity":1,"message":"599","line":6,"column":55,"nodeType":"492","messageId":"493","endLine":6,"endColumn":65},{"ruleId":"490","severity":1,"message":"600","line":6,"column":77,"nodeType":"492","messageId":"493","endLine":6,"endColumn":86},{"ruleId":"490","severity":1,"message":"601","line":9,"column":8,"nodeType":"492","messageId":"493","endLine":9,"endColumn":21},{"ruleId":"490","severity":1,"message":"602","line":11,"column":9,"nodeType":"492","messageId":"493","endLine":11,"endColumn":20},{"ruleId":"541","severity":1,"message":"542","line":65,"column":27,"nodeType":"543","messageId":"544","endLine":65,"endColumn":29},{"ruleId":"585","severity":1,"message":"586","line":67,"column":41,"nodeType":"587","messageId":"588","endLine":67,"endColumn":43},{"ruleId":"585","severity":1,"message":"586","line":85,"column":18,"nodeType":"587","messageId":"588","endLine":85,"endColumn":20},{"ruleId":"541","severity":1,"message":"545","line":86,"column":19,"nodeType":"543","messageId":"544","endLine":86,"endColumn":21},{"ruleId":"585","severity":1,"message":"603","line":90,"column":19,"nodeType":"587","messageId":"604","endLine":90,"endColumn":21},{"ruleId":"541","severity":1,"message":"545","line":91,"column":53,"nodeType":"543","messageId":"544","endLine":91,"endColumn":55},{"ruleId":"541","severity":1,"message":"545","line":92,"column":18,"nodeType":"543","messageId":"544","endLine":92,"endColumn":20},{"ruleId":"585","severity":1,"message":"586","line":92,"column":32,"nodeType":"605","messageId":"606","endLine":92,"endColumn":38},{"ruleId":"585","severity":1,"message":"586","line":110,"column":27,"nodeType":"587","messageId":"588","endLine":110,"endColumn":29},{"ruleId":"541","severity":1,"message":"545","line":111,"column":68,"nodeType":"543","messageId":"544","endLine":111,"endColumn":70},{"ruleId":"541","severity":1,"message":"542","line":112,"column":18,"nodeType":"543","messageId":"544","endLine":112,"endColumn":20},{"ruleId":"541","severity":1,"message":"545","line":127,"column":14,"nodeType":"543","messageId":"544","endLine":127,"endColumn":16},{"ruleId":"541","severity":1,"message":"545","line":131,"column":22,"nodeType":"543","messageId":"544","endLine":131,"endColumn":24},{"ruleId":"541","severity":1,"message":"545","line":154,"column":64,"nodeType":"543","messageId":"544","endLine":154,"endColumn":66},{"ruleId":"490","severity":1,"message":"607","line":6,"column":68,"nodeType":"492","messageId":"493","endLine":6,"endColumn":91},{"ruleId":"490","severity":1,"message":"547","line":6,"column":211,"nodeType":"492","messageId":"493","endLine":6,"endColumn":221},{"ruleId":"490","severity":1,"message":"602","line":10,"column":9,"nodeType":"492","messageId":"493","endLine":10,"endColumn":20},{"ruleId":"490","severity":1,"message":"608","line":12,"column":22,"nodeType":"492","messageId":"493","endLine":12,"endColumn":31},{"ruleId":"490","severity":1,"message":"559","line":14,"column":8,"nodeType":"492","messageId":"493","endLine":14,"endColumn":16},{"ruleId":"490","severity":1,"message":"609","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":15},{"ruleId":"541","severity":1,"message":"545","line":119,"column":24,"nodeType":"543","messageId":"544","endLine":119,"endColumn":26},{"ruleId":"541","severity":1,"message":"542","line":125,"column":28,"nodeType":"543","messageId":"544","endLine":125,"endColumn":30},{"ruleId":"541","severity":1,"message":"542","line":125,"column":78,"nodeType":"543","messageId":"544","endLine":125,"endColumn":80},{"ruleId":"541","severity":1,"message":"542","line":126,"column":28,"nodeType":"543","messageId":"544","endLine":126,"endColumn":30},{"ruleId":"541","severity":1,"message":"542","line":130,"column":43,"nodeType":"543","messageId":"544","endLine":130,"endColumn":45},{"ruleId":"585","severity":1,"message":"586","line":135,"column":43,"nodeType":"587","messageId":"588","endLine":135,"endColumn":45},{"ruleId":"585","severity":1,"message":"586","line":151,"column":43,"nodeType":"587","messageId":"588","endLine":151,"endColumn":45},{"ruleId":"585","severity":1,"message":"586","line":189,"column":23,"nodeType":"587","messageId":"588","endLine":189,"endColumn":25},{"ruleId":"585","severity":1,"message":"586","line":190,"column":31,"nodeType":"587","messageId":"588","endLine":190,"endColumn":33},{"ruleId":"541","severity":1,"message":"545","line":191,"column":27,"nodeType":"543","messageId":"544","endLine":191,"endColumn":29},{"ruleId":"585","severity":1,"message":"586","line":235,"column":29,"nodeType":"587","messageId":"588","endLine":235,"endColumn":31},{"ruleId":"541","severity":1,"message":"545","line":236,"column":25,"nodeType":"543","messageId":"544","endLine":236,"endColumn":27},{"ruleId":"490","severity":1,"message":"610","line":251,"column":12,"nodeType":"492","messageId":"493","endLine":251,"endColumn":24},{"ruleId":"490","severity":1,"message":"611","line":251,"column":25,"nodeType":"492","messageId":"493","endLine":251,"endColumn":29},{"ruleId":"585","severity":1,"message":"586","line":282,"column":29,"nodeType":"587","messageId":"588","endLine":282,"endColumn":31},{"ruleId":"541","severity":1,"message":"545","line":283,"column":26,"nodeType":"543","messageId":"544","endLine":283,"endColumn":28},{"ruleId":"490","severity":1,"message":"612","line":294,"column":25,"nodeType":"492","messageId":"493","endLine":294,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":297,"column":28,"nodeType":"587","messageId":"588","endLine":297,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":313,"column":21,"nodeType":"587","messageId":"588","endLine":313,"endColumn":23},{"ruleId":"541","severity":1,"message":"545","line":314,"column":55,"nodeType":"543","messageId":"544","endLine":314,"endColumn":57},{"ruleId":"541","severity":1,"message":"545","line":314,"column":74,"nodeType":"543","messageId":"544","endLine":314,"endColumn":76},{"ruleId":"541","severity":1,"message":"545","line":340,"column":12,"nodeType":"543","messageId":"544","endLine":340,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":343,"column":12,"nodeType":"543","messageId":"544","endLine":343,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":346,"column":12,"nodeType":"543","messageId":"544","endLine":346,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":353,"column":43,"nodeType":"543","messageId":"544","endLine":353,"endColumn":45},{"ruleId":"490","severity":1,"message":"613","line":384,"column":11,"nodeType":"492","messageId":"493","endLine":384,"endColumn":14},{"ruleId":"541","severity":1,"message":"545","line":385,"column":65,"nodeType":"543","messageId":"544","endLine":385,"endColumn":67},{"ruleId":"541","severity":1,"message":"545","line":385,"column":84,"nodeType":"543","messageId":"544","endLine":385,"endColumn":86},{"ruleId":"541","severity":1,"message":"545","line":564,"column":49,"nodeType":"543","messageId":"544","endLine":564,"endColumn":51},{"ruleId":"541","severity":1,"message":"545","line":565,"column":42,"nodeType":"543","messageId":"544","endLine":565,"endColumn":44},{"ruleId":"541","severity":1,"message":"545","line":572,"column":59,"nodeType":"543","messageId":"544","endLine":572,"endColumn":61},{"ruleId":"490","severity":1,"message":"500","line":4,"column":69,"nodeType":"492","messageId":"493","endLine":4,"endColumn":72},{"ruleId":"490","severity":1,"message":"506","line":4,"column":73,"nodeType":"492","messageId":"493","endLine":4,"endColumn":80},{"ruleId":"490","severity":1,"message":"600","line":4,"column":81,"nodeType":"492","messageId":"493","endLine":4,"endColumn":90},{"ruleId":"490","severity":1,"message":"519","line":4,"column":91,"nodeType":"492","messageId":"493","endLine":4,"endColumn":97},{"ruleId":"490","severity":1,"message":"551","line":4,"column":98,"nodeType":"492","messageId":"493","endLine":4,"endColumn":104},{"ruleId":"490","severity":1,"message":"495","line":4,"column":105,"nodeType":"492","messageId":"493","endLine":4,"endColumn":109},{"ruleId":"490","severity":1,"message":"496","line":4,"column":117,"nodeType":"492","messageId":"493","endLine":4,"endColumn":125},{"ruleId":"490","severity":1,"message":"592","line":4,"column":126,"nodeType":"492","messageId":"493","endLine":4,"endColumn":142},{"ruleId":"490","severity":1,"message":"552","line":4,"column":143,"nodeType":"492","messageId":"493","endLine":4,"endColumn":157},{"ruleId":"490","severity":1,"message":"497","line":4,"column":158,"nodeType":"492","messageId":"493","endLine":4,"endColumn":170},{"ruleId":"490","severity":1,"message":"593","line":8,"column":9,"nodeType":"492","messageId":"493","endLine":8,"endColumn":20},{"ruleId":"490","severity":1,"message":"608","line":10,"column":9,"nodeType":"492","messageId":"493","endLine":10,"endColumn":18},{"ruleId":"490","severity":1,"message":"614","line":10,"column":19,"nodeType":"492","messageId":"493","endLine":10,"endColumn":25},{"ruleId":"490","severity":1,"message":"615","line":10,"column":26,"nodeType":"492","messageId":"493","endLine":10,"endColumn":32},{"ruleId":"490","severity":1,"message":"594","line":10,"column":79,"nodeType":"492","messageId":"493","endLine":10,"endColumn":89},{"ruleId":"490","severity":1,"message":"616","line":10,"column":90,"nodeType":"492","messageId":"493","endLine":10,"endColumn":99},{"ruleId":"514","severity":1,"message":"515","line":93,"column":3,"nodeType":"516","messageId":"517","endLine":95,"endColumn":4},{"ruleId":"541","severity":1,"message":"545","line":105,"column":55,"nodeType":"543","messageId":"544","endLine":105,"endColumn":57},{"ruleId":"617","severity":1,"message":"618","line":112,"column":37,"nodeType":"619","messageId":"620","endLine":112,"endColumn":39},{"ruleId":"617","severity":1,"message":"618","line":112,"column":68,"nodeType":"619","messageId":"620","endLine":112,"endColumn":70},{"ruleId":"541","severity":1,"message":"542","line":144,"column":22,"nodeType":"543","messageId":"544","endLine":144,"endColumn":24},{"ruleId":"541","severity":1,"message":"542","line":144,"column":43,"nodeType":"543","messageId":"544","endLine":144,"endColumn":45},{"ruleId":"541","severity":1,"message":"545","line":145,"column":23,"nodeType":"543","messageId":"544","endLine":145,"endColumn":25},"no-native-reassign",["621"],"no-negated-in-lhs",["622"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'Paper' is defined but never used.","'Shadows' is defined but never used.","'Divider' is defined but never used.","'AccountBoxIcon' is defined but never used.","'TopBar' is defined but never used.","'EmojiPeopleIcon' is defined but never used.","'SearchIcon' is defined but never used.","'DataUsageIcon' is defined but never used.","'NavLink' is defined but never used.","'RootState' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'classes' is assigned a value but never used.","'Button' is defined but never used.","'Hidden' is defined but never used.","'Drawer' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'Tooltip' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'makeStyles' is defined but never used.","'StyleRules' is defined but never used.","'mobileOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'EventCard' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'red' is defined but never used.","'dayEditor' is defined but never used.","'AlarmOnIcon' is defined but never used.","'undecided' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'EventList' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'dis' is assigned a value but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'Collapse' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'Menu' is defined but never used.","'colors' is defined but never used.","'User' is defined but never used.","'Progress' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'tabindex' is assigned a value but never used.",["621"],["622"],"'EditIcon' is defined but never used.",["621"],["622"],"'SnackbarContent' is defined but never used.","'Events' is defined but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'defalt:' is defined but never used.","unused",{"range":"623","text":"624"},"no-unreachable","Unreachable code.","unreachableCode","'snackColor' is assigned a value but never used.","'FormGroup' is defined but never used.","'Modal' is defined but never used.","'Element' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'competition' is assigned a value but never used.","'SearchLog' is defined but never used.","'session' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Competition' is defined but never used.","'dateFormat' is defined but never used.","'useParams' is defined but never used.","'grey' is defined but never used.","'types' is defined but never used.","'RouteProps' is defined but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'DeleteRounded' is defined but never used.","'Participant' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'ListItemSecondaryAction' is defined but never used.","'getStatus' is defined but never used.","'Message' is defined but never used.","'selectColumn' is assigned a value but never used.","'open' is assigned a value but never used.","'error' is assigned a value but never used.","'log' is assigned a value but never used.","'getAge' is defined but never used.","'getSex' is defined but never used.","'getAvatar' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",[2181,2197],""]